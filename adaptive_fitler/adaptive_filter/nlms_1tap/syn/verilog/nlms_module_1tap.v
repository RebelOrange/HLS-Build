// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nlms_module_1tap_nlms_module_1tap,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-3,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.911000,HLS_SYN_LAT=86,HLS_SYN_TPT=86,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=13499,HLS_SYN_LUT=10057,HLS_VERSION=2021_1}" *)

module nlms_module_1tap (
        ap_clk,
        ap_rst_n,
        main_in_TDATA,
        main_in_TVALID,
        main_in_TREADY,
        main_in_TKEEP,
        main_in_TSTRB,
        main_in_TLAST,
        aux_in_TDATA,
        aux_in_TVALID,
        aux_in_TREADY,
        aux_in_TKEEP,
        aux_in_TSTRB,
        aux_in_TLAST,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        output_r_TKEEP,
        output_r_TSTRB,
        output_r_TLAST,
        mu
);

parameter    ap_ST_iter0_fsm_state1 = 86'd1;
parameter    ap_ST_iter0_fsm_state2 = 86'd2;
parameter    ap_ST_iter0_fsm_state3 = 86'd4;
parameter    ap_ST_iter0_fsm_state4 = 86'd8;
parameter    ap_ST_iter0_fsm_state5 = 86'd16;
parameter    ap_ST_iter0_fsm_state6 = 86'd32;
parameter    ap_ST_iter0_fsm_state7 = 86'd64;
parameter    ap_ST_iter0_fsm_state8 = 86'd128;
parameter    ap_ST_iter0_fsm_state9 = 86'd256;
parameter    ap_ST_iter0_fsm_state10 = 86'd512;
parameter    ap_ST_iter0_fsm_state11 = 86'd1024;
parameter    ap_ST_iter0_fsm_state12 = 86'd2048;
parameter    ap_ST_iter0_fsm_state13 = 86'd4096;
parameter    ap_ST_iter0_fsm_state14 = 86'd8192;
parameter    ap_ST_iter0_fsm_state15 = 86'd16384;
parameter    ap_ST_iter0_fsm_state16 = 86'd32768;
parameter    ap_ST_iter0_fsm_state17 = 86'd65536;
parameter    ap_ST_iter0_fsm_state18 = 86'd131072;
parameter    ap_ST_iter0_fsm_state19 = 86'd262144;
parameter    ap_ST_iter0_fsm_state20 = 86'd524288;
parameter    ap_ST_iter0_fsm_state21 = 86'd1048576;
parameter    ap_ST_iter0_fsm_state22 = 86'd2097152;
parameter    ap_ST_iter0_fsm_state23 = 86'd4194304;
parameter    ap_ST_iter0_fsm_state24 = 86'd8388608;
parameter    ap_ST_iter0_fsm_state25 = 86'd16777216;
parameter    ap_ST_iter0_fsm_state26 = 86'd33554432;
parameter    ap_ST_iter0_fsm_state27 = 86'd67108864;
parameter    ap_ST_iter0_fsm_state28 = 86'd134217728;
parameter    ap_ST_iter0_fsm_state29 = 86'd268435456;
parameter    ap_ST_iter0_fsm_state30 = 86'd536870912;
parameter    ap_ST_iter0_fsm_state31 = 86'd1073741824;
parameter    ap_ST_iter0_fsm_state32 = 86'd2147483648;
parameter    ap_ST_iter0_fsm_state33 = 86'd4294967296;
parameter    ap_ST_iter0_fsm_state34 = 86'd8589934592;
parameter    ap_ST_iter0_fsm_state35 = 86'd17179869184;
parameter    ap_ST_iter0_fsm_state36 = 86'd34359738368;
parameter    ap_ST_iter0_fsm_state37 = 86'd68719476736;
parameter    ap_ST_iter0_fsm_state38 = 86'd137438953472;
parameter    ap_ST_iter0_fsm_state39 = 86'd274877906944;
parameter    ap_ST_iter0_fsm_state40 = 86'd549755813888;
parameter    ap_ST_iter0_fsm_state41 = 86'd1099511627776;
parameter    ap_ST_iter0_fsm_state42 = 86'd2199023255552;
parameter    ap_ST_iter0_fsm_state43 = 86'd4398046511104;
parameter    ap_ST_iter0_fsm_state44 = 86'd8796093022208;
parameter    ap_ST_iter0_fsm_state45 = 86'd17592186044416;
parameter    ap_ST_iter0_fsm_state46 = 86'd35184372088832;
parameter    ap_ST_iter0_fsm_state47 = 86'd70368744177664;
parameter    ap_ST_iter0_fsm_state48 = 86'd140737488355328;
parameter    ap_ST_iter0_fsm_state49 = 86'd281474976710656;
parameter    ap_ST_iter0_fsm_state50 = 86'd562949953421312;
parameter    ap_ST_iter0_fsm_state51 = 86'd1125899906842624;
parameter    ap_ST_iter0_fsm_state52 = 86'd2251799813685248;
parameter    ap_ST_iter0_fsm_state53 = 86'd4503599627370496;
parameter    ap_ST_iter0_fsm_state54 = 86'd9007199254740992;
parameter    ap_ST_iter0_fsm_state55 = 86'd18014398509481984;
parameter    ap_ST_iter0_fsm_state56 = 86'd36028797018963968;
parameter    ap_ST_iter0_fsm_state57 = 86'd72057594037927936;
parameter    ap_ST_iter0_fsm_state58 = 86'd144115188075855872;
parameter    ap_ST_iter0_fsm_state59 = 86'd288230376151711744;
parameter    ap_ST_iter0_fsm_state60 = 86'd576460752303423488;
parameter    ap_ST_iter0_fsm_state61 = 86'd1152921504606846976;
parameter    ap_ST_iter0_fsm_state62 = 86'd2305843009213693952;
parameter    ap_ST_iter0_fsm_state63 = 86'd4611686018427387904;
parameter    ap_ST_iter0_fsm_state64 = 86'd9223372036854775808;
parameter    ap_ST_iter0_fsm_state65 = 86'd18446744073709551616;
parameter    ap_ST_iter0_fsm_state66 = 86'd36893488147419103232;
parameter    ap_ST_iter0_fsm_state67 = 86'd73786976294838206464;
parameter    ap_ST_iter0_fsm_state68 = 86'd147573952589676412928;
parameter    ap_ST_iter0_fsm_state69 = 86'd295147905179352825856;
parameter    ap_ST_iter0_fsm_state70 = 86'd590295810358705651712;
parameter    ap_ST_iter0_fsm_state71 = 86'd1180591620717411303424;
parameter    ap_ST_iter0_fsm_state72 = 86'd2361183241434822606848;
parameter    ap_ST_iter0_fsm_state73 = 86'd4722366482869645213696;
parameter    ap_ST_iter0_fsm_state74 = 86'd9444732965739290427392;
parameter    ap_ST_iter0_fsm_state75 = 86'd18889465931478580854784;
parameter    ap_ST_iter0_fsm_state76 = 86'd37778931862957161709568;
parameter    ap_ST_iter0_fsm_state77 = 86'd75557863725914323419136;
parameter    ap_ST_iter0_fsm_state78 = 86'd151115727451828646838272;
parameter    ap_ST_iter0_fsm_state79 = 86'd302231454903657293676544;
parameter    ap_ST_iter0_fsm_state80 = 86'd604462909807314587353088;
parameter    ap_ST_iter0_fsm_state81 = 86'd1208925819614629174706176;
parameter    ap_ST_iter0_fsm_state82 = 86'd2417851639229258349412352;
parameter    ap_ST_iter0_fsm_state83 = 86'd4835703278458516698824704;
parameter    ap_ST_iter0_fsm_state84 = 86'd9671406556917033397649408;
parameter    ap_ST_iter0_fsm_state85 = 86'd19342813113834066795298816;
parameter    ap_ST_iter0_fsm_state86 = 86'd38685626227668133590597632;
parameter    ap_ST_iter1_fsm_state87 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] main_in_TDATA;
input   main_in_TVALID;
output   main_in_TREADY;
input  [3:0] main_in_TKEEP;
input  [3:0] main_in_TSTRB;
input  [0:0] main_in_TLAST;
input  [31:0] aux_in_TDATA;
input   aux_in_TVALID;
output   aux_in_TREADY;
input  [3:0] aux_in_TKEEP;
input  [3:0] aux_in_TSTRB;
input  [0:0] aux_in_TLAST;
output  [31:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
output  [3:0] output_r_TKEEP;
output  [3:0] output_r_TSTRB;
output  [0:0] output_r_TLAST;
input  [31:0] mu;

 reg    ap_rst_n_inv;
reg   [63:0] lms_weights_real;
reg  signed [63:0] lms_weights_imag_V_0;
reg    lms_aux_reg_M_real_V_ce0;
reg    lms_aux_reg_M_real_V_we0;
reg    lms_aux_reg_M_real_V_ce1;
wire   [15:0] lms_aux_reg_M_real_V_q1;
reg    lms_aux_reg_M_imag_V_ce0;
reg    lms_aux_reg_M_imag_V_we0;
wire   [15:0] lms_aux_reg_M_imag_V_d0;
reg    lms_aux_reg_M_imag_V_ce1;
wire   [15:0] lms_aux_reg_M_imag_V_q1;
reg    main_in_TDATA_blk_n;
reg   [85:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state87;
reg    aux_in_TDATA_blk_n;
reg    output_r_TDATA_blk_n;
wire    ap_CS_iter0_fsm_state10;
wire    ap_CS_iter0_fsm_state11;
reg   [31:0] p_0_reg_1596;
reg    ap_block_state1_pp0_stage0_iter0;
wire    regslice_both_output_V_data_V_U_apdone_blk;
reg    ap_block_state87_pp0_stage0_iter1;
reg   [0:0] p_s_reg_1602;
wire   [15:0] aux_tmp_data_M_real_V_fu_267_p1;
reg  signed [15:0] aux_tmp_data_M_real_V_reg_1607;
wire  signed [15:0] aux_tmp_data_M_imag_V_fu_272_p4;
reg  signed [15:0] aux_tmp_data_M_imag_V_reg_1612;
wire  signed [79:0] sext_ln1169_fu_283_p1;
reg  signed [79:0] sext_ln1169_reg_1617;
reg  signed [63:0] lhs_V_1_reg_1625;
wire  signed [79:0] sext_ln1171_fu_291_p1;
wire  signed [79:0] sext_ln1171_3_fu_301_p1;
reg  signed [79:0] sext_ln1171_3_reg_1636;
wire  signed [31:0] sext_ln1169_2_fu_315_p1;
wire  signed [31:0] sext_ln1169_5_fu_319_p1;
reg   [15:0] r_V_12_reg_1655;
reg  signed [63:0] lhs_V_4_reg_1660;
wire    ap_CS_iter0_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire  signed [31:0] sext_ln1169_3_fu_359_p1;
reg   [15:0] r_V_8_reg_1686;
wire  signed [31:0] sext_ln1169_6_fu_363_p1;
wire   [79:0] grp_fu_295_p2;
reg   [79:0] r_V_reg_1697;
wire    ap_CS_iter0_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
wire   [79:0] grp_fu_305_p2;
reg   [79:0] r_V_3_reg_1702;
wire   [63:0] trunc_ln1245_fu_366_p1;
reg   [63:0] trunc_ln1245_reg_1707;
wire  signed [31:0] sext_ln1169_1_fu_370_p1;
wire  signed [31:0] sext_ln1169_4_fu_373_p1;
wire   [78:0] grp_fu_348_p2;
reg   [78:0] mul_ln1171_reg_1724;
wire    ap_CS_iter0_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire   [79:0] grp_fu_354_p2;
reg   [79:0] mul_ln1171_1_reg_1729;
wire   [63:0] trunc_ln1171_fu_376_p1;
reg   [63:0] trunc_ln1171_reg_1734;
wire  signed [31:0] grp_fu_1552_p2;
wire  signed [31:0] grp_fu_1558_p2;
wire   [78:0] r_V_21_fu_380_p2;
reg   [78:0] r_V_21_reg_1749;
wire    ap_CS_iter0_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
reg   [0:0] p_Result_6_reg_1754;
wire   [63:0] accum_imag_V_fu_397_p2;
reg   [63:0] accum_imag_V_reg_1760;
reg   [0:0] p_Result_7_reg_1765;
reg   [15:0] tmp_1_reg_1771;
wire   [31:0] grp_fu_1564_p3;
wire   [31:0] grp_fu_1572_p3;
wire   [80:0] ret_V_fu_425_p2;
reg   [80:0] ret_V_reg_1787;
wire    ap_CS_iter0_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
reg   [0:0] p_Result_s_reg_1792;
reg   [0:0] p_Result_1_reg_1798;
reg   [16:0] tmp_reg_1804;
wire   [63:0] accum_imag_V_1_fu_513_p3;
reg   [63:0] accum_imag_V_1_reg_1810;
wire   [31:0] grp_fu_1588_p3;
reg  signed [31:0] add_ln737_2_reg_1815;
wire   [31:0] grp_fu_1580_p3;
reg  signed [31:0] add_ln737_4_reg_1820;
wire   [63:0] accum_real_V_1_fu_579_p3;
reg   [63:0] accum_real_V_1_reg_1825;
wire    ap_CS_iter0_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
wire   [64:0] ret_V_11_fu_611_p2;
reg   [64:0] ret_V_11_reg_1830;
reg   [0:0] p_Result_10_reg_1842;
reg   [0:0] p_Result_11_reg_1850;
(* use_dsp48 = "no" *) wire   [31:0] add_ln737_fu_633_p2;
reg   [31:0] add_ln737_reg_1856;
wire   [64:0] ret_V_10_fu_655_p2;
reg   [64:0] ret_V_10_reg_1862;
wire    ap_CS_iter0_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
reg   [0:0] p_Result_8_reg_1874;
reg   [0:0] p_Result_9_reg_1882;
wire   [0:0] xor_ln794_3_fu_680_p2;
reg   [0:0] xor_ln794_3_reg_1888;
wire   [63:0] error_imag_V_fu_702_p3;
reg   [63:0] error_imag_V_reg_1893;
wire   [0:0] icmp_ln1551_fu_717_p2;
reg   [0:0] icmp_ln1551_reg_1898;
wire   [0:0] r_1_fu_735_p2;
reg   [0:0] r_1_reg_1907;
wire   [0:0] xor_ln794_2_fu_744_p2;
reg   [0:0] xor_ln794_2_reg_1912;
wire    ap_CS_iter0_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
wire   [63:0] error_real_V_fu_766_p3;
reg   [63:0] error_real_V_reg_1917;
wire  signed [79:0] conv7_i205_i_fu_774_p1;
wire   [15:0] p_Val2_13_fu_827_p2;
reg   [15:0] p_Val2_13_reg_1928;
reg   [0:0] p_Result_19_reg_1933;
wire   [0:0] Range2_all_ones_fu_850_p2;
reg   [0:0] Range2_all_ones_reg_1940;
wire   [0:0] Range1_all_ones_fu_865_p2;
reg   [0:0] Range1_all_ones_reg_1945;
wire   [0:0] Range1_all_zeros_fu_871_p2;
reg   [0:0] Range1_all_zeros_reg_1952;
wire   [15:0] p_Val2_16_fu_914_p2;
reg   [15:0] p_Val2_16_reg_1957;
wire   [0:0] carry_3_fu_934_p2;
reg   [0:0] carry_3_reg_1962;
wire   [0:0] Range1_all_ones_3_fu_964_p2;
reg   [0:0] Range1_all_ones_3_reg_1967;
wire   [0:0] overflow_8_fu_1023_p2;
reg   [0:0] overflow_8_reg_1972;
wire   [0:0] and_ln795_2_fu_1028_p2;
reg   [0:0] and_ln795_2_reg_1978;
wire  signed [79:0] conv7_i221_i_fu_1034_p1;
reg    ap_block_state10_pp0_stage9_iter0;
wire   [79:0] grp_fu_777_p2;
reg   [79:0] r_V_23_reg_1994;
reg    ap_block_state11_pp0_stage10_iter0;
wire   [79:0] grp_fu_782_p2;
reg   [79:0] r_V_26_reg_1999;
wire   [79:0] grp_fu_1037_p2;
reg   [79:0] r_V_22_reg_2004;
wire    ap_CS_iter0_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
wire   [79:0] grp_fu_1042_p2;
reg   [79:0] r_V_25_reg_2009;
wire   [80:0] ret_V_4_fu_1214_p2;
reg  signed [80:0] ret_V_4_reg_2014;
wire    ap_CS_iter0_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
wire   [79:0] ret_V_6_fu_1220_p2;
reg  signed [79:0] ret_V_6_reg_2019;
wire   [63:0] grp_fu_726_p2;
reg   [63:0] udiv_ln712_reg_2024;
wire    ap_CS_iter0_fsm_state76;
wire    ap_block_state76_pp0_stage75_iter0;
wire   [62:0] select_ln340_fu_1240_p3;
reg   [62:0] select_ln340_reg_2029;
wire    ap_CS_iter0_fsm_state77;
wire    ap_block_state77_pp0_stage76_iter0;
wire    ap_CS_iter0_fsm_state78;
wire    ap_block_state78_pp0_stage77_iter0;
wire   [94:0] grp_fu_1255_p2;
reg   [94:0] r_V_16_reg_2044;
wire    ap_CS_iter0_fsm_state80;
wire    ap_block_state80_pp0_stage79_iter0;
wire   [174:0] zext_ln1168_fu_1261_p1;
wire    ap_CS_iter0_fsm_state81;
wire    ap_block_state81_pp0_stage80_iter0;
wire   [174:0] grp_fu_1267_p2;
reg   [174:0] r_V_24_reg_2065;
wire    ap_CS_iter0_fsm_state83;
wire    ap_block_state83_pp0_stage82_iter0;
wire   [174:0] grp_fu_1276_p2;
reg   [174:0] r_V_27_reg_2070;
wire    ap_CS_iter0_fsm_state84;
wire    ap_block_state84_pp0_stage83_iter0;
reg   [0:0] p_Result_13_reg_2085;
wire    ap_CS_iter0_fsm_state85;
wire    ap_block_state85_pp0_stage84_iter0;
reg   [63:0] p_Val2_8_reg_2091;
reg   [63:0] p_Val2_8_reg_2091_pp0_iter0_reg;
wire    ap_CS_iter0_fsm_state86;
wire    ap_block_state86_pp0_stage85_iter0;
reg   [0:0] p_Result_14_reg_2097;
reg   [46:0] tmp_2_reg_2103;
reg   [0:0] p_Result_15_reg_2109;
reg   [63:0] p_Val2_10_reg_2115;
reg   [63:0] p_Val2_10_reg_2115_pp0_iter0_reg;
reg   [0:0] p_Result_16_reg_2121;
reg   [46:0] tmp_3_reg_2127;
wire   [0:0] overflow_5_fu_1401_p2;
reg   [0:0] overflow_5_reg_2133;
wire   [0:0] underflow_2_fu_1423_p2;
reg   [0:0] underflow_2_reg_2139;
wire   [0:0] overflow_6_fu_1443_p2;
reg   [0:0] overflow_6_reg_2146;
wire   [0:0] underflow_3_fu_1465_p2;
reg   [0:0] underflow_3_reg_2152;
reg   [63:0] ap_phi_mux_p_Val2_6_phi_fu_248_p4;
wire   [63:0] trunc_ln56_fu_1224_p1;
wire   [63:0] select_ln340_5_fu_1497_p3;
reg   [63:0] ap_sig_allocacmp_lhs_V_1;
wire   [63:0] select_ln340_6_fu_1538_p3;
wire  signed [63:0] sext_ln1171_fu_291_p0;
wire  signed [63:0] grp_fu_295_p0;
wire  signed [63:0] grp_fu_305_p0;
wire  signed [63:0] r_V_10_fu_311_p0;
wire   [15:0] r_V_10_fu_311_p1;
wire  signed [63:0] r_V_12_fu_323_p1;
wire  signed [15:0] grp_fu_354_p1;
wire   [79:0] ret_V_1_fu_385_p2;
wire  signed [80:0] sext_ln1246_fu_419_p1;
wire  signed [80:0] sext_ln1246_1_fu_422_p1;
wire   [0:0] icmp_ln777_1_fu_457_p2;
wire   [0:0] or_ln794_1_fu_462_p2;
wire   [0:0] xor_ln794_1_fu_467_p2;
wire   [0:0] icmp_ln795_1_fu_483_p2;
wire   [0:0] xor_ln795_1_fu_478_p2;
wire   [0:0] or_ln795_1_fu_488_p2;
wire   [0:0] overflow_1_fu_472_p2;
wire   [0:0] underflow_1_fu_494_p2;
wire   [0:0] or_ln384_1_fu_507_p2;
wire   [63:0] select_ln384_3_fu_499_p3;
wire   [0:0] icmp_ln777_fu_523_p2;
wire   [0:0] or_ln794_fu_528_p2;
wire   [0:0] xor_ln794_fu_533_p2;
wire   [0:0] icmp_ln795_fu_549_p2;
wire   [0:0] xor_ln795_fu_544_p2;
wire   [0:0] or_ln795_fu_554_p2;
wire   [0:0] overflow_fu_538_p2;
wire   [0:0] underflow_fu_560_p2;
wire   [0:0] or_ln384_fu_573_p2;
wire   [63:0] select_ln384_1_fu_565_p3;
wire   [63:0] accum_real_V_fu_520_p1;
wire   [15:0] tmp_5_fu_587_p4;
wire   [47:0] lhs_3_fu_596_p3;
wire  signed [64:0] sext_ln1246_3_fu_604_p1;
wire  signed [64:0] sext_ln712_1_fu_608_p1;
wire   [15:0] trunc_ln737_fu_637_p1;
wire   [47:0] lhs_fu_640_p3;
wire  signed [64:0] sext_ln1246_2_fu_648_p1;
wire  signed [64:0] sext_ln712_fu_652_p1;
wire   [0:0] overflow_3_fu_685_p2;
wire   [0:0] xor_ln340_1_fu_690_p2;
wire   [63:0] select_ln384_5_fu_694_p3;
wire   [63:0] p_Val2_5_fu_677_p1;
wire   [63:0] innerP_V_fu_710_p3;
wire   [63:0] grp_fu_726_p1;
wire   [30:0] trunc_ln727_1_fu_732_p1;
wire   [0:0] overflow_2_fu_749_p2;
wire   [0:0] xor_ln340_fu_754_p2;
wire   [63:0] select_ln384_fu_758_p3;
wire   [63:0] p_Val2_3_fu_741_p1;
wire  signed [63:0] grp_fu_777_p0;
wire  signed [15:0] grp_fu_777_p1;
wire  signed [63:0] grp_fu_782_p0;
wire  signed [15:0] grp_fu_782_p1;
wire   [30:0] trunc_ln727_fu_803_p1;
wire   [0:0] r_fu_806_p2;
wire   [0:0] or_ln406_fu_812_p2;
wire   [0:0] p_Result_17_fu_796_p3;
wire   [0:0] and_ln406_fu_817_p2;
wire   [15:0] p_Val2_12_fu_787_p4;
wire   [15:0] zext_ln415_fu_823_p1;
wire   [15:0] p_Result_2_fu_841_p4;
wire   [16:0] p_Result_3_fu_856_p4;
wire   [0:0] or_ln406_1_fu_900_p2;
wire   [0:0] p_Result_20_fu_886_p3;
wire   [0:0] and_ln406_1_fu_904_p2;
wire   [15:0] p_Val2_15_fu_877_p4;
wire   [15:0] zext_ln415_1_fu_910_p1;
wire   [0:0] p_Result_22_fu_920_p3;
wire   [0:0] p_Result_21_fu_893_p3;
wire   [0:0] xor_ln416_1_fu_928_p2;
wire   [15:0] p_Result_4_fu_940_p4;
wire   [16:0] p_Result_5_fu_955_p4;
wire   [0:0] Range1_all_zeros_1_fu_970_p2;
wire   [0:0] tmp_25_fu_984_p3;
wire   [0:0] Range2_all_ones_1_fu_949_p2;
wire   [0:0] xor_ln789_1_fu_991_p2;
wire   [0:0] and_ln789_1_fu_997_p2;
wire   [0:0] deleted_zeros_1_fu_976_p3;
wire   [0:0] xor_ln794_7_fu_1011_p2;
wire   [0:0] or_ln794_5_fu_1017_p2;
wire   [0:0] deleted_ones_3_fu_1003_p3;
wire  signed [63:0] grp_fu_1037_p0;
wire  signed [15:0] grp_fu_1037_p1;
wire  signed [63:0] grp_fu_1042_p0;
wire  signed [15:0] grp_fu_1042_p1;
wire   [0:0] p_Result_18_fu_1047_p3;
wire   [0:0] xor_ln416_fu_1054_p2;
wire   [0:0] carry_1_fu_1059_p2;
wire   [0:0] tmp_21_fu_1071_p3;
wire   [0:0] xor_ln789_fu_1078_p2;
wire   [0:0] and_ln789_fu_1084_p2;
wire   [0:0] deleted_zeros_fu_1065_p3;
wire   [0:0] xor_ln794_6_fu_1101_p2;
wire   [0:0] or_ln794_4_fu_1107_p2;
wire   [0:0] deleted_ones_fu_1089_p3;
wire   [0:0] and_ln790_fu_1096_p2;
wire   [0:0] and_ln795_fu_1117_p2;
wire   [0:0] or_ln795_4_fu_1122_p2;
wire   [0:0] xor_ln795_4_fu_1128_p2;
wire   [0:0] overflow_7_fu_1112_p2;
wire   [0:0] underflow_4_fu_1134_p2;
wire   [0:0] or_ln384_2_fu_1147_p2;
wire   [15:0] select_ln384_6_fu_1139_p3;
wire   [0:0] and_ln790_1_fu_1160_p2;
wire   [0:0] or_ln795_5_fu_1164_p2;
wire   [0:0] xor_ln795_5_fu_1169_p2;
wire   [0:0] underflow_5_fu_1175_p2;
wire   [0:0] or_ln384_3_fu_1187_p2;
wire   [15:0] select_ln384_8_fu_1180_p3;
wire   [15:0] output_tmp_data_M_imag_V_fu_1192_p3;
wire   [15:0] output_tmp_data_M_real_V_fu_1153_p3;
wire  signed [80:0] sext_ln712_2_fu_1208_p1;
wire  signed [80:0] sext_ln712_3_fu_1211_p1;
wire   [0:0] p_Result_12_fu_1232_p3;
wire   [62:0] trunc_ln755_fu_1228_p1;
wire   [62:0] grp_fu_1255_p0;
wire   [31:0] grp_fu_1255_p1;
wire   [94:0] grp_fu_1267_p0;
wire   [94:0] grp_fu_1276_p0;
wire   [127:0] lhs_V_2_fu_1282_p3;
wire  signed [174:0] grp_fu_1293_p0;
wire   [127:0] lhs_V_5_fu_1298_p3;
wire  signed [174:0] grp_fu_1309_p0;
wire   [174:0] grp_fu_1293_p2;
wire   [174:0] grp_fu_1309_p2;
wire   [0:0] icmp_ln777_2_fu_1386_p2;
wire   [0:0] or_ln794_2_fu_1391_p2;
wire   [0:0] xor_ln794_4_fu_1396_p2;
wire   [0:0] icmp_ln795_2_fu_1412_p2;
wire   [0:0] xor_ln795_2_fu_1407_p2;
wire   [0:0] or_ln795_2_fu_1417_p2;
wire   [0:0] icmp_ln777_3_fu_1428_p2;
wire   [0:0] or_ln794_3_fu_1433_p2;
wire   [0:0] xor_ln794_5_fu_1438_p2;
wire   [0:0] icmp_ln795_3_fu_1454_p2;
wire   [0:0] xor_ln795_3_fu_1449_p2;
wire   [0:0] or_ln795_3_fu_1459_p2;
wire   [0:0] xor_ln340_2_fu_1474_p2;
wire   [0:0] or_ln340_fu_1470_p2;
wire   [0:0] or_ln340_2_fu_1479_p2;
wire   [63:0] select_ln340_3_fu_1484_p3;
wire   [63:0] select_ln388_fu_1491_p3;
wire   [0:0] xor_ln340_3_fu_1515_p2;
wire   [0:0] or_ln340_1_fu_1505_p2;
wire   [0:0] or_ln340_3_fu_1520_p2;
wire   [63:0] select_ln340_4_fu_1525_p3;
wire   [63:0] select_ln388_1_fu_1532_p3;
wire  signed [15:0] grp_fu_1552_p0;
wire  signed [15:0] grp_fu_1552_p1;
wire  signed [15:0] grp_fu_1558_p0;
wire  signed [15:0] grp_fu_1558_p1;
wire  signed [15:0] grp_fu_1564_p0;
wire  signed [15:0] grp_fu_1564_p1;
wire  signed [15:0] grp_fu_1572_p0;
wire  signed [15:0] grp_fu_1572_p1;
wire  signed [15:0] grp_fu_1580_p0;
wire  signed [15:0] grp_fu_1580_p1;
wire  signed [15:0] grp_fu_1588_p0;
wire  signed [15:0] grp_fu_1588_p1;
reg    grp_fu_295_ce;
reg    grp_fu_305_ce;
reg    grp_fu_348_ce;
reg    grp_fu_354_ce;
reg    grp_fu_726_ce;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_CS_iter0_fsm_state14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_CS_iter0_fsm_state15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_CS_iter0_fsm_state16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_CS_iter0_fsm_state17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_CS_iter0_fsm_state18;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_CS_iter0_fsm_state19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_CS_iter0_fsm_state20;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_CS_iter0_fsm_state21;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_CS_iter0_fsm_state22;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_CS_iter0_fsm_state23;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_CS_iter0_fsm_state24;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_CS_iter0_fsm_state25;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_CS_iter0_fsm_state26;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_CS_iter0_fsm_state27;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_CS_iter0_fsm_state28;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_CS_iter0_fsm_state29;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_CS_iter0_fsm_state30;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_CS_iter0_fsm_state31;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_CS_iter0_fsm_state32;
wire    ap_block_state33_pp0_stage32_iter0;
wire    ap_CS_iter0_fsm_state33;
wire    ap_block_state34_pp0_stage33_iter0;
wire    ap_CS_iter0_fsm_state34;
wire    ap_block_state35_pp0_stage34_iter0;
wire    ap_CS_iter0_fsm_state35;
wire    ap_block_state36_pp0_stage35_iter0;
wire    ap_CS_iter0_fsm_state36;
wire    ap_block_state37_pp0_stage36_iter0;
wire    ap_CS_iter0_fsm_state37;
wire    ap_block_state38_pp0_stage37_iter0;
wire    ap_CS_iter0_fsm_state38;
wire    ap_block_state39_pp0_stage38_iter0;
wire    ap_CS_iter0_fsm_state39;
wire    ap_block_state40_pp0_stage39_iter0;
wire    ap_CS_iter0_fsm_state40;
wire    ap_block_state41_pp0_stage40_iter0;
wire    ap_CS_iter0_fsm_state41;
wire    ap_block_state42_pp0_stage41_iter0;
wire    ap_CS_iter0_fsm_state42;
wire    ap_block_state43_pp0_stage42_iter0;
wire    ap_CS_iter0_fsm_state43;
wire    ap_block_state44_pp0_stage43_iter0;
wire    ap_CS_iter0_fsm_state44;
wire    ap_block_state45_pp0_stage44_iter0;
wire    ap_CS_iter0_fsm_state45;
wire    ap_block_state46_pp0_stage45_iter0;
wire    ap_CS_iter0_fsm_state46;
wire    ap_block_state47_pp0_stage46_iter0;
wire    ap_CS_iter0_fsm_state47;
wire    ap_block_state48_pp0_stage47_iter0;
wire    ap_CS_iter0_fsm_state48;
wire    ap_block_state49_pp0_stage48_iter0;
wire    ap_CS_iter0_fsm_state49;
wire    ap_block_state50_pp0_stage49_iter0;
wire    ap_CS_iter0_fsm_state50;
wire    ap_block_state51_pp0_stage50_iter0;
wire    ap_CS_iter0_fsm_state51;
wire    ap_block_state52_pp0_stage51_iter0;
wire    ap_CS_iter0_fsm_state52;
wire    ap_block_state53_pp0_stage52_iter0;
wire    ap_CS_iter0_fsm_state53;
wire    ap_block_state54_pp0_stage53_iter0;
wire    ap_CS_iter0_fsm_state54;
wire    ap_block_state55_pp0_stage54_iter0;
wire    ap_CS_iter0_fsm_state55;
wire    ap_block_state56_pp0_stage55_iter0;
wire    ap_CS_iter0_fsm_state56;
wire    ap_block_state57_pp0_stage56_iter0;
wire    ap_CS_iter0_fsm_state57;
wire    ap_block_state58_pp0_stage57_iter0;
wire    ap_CS_iter0_fsm_state58;
wire    ap_block_state59_pp0_stage58_iter0;
wire    ap_CS_iter0_fsm_state59;
wire    ap_block_state60_pp0_stage59_iter0;
wire    ap_CS_iter0_fsm_state60;
wire    ap_block_state61_pp0_stage60_iter0;
wire    ap_CS_iter0_fsm_state61;
wire    ap_block_state62_pp0_stage61_iter0;
wire    ap_CS_iter0_fsm_state62;
wire    ap_block_state63_pp0_stage62_iter0;
wire    ap_CS_iter0_fsm_state63;
wire    ap_block_state64_pp0_stage63_iter0;
wire    ap_CS_iter0_fsm_state64;
wire    ap_block_state65_pp0_stage64_iter0;
wire    ap_CS_iter0_fsm_state65;
wire    ap_block_state66_pp0_stage65_iter0;
wire    ap_CS_iter0_fsm_state66;
wire    ap_block_state67_pp0_stage66_iter0;
wire    ap_CS_iter0_fsm_state67;
wire    ap_block_state68_pp0_stage67_iter0;
wire    ap_CS_iter0_fsm_state68;
wire    ap_block_state69_pp0_stage68_iter0;
wire    ap_CS_iter0_fsm_state69;
wire    ap_block_state70_pp0_stage69_iter0;
wire    ap_CS_iter0_fsm_state70;
wire    ap_block_state71_pp0_stage70_iter0;
wire    ap_CS_iter0_fsm_state71;
wire    ap_block_state72_pp0_stage71_iter0;
wire    ap_CS_iter0_fsm_state72;
wire    ap_block_state73_pp0_stage72_iter0;
wire    ap_CS_iter0_fsm_state73;
wire    ap_block_state74_pp0_stage73_iter0;
wire    ap_CS_iter0_fsm_state74;
wire    ap_block_state75_pp0_stage74_iter0;
wire    ap_CS_iter0_fsm_state75;
reg    grp_fu_777_ce;
reg    grp_fu_782_ce;
reg    grp_fu_1037_ce;
reg    grp_fu_1042_ce;
reg    grp_fu_1255_ce;
wire    ap_block_state79_pp0_stage78_iter0;
wire    ap_CS_iter0_fsm_state79;
reg    grp_fu_1267_ce;
wire    ap_block_state82_pp0_stage81_iter0;
wire    ap_CS_iter0_fsm_state82;
reg    grp_fu_1276_ce;
reg    grp_fu_1293_ce;
reg    grp_fu_1309_ce;
reg    grp_fu_1552_ce;
reg    grp_fu_1558_ce;
reg    grp_fu_1564_ce;
reg    grp_fu_1572_ce;
reg    grp_fu_1580_ce;
reg    grp_fu_1588_ce;
reg   [85:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter0_fsm_state2_blk;
wire    ap_ST_iter0_fsm_state3_blk;
wire    ap_ST_iter0_fsm_state4_blk;
wire    ap_ST_iter0_fsm_state5_blk;
wire    ap_ST_iter0_fsm_state6_blk;
wire    ap_ST_iter0_fsm_state7_blk;
wire    ap_ST_iter0_fsm_state8_blk;
wire    ap_ST_iter0_fsm_state9_blk;
reg    ap_ST_iter0_fsm_state10_blk;
reg    ap_ST_iter0_fsm_state11_blk;
wire    ap_ST_iter0_fsm_state12_blk;
wire    ap_ST_iter0_fsm_state13_blk;
wire    ap_ST_iter0_fsm_state14_blk;
wire    ap_ST_iter0_fsm_state15_blk;
wire    ap_ST_iter0_fsm_state16_blk;
wire    ap_ST_iter0_fsm_state17_blk;
wire    ap_ST_iter0_fsm_state18_blk;
wire    ap_ST_iter0_fsm_state19_blk;
wire    ap_ST_iter0_fsm_state20_blk;
wire    ap_ST_iter0_fsm_state21_blk;
wire    ap_ST_iter0_fsm_state22_blk;
wire    ap_ST_iter0_fsm_state23_blk;
wire    ap_ST_iter0_fsm_state24_blk;
wire    ap_ST_iter0_fsm_state25_blk;
wire    ap_ST_iter0_fsm_state26_blk;
wire    ap_ST_iter0_fsm_state27_blk;
wire    ap_ST_iter0_fsm_state28_blk;
wire    ap_ST_iter0_fsm_state29_blk;
wire    ap_ST_iter0_fsm_state30_blk;
wire    ap_ST_iter0_fsm_state31_blk;
wire    ap_ST_iter0_fsm_state32_blk;
wire    ap_ST_iter0_fsm_state33_blk;
wire    ap_ST_iter0_fsm_state34_blk;
wire    ap_ST_iter0_fsm_state35_blk;
wire    ap_ST_iter0_fsm_state36_blk;
wire    ap_ST_iter0_fsm_state37_blk;
wire    ap_ST_iter0_fsm_state38_blk;
wire    ap_ST_iter0_fsm_state39_blk;
wire    ap_ST_iter0_fsm_state40_blk;
wire    ap_ST_iter0_fsm_state41_blk;
wire    ap_ST_iter0_fsm_state42_blk;
wire    ap_ST_iter0_fsm_state43_blk;
wire    ap_ST_iter0_fsm_state44_blk;
wire    ap_ST_iter0_fsm_state45_blk;
wire    ap_ST_iter0_fsm_state46_blk;
wire    ap_ST_iter0_fsm_state47_blk;
wire    ap_ST_iter0_fsm_state48_blk;
wire    ap_ST_iter0_fsm_state49_blk;
wire    ap_ST_iter0_fsm_state50_blk;
wire    ap_ST_iter0_fsm_state51_blk;
wire    ap_ST_iter0_fsm_state52_blk;
wire    ap_ST_iter0_fsm_state53_blk;
wire    ap_ST_iter0_fsm_state54_blk;
wire    ap_ST_iter0_fsm_state55_blk;
wire    ap_ST_iter0_fsm_state56_blk;
wire    ap_ST_iter0_fsm_state57_blk;
wire    ap_ST_iter0_fsm_state58_blk;
wire    ap_ST_iter0_fsm_state59_blk;
wire    ap_ST_iter0_fsm_state60_blk;
wire    ap_ST_iter0_fsm_state61_blk;
wire    ap_ST_iter0_fsm_state62_blk;
wire    ap_ST_iter0_fsm_state63_blk;
wire    ap_ST_iter0_fsm_state64_blk;
wire    ap_ST_iter0_fsm_state65_blk;
wire    ap_ST_iter0_fsm_state66_blk;
wire    ap_ST_iter0_fsm_state67_blk;
wire    ap_ST_iter0_fsm_state68_blk;
wire    ap_ST_iter0_fsm_state69_blk;
wire    ap_ST_iter0_fsm_state70_blk;
wire    ap_ST_iter0_fsm_state71_blk;
wire    ap_ST_iter0_fsm_state72_blk;
wire    ap_ST_iter0_fsm_state73_blk;
wire    ap_ST_iter0_fsm_state74_blk;
wire    ap_ST_iter0_fsm_state75_blk;
wire    ap_ST_iter0_fsm_state76_blk;
wire    ap_ST_iter0_fsm_state77_blk;
wire    ap_ST_iter0_fsm_state78_blk;
wire    ap_ST_iter0_fsm_state79_blk;
wire    ap_ST_iter0_fsm_state80_blk;
wire    ap_ST_iter0_fsm_state81_blk;
wire    ap_ST_iter0_fsm_state82_blk;
wire    ap_ST_iter0_fsm_state83_blk;
wire    ap_ST_iter0_fsm_state84_blk;
wire    ap_ST_iter0_fsm_state85_blk;
wire    ap_ST_iter0_fsm_state86_blk;
reg    ap_ST_iter1_fsm_state87_blk;
wire    regslice_both_main_in_V_data_V_U_apdone_blk;
wire   [31:0] main_in_TDATA_int_regslice;
wire    main_in_TVALID_int_regslice;
reg    main_in_TREADY_int_regslice;
wire    regslice_both_main_in_V_data_V_U_ack_in;
wire    regslice_both_main_in_V_keep_V_U_apdone_blk;
wire   [3:0] main_in_TKEEP_int_regslice;
wire    regslice_both_main_in_V_keep_V_U_vld_out;
wire    regslice_both_main_in_V_keep_V_U_ack_in;
wire    regslice_both_main_in_V_strb_V_U_apdone_blk;
wire   [3:0] main_in_TSTRB_int_regslice;
wire    regslice_both_main_in_V_strb_V_U_vld_out;
wire    regslice_both_main_in_V_strb_V_U_ack_in;
wire    regslice_both_main_in_V_last_V_U_apdone_blk;
wire   [0:0] main_in_TLAST_int_regslice;
wire    regslice_both_main_in_V_last_V_U_vld_out;
wire    regslice_both_main_in_V_last_V_U_ack_in;
wire    regslice_both_aux_in_V_data_V_U_apdone_blk;
wire   [31:0] aux_in_TDATA_int_regslice;
wire    aux_in_TVALID_int_regslice;
reg    aux_in_TREADY_int_regslice;
wire    regslice_both_aux_in_V_data_V_U_ack_in;
wire    regslice_both_aux_in_V_keep_V_U_apdone_blk;
wire   [3:0] aux_in_TKEEP_int_regslice;
wire    regslice_both_aux_in_V_keep_V_U_vld_out;
wire    regslice_both_aux_in_V_keep_V_U_ack_in;
wire    regslice_both_aux_in_V_strb_V_U_apdone_blk;
wire   [3:0] aux_in_TSTRB_int_regslice;
wire    regslice_both_aux_in_V_strb_V_U_vld_out;
wire    regslice_both_aux_in_V_strb_V_U_ack_in;
wire    regslice_both_aux_in_V_last_V_U_apdone_blk;
wire   [0:0] aux_in_TLAST_int_regslice;
wire    regslice_both_aux_in_V_last_V_U_vld_out;
wire    regslice_both_aux_in_V_last_V_U_ack_in;
wire   [31:0] output_r_TDATA_int_regslice;
reg    output_r_TVALID_int_regslice;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_V_data_V_U_vld_out;
wire    regslice_both_output_V_keep_V_U_apdone_blk;
wire    regslice_both_output_V_keep_V_U_ack_in_dummy;
wire    regslice_both_output_V_keep_V_U_vld_out;
wire    regslice_both_output_V_strb_V_U_apdone_blk;
wire    regslice_both_output_V_strb_V_U_ack_in_dummy;
wire    regslice_both_output_V_strb_V_U_vld_out;
wire    regslice_both_output_V_last_V_U_apdone_blk;
wire    regslice_both_output_V_last_V_U_ack_in_dummy;
wire    regslice_both_output_V_last_V_U_vld_out;
wire   [94:0] grp_fu_1255_p00;
wire   [94:0] grp_fu_1255_p10;
wire   [64:0] grp_fu_726_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 lms_weights_real = 64'd0;
#0 lms_weights_imag_V_0 = 64'd0;
#0 ap_CS_iter0_fsm = 86'd1;
#0 ap_CS_iter1_fsm = 2'd1;
end

nlms_module_1tap_lms_aux_reg_M_real_V #(
    .DataWidth( 16 ),
    .AddressRange( 1 ),
    .AddressWidth( 1 ))
lms_aux_reg_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(1'd0),
    .ce0(lms_aux_reg_M_real_V_ce0),
    .we0(lms_aux_reg_M_real_V_we0),
    .d0(aux_tmp_data_M_real_V_fu_267_p1),
    .address1(1'd0),
    .ce1(lms_aux_reg_M_real_V_ce1),
    .q1(lms_aux_reg_M_real_V_q1)
);

nlms_module_1tap_lms_aux_reg_M_real_V #(
    .DataWidth( 16 ),
    .AddressRange( 1 ),
    .AddressWidth( 1 ))
lms_aux_reg_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(1'd0),
    .ce0(lms_aux_reg_M_imag_V_ce0),
    .we0(lms_aux_reg_M_imag_V_we0),
    .d0(lms_aux_reg_M_imag_V_d0),
    .address1(1'd0),
    .ce1(lms_aux_reg_M_imag_V_ce1),
    .q1(lms_aux_reg_M_imag_V_q1)
);

nlms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_295_p0),
    .din1(aux_tmp_data_M_real_V_fu_267_p1),
    .ce(grp_fu_295_ce),
    .dout(grp_fu_295_p2)
);

nlms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_305_p0),
    .din1(aux_tmp_data_M_imag_V_fu_272_p4),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

nlms_module_1tap_mul_64s_16s_79_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 79 ))
mul_64s_16s_79_3_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(lms_weights_imag_V_0),
    .din1(aux_tmp_data_M_imag_V_reg_1612),
    .ce(grp_fu_348_ce),
    .dout(grp_fu_348_p2)
);

nlms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(lms_weights_imag_V_0),
    .din1(grp_fu_354_p1),
    .ce(grp_fu_354_ce),
    .dout(grp_fu_354_p2)
);

nlms_module_1tap_udiv_65s_64ns_64_69_1 #(
    .ID( 1 ),
    .NUM_STAGE( 69 ),
    .din0_WIDTH( 65 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
udiv_65s_64ns_64_69_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(65'd18446744073709551616),
    .din1(grp_fu_726_p1),
    .ce(grp_fu_726_ce),
    .dout(grp_fu_726_p2)
);

nlms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_777_p0),
    .din1(grp_fu_777_p1),
    .ce(grp_fu_777_ce),
    .dout(grp_fu_777_p2)
);

nlms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_782_p0),
    .din1(grp_fu_782_p1),
    .ce(grp_fu_782_ce),
    .dout(grp_fu_782_p2)
);

nlms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1037_p0),
    .din1(grp_fu_1037_p1),
    .ce(grp_fu_1037_ce),
    .dout(grp_fu_1037_p2)
);

nlms_module_1tap_mul_64s_16s_80_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 80 ))
mul_64s_16s_80_3_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1042_p0),
    .din1(grp_fu_1042_p1),
    .ce(grp_fu_1042_ce),
    .dout(grp_fu_1042_p2)
);

nlms_module_1tap_mul_63ns_32ns_95_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 63 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 95 ))
mul_63ns_32ns_95_3_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1255_p0),
    .din1(grp_fu_1255_p1),
    .ce(grp_fu_1255_ce),
    .dout(grp_fu_1255_p2)
);

nlms_module_1tap_mul_95ns_81s_175_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 95 ),
    .din1_WIDTH( 81 ),
    .dout_WIDTH( 175 ))
mul_95ns_81s_175_3_1_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1267_p0),
    .din1(ret_V_4_reg_2014),
    .ce(grp_fu_1267_ce),
    .dout(grp_fu_1267_p2)
);

nlms_module_1tap_mul_95ns_80s_175_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 95 ),
    .din1_WIDTH( 80 ),
    .dout_WIDTH( 175 ))
mul_95ns_80s_175_3_1_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1276_p0),
    .din1(ret_V_6_reg_2019),
    .ce(grp_fu_1276_ce),
    .dout(grp_fu_1276_p2)
);

nlms_module_1tap_add_175s_175ns_175_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 175 ),
    .din1_WIDTH( 175 ),
    .dout_WIDTH( 175 ))
add_175s_175ns_175_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1293_p0),
    .din1(r_V_24_reg_2065),
    .ce(grp_fu_1293_ce),
    .dout(grp_fu_1293_p2)
);

nlms_module_1tap_add_175s_175ns_175_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 175 ),
    .din1_WIDTH( 175 ),
    .dout_WIDTH( 175 ))
add_175s_175ns_175_2_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1309_p0),
    .din1(r_V_27_reg_2070),
    .ce(grp_fu_1309_ce),
    .dout(grp_fu_1309_p2)
);

nlms_module_1tap_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1552_p0),
    .din1(grp_fu_1552_p1),
    .ce(grp_fu_1552_ce),
    .dout(grp_fu_1552_p2)
);

nlms_module_1tap_mul_mul_16s_16s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16s_16s_32_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1558_p0),
    .din1(grp_fu_1558_p1),
    .ce(grp_fu_1558_ce),
    .dout(grp_fu_1558_p2)
);

nlms_module_1tap_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1564_p0),
    .din1(grp_fu_1564_p1),
    .din2(grp_fu_1558_p2),
    .ce(grp_fu_1564_ce),
    .dout(grp_fu_1564_p3)
);

nlms_module_1tap_mac_muladd_16s_16s_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32s_32_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1572_p0),
    .din1(grp_fu_1572_p1),
    .din2(grp_fu_1552_p2),
    .ce(grp_fu_1572_ce),
    .dout(grp_fu_1572_p3)
);

nlms_module_1tap_mac_muladd_16s_16s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32ns_32_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1580_p0),
    .din1(grp_fu_1580_p1),
    .din2(grp_fu_1572_p3),
    .ce(grp_fu_1580_ce),
    .dout(grp_fu_1580_p3)
);

nlms_module_1tap_mac_muladd_16s_16s_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_16s_32ns_32_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1588_p0),
    .din1(grp_fu_1588_p1),
    .din2(grp_fu_1564_p3),
    .ce(grp_fu_1588_ce),
    .dout(grp_fu_1588_p3)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 32 ))
regslice_both_main_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_in_TDATA),
    .vld_in(main_in_TVALID),
    .ack_in(regslice_both_main_in_V_data_V_U_ack_in),
    .data_out(main_in_TDATA_int_regslice),
    .vld_out(main_in_TVALID_int_regslice),
    .ack_out(main_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_in_V_data_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_main_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_in_TKEEP),
    .vld_in(main_in_TVALID),
    .ack_in(regslice_both_main_in_V_keep_V_U_ack_in),
    .data_out(main_in_TKEEP_int_regslice),
    .vld_out(regslice_both_main_in_V_keep_V_U_vld_out),
    .ack_out(main_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_in_V_keep_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_main_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_in_TSTRB),
    .vld_in(main_in_TVALID),
    .ack_in(regslice_both_main_in_V_strb_V_U_ack_in),
    .data_out(main_in_TSTRB_int_regslice),
    .vld_out(regslice_both_main_in_V_strb_V_U_vld_out),
    .ack_out(main_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_in_V_strb_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 1 ))
regslice_both_main_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(main_in_TLAST),
    .vld_in(main_in_TVALID),
    .ack_in(regslice_both_main_in_V_last_V_U_ack_in),
    .data_out(main_in_TLAST_int_regslice),
    .vld_out(regslice_both_main_in_V_last_V_U_vld_out),
    .ack_out(main_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_main_in_V_last_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 32 ))
regslice_both_aux_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_in_TDATA),
    .vld_in(aux_in_TVALID),
    .ack_in(regslice_both_aux_in_V_data_V_U_ack_in),
    .data_out(aux_in_TDATA_int_regslice),
    .vld_out(aux_in_TVALID_int_regslice),
    .ack_out(aux_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_in_V_data_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_aux_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_in_TKEEP),
    .vld_in(aux_in_TVALID),
    .ack_in(regslice_both_aux_in_V_keep_V_U_ack_in),
    .data_out(aux_in_TKEEP_int_regslice),
    .vld_out(regslice_both_aux_in_V_keep_V_U_vld_out),
    .ack_out(aux_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_in_V_keep_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_aux_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_in_TSTRB),
    .vld_in(aux_in_TVALID),
    .ack_in(regslice_both_aux_in_V_strb_V_U_ack_in),
    .data_out(aux_in_TSTRB_int_regslice),
    .vld_out(regslice_both_aux_in_V_strb_V_U_vld_out),
    .ack_out(aux_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_in_V_strb_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 1 ))
regslice_both_aux_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(aux_in_TLAST),
    .vld_in(aux_in_TVALID),
    .ack_in(regslice_both_aux_in_V_last_V_U_ack_in),
    .data_out(aux_in_TLAST_int_regslice),
    .vld_out(regslice_both_aux_in_V_last_V_U_vld_out),
    .ack_out(aux_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_aux_in_V_last_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 32 ))
regslice_both_output_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TDATA_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_V_data_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_data_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_keep_V_U_ack_in_dummy),
    .data_out(output_r_TKEEP),
    .vld_out(regslice_both_output_V_keep_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_keep_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd0),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_strb_V_U_ack_in_dummy),
    .data_out(output_r_TSTRB),
    .vld_out(regslice_both_output_V_strb_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_strb_V_U_apdone_blk)
);

nlms_module_1tap_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_s_reg_1602),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_V_last_V_U_ack_in_dummy),
    .data_out(output_r_TLAST),
    .vld_out(regslice_both_output_V_last_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
        Range1_all_ones_3_reg_1967 <= Range1_all_ones_3_fu_964_p2;
        Range1_all_ones_reg_1945 <= Range1_all_ones_fu_865_p2;
        Range1_all_zeros_reg_1952 <= Range1_all_zeros_fu_871_p2;
        Range2_all_ones_reg_1940 <= Range2_all_ones_fu_850_p2;
        and_ln795_2_reg_1978 <= and_ln795_2_fu_1028_p2;
        carry_3_reg_1962 <= carry_3_fu_934_p2;
        error_real_V_reg_1917 <= error_real_V_fu_766_p3;
        overflow_8_reg_1972 <= overflow_8_fu_1023_p2;
        p_Result_19_reg_1933 <= p_Val2_13_fu_827_p2[32'd15];
        p_Val2_13_reg_1928 <= p_Val2_13_fu_827_p2;
        p_Val2_16_reg_1957 <= p_Val2_16_fu_914_p2;
        xor_ln794_2_reg_1912 <= xor_ln794_2_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
        accum_imag_V_1_reg_1810 <= accum_imag_V_1_fu_513_p3;
        add_ln737_2_reg_1815 <= grp_fu_1588_p3;
        add_ln737_4_reg_1820 <= grp_fu_1580_p3;
        p_Result_1_reg_1798 <= ret_V_fu_425_p2[32'd63];
        p_Result_s_reg_1792 <= ret_V_fu_425_p2[32'd80];
        ret_V_reg_1787 <= ret_V_fu_425_p2;
        tmp_reg_1804 <= {{ret_V_fu_425_p2[80:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
        accum_imag_V_reg_1760 <= accum_imag_V_fu_397_p2;
        p_Result_6_reg_1754 <= ret_V_1_fu_385_p2[32'd79];
        p_Result_7_reg_1765 <= accum_imag_V_fu_397_p2[32'd63];
        r_V_21_reg_1749 <= r_V_21_fu_380_p2;
        tmp_1_reg_1771 <= {{ret_V_1_fu_385_p2[79:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
        accum_real_V_1_reg_1825 <= accum_real_V_1_fu_579_p3;
        add_ln737_reg_1856 <= add_ln737_fu_633_p2;
        p_Result_10_reg_1842 <= ret_V_11_fu_611_p2[32'd64];
        p_Result_11_reg_1850 <= ret_V_11_fu_611_p2[32'd63];
        ret_V_11_reg_1830 <= ret_V_11_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        aux_tmp_data_M_imag_V_reg_1612 <= {{aux_in_TDATA_int_regslice[31:16]}};
        aux_tmp_data_M_real_V_reg_1607 <= aux_tmp_data_M_real_V_fu_267_p1;
        lhs_V_1_reg_1625 <= ap_sig_allocacmp_lhs_V_1;
        p_0_reg_1596 <= main_in_TDATA_int_regslice;
        p_s_reg_1602 <= main_in_TLAST_int_regslice;
        r_V_12_reg_1655 <= {{r_V_12_fu_323_p1[31:16]}};
        sext_ln1169_reg_1617 <= sext_ln1169_fu_283_p1;
        sext_ln1171_3_reg_1636 <= sext_ln1171_3_fu_301_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
        error_imag_V_reg_1893 <= error_imag_V_fu_702_p3;
        icmp_ln1551_reg_1898 <= icmp_ln1551_fu_717_p2;
        p_Result_8_reg_1874 <= ret_V_10_fu_655_p2[32'd64];
        p_Result_9_reg_1882 <= ret_V_10_fu_655_p2[32'd63];
        r_1_reg_1907 <= r_1_fu_735_p2;
        ret_V_10_reg_1862 <= ret_V_10_fu_655_p2;
        xor_ln794_3_reg_1888 <= xor_ln794_3_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
        lhs_V_4_reg_1660 <= lms_weights_imag_V_0;
        r_V_8_reg_1686 <= lms_aux_reg_M_imag_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b0))) begin
        lms_weights_imag_V_0 <= select_ln340_6_fu_1538_p3;
        lms_weights_real <= select_ln340_5_fu_1497_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
        mul_ln1171_1_reg_1729 <= grp_fu_354_p2;
        mul_ln1171_reg_1724 <= grp_fu_348_p2;
        trunc_ln1171_reg_1734 <= trunc_ln1171_fu_376_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state86))) begin
        overflow_5_reg_2133 <= overflow_5_fu_1401_p2;
        overflow_6_reg_2146 <= overflow_6_fu_1443_p2;
        p_Val2_10_reg_2115_pp0_iter0_reg <= p_Val2_10_reg_2115;
        p_Val2_8_reg_2091_pp0_iter0_reg <= p_Val2_8_reg_2091;
        underflow_2_reg_2139 <= underflow_2_fu_1423_p2;
        underflow_3_reg_2152 <= underflow_3_fu_1465_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state85))) begin
        p_Result_13_reg_2085 <= grp_fu_1293_p2[32'd174];
        p_Result_14_reg_2097 <= grp_fu_1293_p2[32'd127];
        p_Result_15_reg_2109 <= grp_fu_1309_p2[32'd174];
        p_Result_16_reg_2121 <= grp_fu_1309_p2[32'd127];
        p_Val2_10_reg_2115 <= {{grp_fu_1309_p2[127:64]}};
        p_Val2_8_reg_2091 <= {{grp_fu_1293_p2[127:64]}};
        tmp_2_reg_2103 <= {{grp_fu_1293_p2[174:128]}};
        tmp_3_reg_2127 <= {{grp_fu_1309_p2[174:128]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state80))) begin
        r_V_16_reg_2044 <= grp_fu_1255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
        r_V_22_reg_2004 <= grp_fu_1037_p2;
        r_V_25_reg_2009 <= grp_fu_1042_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
        r_V_23_reg_1994 <= grp_fu_777_p2;
        r_V_26_reg_1999 <= grp_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state83))) begin
        r_V_24_reg_2065 <= grp_fu_1267_p2;
        r_V_27_reg_2070 <= grp_fu_1276_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
        r_V_3_reg_1702 <= grp_fu_305_p2;
        r_V_reg_1697 <= grp_fu_295_p2;
        trunc_ln1245_reg_1707 <= trunc_ln1245_fu_366_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
        ret_V_4_reg_2014 <= ret_V_4_fu_1214_p2;
        ret_V_6_reg_2019 <= ret_V_6_fu_1220_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state77))) begin
        select_ln340_reg_2029 <= select_ln340_fu_1240_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (icmp_ln1551_reg_1898 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state76))) begin
        udiv_ln712_reg_2024 <= grp_fu_726_p2;
    end
end

always @ (*) begin
    if ((output_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_iter0_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((output_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_iter0_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_iter0_fsm_state12_blk = 1'b0;

assign ap_ST_iter0_fsm_state13_blk = 1'b0;

assign ap_ST_iter0_fsm_state14_blk = 1'b0;

assign ap_ST_iter0_fsm_state15_blk = 1'b0;

assign ap_ST_iter0_fsm_state16_blk = 1'b0;

assign ap_ST_iter0_fsm_state17_blk = 1'b0;

assign ap_ST_iter0_fsm_state18_blk = 1'b0;

assign ap_ST_iter0_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0))) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter0_fsm_state20_blk = 1'b0;

assign ap_ST_iter0_fsm_state21_blk = 1'b0;

assign ap_ST_iter0_fsm_state22_blk = 1'b0;

assign ap_ST_iter0_fsm_state23_blk = 1'b0;

assign ap_ST_iter0_fsm_state24_blk = 1'b0;

assign ap_ST_iter0_fsm_state25_blk = 1'b0;

assign ap_ST_iter0_fsm_state26_blk = 1'b0;

assign ap_ST_iter0_fsm_state27_blk = 1'b0;

assign ap_ST_iter0_fsm_state28_blk = 1'b0;

assign ap_ST_iter0_fsm_state29_blk = 1'b0;

assign ap_ST_iter0_fsm_state2_blk = 1'b0;

assign ap_ST_iter0_fsm_state30_blk = 1'b0;

assign ap_ST_iter0_fsm_state31_blk = 1'b0;

assign ap_ST_iter0_fsm_state32_blk = 1'b0;

assign ap_ST_iter0_fsm_state33_blk = 1'b0;

assign ap_ST_iter0_fsm_state34_blk = 1'b0;

assign ap_ST_iter0_fsm_state35_blk = 1'b0;

assign ap_ST_iter0_fsm_state36_blk = 1'b0;

assign ap_ST_iter0_fsm_state37_blk = 1'b0;

assign ap_ST_iter0_fsm_state38_blk = 1'b0;

assign ap_ST_iter0_fsm_state39_blk = 1'b0;

assign ap_ST_iter0_fsm_state3_blk = 1'b0;

assign ap_ST_iter0_fsm_state40_blk = 1'b0;

assign ap_ST_iter0_fsm_state41_blk = 1'b0;

assign ap_ST_iter0_fsm_state42_blk = 1'b0;

assign ap_ST_iter0_fsm_state43_blk = 1'b0;

assign ap_ST_iter0_fsm_state44_blk = 1'b0;

assign ap_ST_iter0_fsm_state45_blk = 1'b0;

assign ap_ST_iter0_fsm_state46_blk = 1'b0;

assign ap_ST_iter0_fsm_state47_blk = 1'b0;

assign ap_ST_iter0_fsm_state48_blk = 1'b0;

assign ap_ST_iter0_fsm_state49_blk = 1'b0;

assign ap_ST_iter0_fsm_state4_blk = 1'b0;

assign ap_ST_iter0_fsm_state50_blk = 1'b0;

assign ap_ST_iter0_fsm_state51_blk = 1'b0;

assign ap_ST_iter0_fsm_state52_blk = 1'b0;

assign ap_ST_iter0_fsm_state53_blk = 1'b0;

assign ap_ST_iter0_fsm_state54_blk = 1'b0;

assign ap_ST_iter0_fsm_state55_blk = 1'b0;

assign ap_ST_iter0_fsm_state56_blk = 1'b0;

assign ap_ST_iter0_fsm_state57_blk = 1'b0;

assign ap_ST_iter0_fsm_state58_blk = 1'b0;

assign ap_ST_iter0_fsm_state59_blk = 1'b0;

assign ap_ST_iter0_fsm_state5_blk = 1'b0;

assign ap_ST_iter0_fsm_state60_blk = 1'b0;

assign ap_ST_iter0_fsm_state61_blk = 1'b0;

assign ap_ST_iter0_fsm_state62_blk = 1'b0;

assign ap_ST_iter0_fsm_state63_blk = 1'b0;

assign ap_ST_iter0_fsm_state64_blk = 1'b0;

assign ap_ST_iter0_fsm_state65_blk = 1'b0;

assign ap_ST_iter0_fsm_state66_blk = 1'b0;

assign ap_ST_iter0_fsm_state67_blk = 1'b0;

assign ap_ST_iter0_fsm_state68_blk = 1'b0;

assign ap_ST_iter0_fsm_state69_blk = 1'b0;

assign ap_ST_iter0_fsm_state6_blk = 1'b0;

assign ap_ST_iter0_fsm_state70_blk = 1'b0;

assign ap_ST_iter0_fsm_state71_blk = 1'b0;

assign ap_ST_iter0_fsm_state72_blk = 1'b0;

assign ap_ST_iter0_fsm_state73_blk = 1'b0;

assign ap_ST_iter0_fsm_state74_blk = 1'b0;

assign ap_ST_iter0_fsm_state75_blk = 1'b0;

assign ap_ST_iter0_fsm_state76_blk = 1'b0;

assign ap_ST_iter0_fsm_state77_blk = 1'b0;

assign ap_ST_iter0_fsm_state78_blk = 1'b0;

assign ap_ST_iter0_fsm_state79_blk = 1'b0;

assign ap_ST_iter0_fsm_state7_blk = 1'b0;

assign ap_ST_iter0_fsm_state80_blk = 1'b0;

assign ap_ST_iter0_fsm_state81_blk = 1'b0;

assign ap_ST_iter0_fsm_state82_blk = 1'b0;

assign ap_ST_iter0_fsm_state83_blk = 1'b0;

assign ap_ST_iter0_fsm_state84_blk = 1'b0;

assign ap_ST_iter0_fsm_state85_blk = 1'b0;

assign ap_ST_iter0_fsm_state86_blk = 1'b0;

assign ap_ST_iter0_fsm_state8_blk = 1'b0;

assign ap_ST_iter0_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_iter1_fsm_state87_blk = 1'b1;
    end else begin
        ap_ST_iter1_fsm_state87_blk = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1551_reg_1898 == 1'd0)) begin
        ap_phi_mux_p_Val2_6_phi_fu_248_p4 = trunc_ln56_fu_1224_p1;
    end else begin
        ap_phi_mux_p_Val2_6_phi_fu_248_p4 = 64'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter1_fsm_state87)) begin
        ap_sig_allocacmp_lhs_V_1 = select_ln340_5_fu_1497_p3;
    end else begin
        ap_sig_allocacmp_lhs_V_1 = lms_weights_real;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state1)) begin
        aux_in_TDATA_blk_n = aux_in_TVALID_int_regslice;
    end else begin
        aux_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        aux_in_TREADY_int_regslice = 1'b1;
    end else begin
        aux_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state12)))) begin
        grp_fu_1037_ce = 1'b1;
    end else begin
        grp_fu_1037_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state12)))) begin
        grp_fu_1042_ce = 1'b1;
    end else begin
        grp_fu_1042_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state80)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state78)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state79)))) begin
        grp_fu_1255_ce = 1'b1;
    end else begin
        grp_fu_1255_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state83)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state81)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state82)))) begin
        grp_fu_1267_ce = 1'b1;
    end else begin
        grp_fu_1267_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state83)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state81)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state82)))) begin
        grp_fu_1276_ce = 1'b1;
    end else begin
        grp_fu_1276_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state85)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state84)))) begin
        grp_fu_1293_ce = 1'b1;
    end else begin
        grp_fu_1293_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state85)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state84)))) begin
        grp_fu_1309_ce = 1'b1;
    end else begin
        grp_fu_1309_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_1552_ce = 1'b1;
    end else begin
        grp_fu_1552_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_1558_ce = 1'b1;
    end else begin
        grp_fu_1558_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_1564_ce = 1'b1;
    end else begin
        grp_fu_1564_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_1572_ce = 1'b1;
    end else begin
        grp_fu_1572_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        grp_fu_1580_ce = 1'b1;
    end else begin
        grp_fu_1580_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state6)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state5)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)))) begin
        grp_fu_1588_ce = 1'b1;
    end else begin
        grp_fu_1588_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_295_ce = 1'b1;
    end else begin
        grp_fu_295_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_348_ce = 1'b1;
    end else begin
        grp_fu_348_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2)))) begin
        grp_fu_354_ce = 1'b1;
    end else begin
        grp_fu_354_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state76)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state13)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state12)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state9)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state8)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state75)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state74)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state73)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state72)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state71)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state70)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state69)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state68)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state67)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state66)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state65)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state64)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state63)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state62)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state61)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state60)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state59)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state58)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state57)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state56)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state55)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state54)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state53)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state52)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state51)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state50)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state49)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state48)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state47)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state46)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state45)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state44)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state43)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state42)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state41)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state40)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state39)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state38)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state37)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state36)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state35)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state34)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state33)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state32)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state31)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state30)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state29)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state28)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state27)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state26)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state25)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state24)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state23)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state22)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state21)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state20)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state19)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state18)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state17)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state16)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state15)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state14)))) begin
        grp_fu_726_ce = 1'b1;
    end else begin
        grp_fu_726_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state9)))) begin
        grp_fu_777_ce = 1'b1;
    end else begin
        grp_fu_777_ce = 1'b0;
    end
end

always @ (*) begin
    if (((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state11)) | (~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state10)) | (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state9)))) begin
        grp_fu_782_ce = 1'b1;
    end else begin
        grp_fu_782_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        lms_aux_reg_M_imag_V_ce0 = 1'b1;
    end else begin
        lms_aux_reg_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        lms_aux_reg_M_imag_V_ce1 = 1'b1;
    end else begin
        lms_aux_reg_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        lms_aux_reg_M_imag_V_we0 = 1'b1;
    end else begin
        lms_aux_reg_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        lms_aux_reg_M_real_V_ce0 = 1'b1;
    end else begin
        lms_aux_reg_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        lms_aux_reg_M_real_V_ce1 = 1'b1;
    end else begin
        lms_aux_reg_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        lms_aux_reg_M_real_V_we0 = 1'b1;
    end else begin
        lms_aux_reg_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state1)) begin
        main_in_TDATA_blk_n = main_in_TVALID_int_regslice;
    end else begin
        main_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        main_in_TREADY_int_regslice = 1'b1;
    end else begin
        main_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state11) | (1'b1 == ap_CS_iter0_fsm_state10))) begin
        output_r_TDATA_blk_n = output_r_TREADY_int_regslice;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
        output_r_TVALID_int_regslice = 1'b1;
    end else begin
        output_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            if ((~((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end
        end
        ap_ST_iter0_fsm_state2 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state2))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state2;
            end
        end
        ap_ST_iter0_fsm_state3 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state3))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state3;
            end
        end
        ap_ST_iter0_fsm_state4 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state4))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state4;
            end
        end
        ap_ST_iter0_fsm_state5 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state5))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state5;
            end
        end
        ap_ST_iter0_fsm_state6 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state6))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state6;
            end
        end
        ap_ST_iter0_fsm_state7 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state7))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state7;
            end
        end
        ap_ST_iter0_fsm_state8 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state8))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state8;
            end
        end
        ap_ST_iter0_fsm_state9 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state9))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state9;
            end
        end
        ap_ST_iter0_fsm_state10 : begin
            if ((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state10))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state10;
            end
        end
        ap_ST_iter0_fsm_state11 : begin
            if ((~((output_r_TREADY_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) & (1'b1 == ap_CS_iter0_fsm_state11))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state11;
            end
        end
        ap_ST_iter0_fsm_state12 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state12))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state12;
            end
        end
        ap_ST_iter0_fsm_state13 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state13))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state13;
            end
        end
        ap_ST_iter0_fsm_state14 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state14))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state14;
            end
        end
        ap_ST_iter0_fsm_state15 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state15))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state15;
            end
        end
        ap_ST_iter0_fsm_state16 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state16))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state16;
            end
        end
        ap_ST_iter0_fsm_state17 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state17))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state17;
            end
        end
        ap_ST_iter0_fsm_state18 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state18))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state18;
            end
        end
        ap_ST_iter0_fsm_state19 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state19))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state19;
            end
        end
        ap_ST_iter0_fsm_state20 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state20))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state20;
            end
        end
        ap_ST_iter0_fsm_state21 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state21))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state21;
            end
        end
        ap_ST_iter0_fsm_state22 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state22))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state23;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state22;
            end
        end
        ap_ST_iter0_fsm_state23 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state23))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state24;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state23;
            end
        end
        ap_ST_iter0_fsm_state24 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state24))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state25;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state24;
            end
        end
        ap_ST_iter0_fsm_state25 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state25))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state26;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state25;
            end
        end
        ap_ST_iter0_fsm_state26 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state26))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state27;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state26;
            end
        end
        ap_ST_iter0_fsm_state27 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state27))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state28;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state27;
            end
        end
        ap_ST_iter0_fsm_state28 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state28))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state29;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state28;
            end
        end
        ap_ST_iter0_fsm_state29 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state29))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state30;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state29;
            end
        end
        ap_ST_iter0_fsm_state30 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state30))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state31;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state30;
            end
        end
        ap_ST_iter0_fsm_state31 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state31))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state32;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state31;
            end
        end
        ap_ST_iter0_fsm_state32 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state32))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state33;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state32;
            end
        end
        ap_ST_iter0_fsm_state33 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state33))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state34;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state33;
            end
        end
        ap_ST_iter0_fsm_state34 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state34))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state35;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state34;
            end
        end
        ap_ST_iter0_fsm_state35 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state35))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state36;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state35;
            end
        end
        ap_ST_iter0_fsm_state36 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state36))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state37;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state36;
            end
        end
        ap_ST_iter0_fsm_state37 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state37))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state38;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state37;
            end
        end
        ap_ST_iter0_fsm_state38 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state38))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state39;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state38;
            end
        end
        ap_ST_iter0_fsm_state39 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state39))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state40;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state39;
            end
        end
        ap_ST_iter0_fsm_state40 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state40))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state41;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state40;
            end
        end
        ap_ST_iter0_fsm_state41 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state41))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state42;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state41;
            end
        end
        ap_ST_iter0_fsm_state42 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state42))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state43;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state42;
            end
        end
        ap_ST_iter0_fsm_state43 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state43))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state44;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state43;
            end
        end
        ap_ST_iter0_fsm_state44 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state44))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state45;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state44;
            end
        end
        ap_ST_iter0_fsm_state45 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state45))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state46;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state45;
            end
        end
        ap_ST_iter0_fsm_state46 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state46))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state47;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state46;
            end
        end
        ap_ST_iter0_fsm_state47 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state47))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state48;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state47;
            end
        end
        ap_ST_iter0_fsm_state48 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state48))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state49;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state48;
            end
        end
        ap_ST_iter0_fsm_state49 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state49))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state50;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state49;
            end
        end
        ap_ST_iter0_fsm_state50 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state50))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state51;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state50;
            end
        end
        ap_ST_iter0_fsm_state51 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state51))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state52;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state51;
            end
        end
        ap_ST_iter0_fsm_state52 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state52))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state53;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state52;
            end
        end
        ap_ST_iter0_fsm_state53 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state53))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state54;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state53;
            end
        end
        ap_ST_iter0_fsm_state54 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state54))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state55;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state54;
            end
        end
        ap_ST_iter0_fsm_state55 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state55))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state56;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state55;
            end
        end
        ap_ST_iter0_fsm_state56 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state56))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state57;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state56;
            end
        end
        ap_ST_iter0_fsm_state57 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state57))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state58;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state57;
            end
        end
        ap_ST_iter0_fsm_state58 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state58))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state59;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state58;
            end
        end
        ap_ST_iter0_fsm_state59 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state59))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state60;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state59;
            end
        end
        ap_ST_iter0_fsm_state60 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state60))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state61;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state60;
            end
        end
        ap_ST_iter0_fsm_state61 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state61))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state62;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state61;
            end
        end
        ap_ST_iter0_fsm_state62 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state62))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state63;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state62;
            end
        end
        ap_ST_iter0_fsm_state63 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state63))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state64;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state63;
            end
        end
        ap_ST_iter0_fsm_state64 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state64))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state65;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state64;
            end
        end
        ap_ST_iter0_fsm_state65 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state65))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state66;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state65;
            end
        end
        ap_ST_iter0_fsm_state66 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state66))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state67;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state66;
            end
        end
        ap_ST_iter0_fsm_state67 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state67))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state68;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state67;
            end
        end
        ap_ST_iter0_fsm_state68 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state68))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state69;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state68;
            end
        end
        ap_ST_iter0_fsm_state69 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state69))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state70;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state69;
            end
        end
        ap_ST_iter0_fsm_state70 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state70))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state71;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state70;
            end
        end
        ap_ST_iter0_fsm_state71 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state71))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state72;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state71;
            end
        end
        ap_ST_iter0_fsm_state72 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state72))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state73;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state72;
            end
        end
        ap_ST_iter0_fsm_state73 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state73))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state74;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state73;
            end
        end
        ap_ST_iter0_fsm_state74 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state74))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state75;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state74;
            end
        end
        ap_ST_iter0_fsm_state75 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state75))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state76;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state75;
            end
        end
        ap_ST_iter0_fsm_state76 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state76))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state77;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state76;
            end
        end
        ap_ST_iter0_fsm_state77 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state77))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state78;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state77;
            end
        end
        ap_ST_iter0_fsm_state78 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state78))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state79;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state78;
            end
        end
        ap_ST_iter0_fsm_state79 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state79))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state80;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state79;
            end
        end
        ap_ST_iter0_fsm_state80 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state80))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state81;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state80;
            end
        end
        ap_ST_iter0_fsm_state81 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state81))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state82;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state81;
            end
        end
        ap_ST_iter0_fsm_state82 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state82))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state83;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state82;
            end
        end
        ap_ST_iter0_fsm_state83 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state83))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state84;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state83;
            end
        end
        ap_ST_iter0_fsm_state84 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state84))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state85;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state84;
            end
        end
        ap_ST_iter0_fsm_state85 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state85))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state86;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state85;
            end
        end
        ap_ST_iter0_fsm_state86 : begin
            if (~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1))) begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
            end else begin
                ap_NS_iter0_fsm = ap_ST_iter0_fsm_state86;
            end
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state87 : begin
            if (((1'b1 == ap_CS_iter0_fsm_state86) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state87;
            end else if (((1'b0 == ap_CS_iter0_fsm_state86) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state87;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter1_fsm_state87) & (regslice_both_output_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_iter0_fsm_state86))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state87;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_3_fu_964_p2 = ((p_Result_5_fu_955_p4 == 17'd131071) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_865_p2 = ((p_Result_3_fu_856_p4 == 17'd131071) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_970_p2 = ((p_Result_5_fu_955_p4 == 17'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_871_p2 = ((p_Result_3_fu_856_p4 == 17'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_949_p2 = ((p_Result_4_fu_940_p4 == 16'd65535) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_850_p2 = ((p_Result_2_fu_841_p4 == 16'd65535) ? 1'b1 : 1'b0);

assign accum_imag_V_1_fu_513_p3 = ((or_ln384_1_fu_507_p2[0:0] == 1'b1) ? select_ln384_3_fu_499_p3 : accum_imag_V_reg_1760);

assign accum_imag_V_fu_397_p2 = (trunc_ln1245_reg_1707 - trunc_ln1171_reg_1734);

assign accum_real_V_1_fu_579_p3 = ((or_ln384_fu_573_p2[0:0] == 1'b1) ? select_ln384_1_fu_565_p3 : accum_real_V_fu_520_p1);

assign accum_real_V_fu_520_p1 = ret_V_reg_1787[63:0];

assign add_ln737_fu_633_p2 = ($signed(add_ln737_4_reg_1820) + $signed(add_ln737_2_reg_1815));

assign and_ln406_1_fu_904_p2 = (p_Result_20_fu_886_p3 & or_ln406_1_fu_900_p2);

assign and_ln406_fu_817_p2 = (p_Result_17_fu_796_p3 & or_ln406_fu_812_p2);

assign and_ln789_1_fu_997_p2 = (xor_ln789_1_fu_991_p2 & Range2_all_ones_1_fu_949_p2);

assign and_ln789_fu_1084_p2 = (xor_ln789_fu_1078_p2 & Range2_all_ones_reg_1940);

assign and_ln790_1_fu_1160_p2 = (carry_3_reg_1962 & Range1_all_ones_3_reg_1967);

assign and_ln790_fu_1096_p2 = (carry_1_fu_1059_p2 & Range1_all_ones_reg_1945);

assign and_ln795_2_fu_1028_p2 = (p_Result_22_fu_920_p3 & deleted_ones_3_fu_1003_p3);

assign and_ln795_fu_1117_p2 = (p_Result_19_reg_1933 & deleted_ones_fu_1089_p3);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter0_fsm_state10 = ap_CS_iter0_fsm[32'd9];

assign ap_CS_iter0_fsm_state11 = ap_CS_iter0_fsm[32'd10];

assign ap_CS_iter0_fsm_state12 = ap_CS_iter0_fsm[32'd11];

assign ap_CS_iter0_fsm_state13 = ap_CS_iter0_fsm[32'd12];

assign ap_CS_iter0_fsm_state14 = ap_CS_iter0_fsm[32'd13];

assign ap_CS_iter0_fsm_state15 = ap_CS_iter0_fsm[32'd14];

assign ap_CS_iter0_fsm_state16 = ap_CS_iter0_fsm[32'd15];

assign ap_CS_iter0_fsm_state17 = ap_CS_iter0_fsm[32'd16];

assign ap_CS_iter0_fsm_state18 = ap_CS_iter0_fsm[32'd17];

assign ap_CS_iter0_fsm_state19 = ap_CS_iter0_fsm[32'd18];

assign ap_CS_iter0_fsm_state2 = ap_CS_iter0_fsm[32'd1];

assign ap_CS_iter0_fsm_state20 = ap_CS_iter0_fsm[32'd19];

assign ap_CS_iter0_fsm_state21 = ap_CS_iter0_fsm[32'd20];

assign ap_CS_iter0_fsm_state22 = ap_CS_iter0_fsm[32'd21];

assign ap_CS_iter0_fsm_state23 = ap_CS_iter0_fsm[32'd22];

assign ap_CS_iter0_fsm_state24 = ap_CS_iter0_fsm[32'd23];

assign ap_CS_iter0_fsm_state25 = ap_CS_iter0_fsm[32'd24];

assign ap_CS_iter0_fsm_state26 = ap_CS_iter0_fsm[32'd25];

assign ap_CS_iter0_fsm_state27 = ap_CS_iter0_fsm[32'd26];

assign ap_CS_iter0_fsm_state28 = ap_CS_iter0_fsm[32'd27];

assign ap_CS_iter0_fsm_state29 = ap_CS_iter0_fsm[32'd28];

assign ap_CS_iter0_fsm_state3 = ap_CS_iter0_fsm[32'd2];

assign ap_CS_iter0_fsm_state30 = ap_CS_iter0_fsm[32'd29];

assign ap_CS_iter0_fsm_state31 = ap_CS_iter0_fsm[32'd30];

assign ap_CS_iter0_fsm_state32 = ap_CS_iter0_fsm[32'd31];

assign ap_CS_iter0_fsm_state33 = ap_CS_iter0_fsm[32'd32];

assign ap_CS_iter0_fsm_state34 = ap_CS_iter0_fsm[32'd33];

assign ap_CS_iter0_fsm_state35 = ap_CS_iter0_fsm[32'd34];

assign ap_CS_iter0_fsm_state36 = ap_CS_iter0_fsm[32'd35];

assign ap_CS_iter0_fsm_state37 = ap_CS_iter0_fsm[32'd36];

assign ap_CS_iter0_fsm_state38 = ap_CS_iter0_fsm[32'd37];

assign ap_CS_iter0_fsm_state39 = ap_CS_iter0_fsm[32'd38];

assign ap_CS_iter0_fsm_state4 = ap_CS_iter0_fsm[32'd3];

assign ap_CS_iter0_fsm_state40 = ap_CS_iter0_fsm[32'd39];

assign ap_CS_iter0_fsm_state41 = ap_CS_iter0_fsm[32'd40];

assign ap_CS_iter0_fsm_state42 = ap_CS_iter0_fsm[32'd41];

assign ap_CS_iter0_fsm_state43 = ap_CS_iter0_fsm[32'd42];

assign ap_CS_iter0_fsm_state44 = ap_CS_iter0_fsm[32'd43];

assign ap_CS_iter0_fsm_state45 = ap_CS_iter0_fsm[32'd44];

assign ap_CS_iter0_fsm_state46 = ap_CS_iter0_fsm[32'd45];

assign ap_CS_iter0_fsm_state47 = ap_CS_iter0_fsm[32'd46];

assign ap_CS_iter0_fsm_state48 = ap_CS_iter0_fsm[32'd47];

assign ap_CS_iter0_fsm_state49 = ap_CS_iter0_fsm[32'd48];

assign ap_CS_iter0_fsm_state5 = ap_CS_iter0_fsm[32'd4];

assign ap_CS_iter0_fsm_state50 = ap_CS_iter0_fsm[32'd49];

assign ap_CS_iter0_fsm_state51 = ap_CS_iter0_fsm[32'd50];

assign ap_CS_iter0_fsm_state52 = ap_CS_iter0_fsm[32'd51];

assign ap_CS_iter0_fsm_state53 = ap_CS_iter0_fsm[32'd52];

assign ap_CS_iter0_fsm_state54 = ap_CS_iter0_fsm[32'd53];

assign ap_CS_iter0_fsm_state55 = ap_CS_iter0_fsm[32'd54];

assign ap_CS_iter0_fsm_state56 = ap_CS_iter0_fsm[32'd55];

assign ap_CS_iter0_fsm_state57 = ap_CS_iter0_fsm[32'd56];

assign ap_CS_iter0_fsm_state58 = ap_CS_iter0_fsm[32'd57];

assign ap_CS_iter0_fsm_state59 = ap_CS_iter0_fsm[32'd58];

assign ap_CS_iter0_fsm_state6 = ap_CS_iter0_fsm[32'd5];

assign ap_CS_iter0_fsm_state60 = ap_CS_iter0_fsm[32'd59];

assign ap_CS_iter0_fsm_state61 = ap_CS_iter0_fsm[32'd60];

assign ap_CS_iter0_fsm_state62 = ap_CS_iter0_fsm[32'd61];

assign ap_CS_iter0_fsm_state63 = ap_CS_iter0_fsm[32'd62];

assign ap_CS_iter0_fsm_state64 = ap_CS_iter0_fsm[32'd63];

assign ap_CS_iter0_fsm_state65 = ap_CS_iter0_fsm[32'd64];

assign ap_CS_iter0_fsm_state66 = ap_CS_iter0_fsm[32'd65];

assign ap_CS_iter0_fsm_state67 = ap_CS_iter0_fsm[32'd66];

assign ap_CS_iter0_fsm_state68 = ap_CS_iter0_fsm[32'd67];

assign ap_CS_iter0_fsm_state69 = ap_CS_iter0_fsm[32'd68];

assign ap_CS_iter0_fsm_state7 = ap_CS_iter0_fsm[32'd6];

assign ap_CS_iter0_fsm_state70 = ap_CS_iter0_fsm[32'd69];

assign ap_CS_iter0_fsm_state71 = ap_CS_iter0_fsm[32'd70];

assign ap_CS_iter0_fsm_state72 = ap_CS_iter0_fsm[32'd71];

assign ap_CS_iter0_fsm_state73 = ap_CS_iter0_fsm[32'd72];

assign ap_CS_iter0_fsm_state74 = ap_CS_iter0_fsm[32'd73];

assign ap_CS_iter0_fsm_state75 = ap_CS_iter0_fsm[32'd74];

assign ap_CS_iter0_fsm_state76 = ap_CS_iter0_fsm[32'd75];

assign ap_CS_iter0_fsm_state77 = ap_CS_iter0_fsm[32'd76];

assign ap_CS_iter0_fsm_state78 = ap_CS_iter0_fsm[32'd77];

assign ap_CS_iter0_fsm_state79 = ap_CS_iter0_fsm[32'd78];

assign ap_CS_iter0_fsm_state8 = ap_CS_iter0_fsm[32'd7];

assign ap_CS_iter0_fsm_state80 = ap_CS_iter0_fsm[32'd79];

assign ap_CS_iter0_fsm_state81 = ap_CS_iter0_fsm[32'd80];

assign ap_CS_iter0_fsm_state82 = ap_CS_iter0_fsm[32'd81];

assign ap_CS_iter0_fsm_state83 = ap_CS_iter0_fsm[32'd82];

assign ap_CS_iter0_fsm_state84 = ap_CS_iter0_fsm[32'd83];

assign ap_CS_iter0_fsm_state85 = ap_CS_iter0_fsm[32'd84];

assign ap_CS_iter0_fsm_state86 = ap_CS_iter0_fsm[32'd85];

assign ap_CS_iter0_fsm_state9 = ap_CS_iter0_fsm[32'd8];

assign ap_CS_iter1_fsm_state87 = ap_CS_iter1_fsm[32'd1];

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = (output_r_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = (output_r_TREADY_int_regslice == 1'b0);
end

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((aux_in_TVALID_int_regslice == 1'b0) | (main_in_TVALID_int_regslice == 1'b0));
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage64_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage65_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage66_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage67_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage68_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage69_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage70_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage71_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage72_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage73_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage74_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage75_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage76_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage77_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage78_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage79_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage80_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage81_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage82_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage83_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage84_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage85_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state87_pp0_stage0_iter1 = (regslice_both_output_V_data_V_U_apdone_blk == 1'b1);
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign aux_in_TREADY = regslice_both_aux_in_V_data_V_U_ack_in;

assign aux_tmp_data_M_imag_V_fu_272_p4 = {{aux_in_TDATA_int_regslice[31:16]}};

assign aux_tmp_data_M_real_V_fu_267_p1 = aux_in_TDATA_int_regslice[15:0];

assign carry_1_fu_1059_p2 = (xor_ln416_fu_1054_p2 & p_Result_18_fu_1047_p3);

assign carry_3_fu_934_p2 = (xor_ln416_1_fu_928_p2 & p_Result_21_fu_893_p3);

assign conv7_i205_i_fu_774_p1 = $signed(error_imag_V_reg_1893);

assign conv7_i221_i_fu_1034_p1 = $signed(error_real_V_reg_1917);

assign deleted_ones_3_fu_1003_p3 = ((carry_3_fu_934_p2[0:0] == 1'b1) ? and_ln789_1_fu_997_p2 : Range1_all_ones_3_fu_964_p2);

assign deleted_ones_fu_1089_p3 = ((carry_1_fu_1059_p2[0:0] == 1'b1) ? and_ln789_fu_1084_p2 : Range1_all_ones_reg_1945);

assign deleted_zeros_1_fu_976_p3 = ((carry_3_fu_934_p2[0:0] == 1'b1) ? Range1_all_ones_3_fu_964_p2 : Range1_all_zeros_1_fu_970_p2);

assign deleted_zeros_fu_1065_p3 = ((carry_1_fu_1059_p2[0:0] == 1'b1) ? Range1_all_ones_reg_1945 : Range1_all_zeros_reg_1952);

assign error_imag_V_fu_702_p3 = ((xor_ln340_1_fu_690_p2[0:0] == 1'b1) ? select_ln384_5_fu_694_p3 : p_Val2_5_fu_677_p1);

assign error_real_V_fu_766_p3 = ((xor_ln340_fu_754_p2[0:0] == 1'b1) ? select_ln384_fu_758_p3 : p_Val2_3_fu_741_p1);

assign grp_fu_1037_p0 = conv7_i221_i_fu_1034_p1;

assign grp_fu_1037_p1 = sext_ln1169_reg_1617;

assign grp_fu_1042_p0 = conv7_i221_i_fu_1034_p1;

assign grp_fu_1042_p1 = sext_ln1171_3_reg_1636;

assign grp_fu_1255_p0 = grp_fu_1255_p00;

assign grp_fu_1255_p00 = select_ln340_reg_2029;

assign grp_fu_1255_p1 = grp_fu_1255_p10;

assign grp_fu_1255_p10 = mu;

assign grp_fu_1267_p0 = zext_ln1168_fu_1261_p1;

assign grp_fu_1276_p0 = zext_ln1168_fu_1261_p1;

assign grp_fu_1293_p0 = $signed(lhs_V_2_fu_1282_p3);

assign grp_fu_1309_p0 = $signed(lhs_V_5_fu_1298_p3);

assign grp_fu_1552_p0 = sext_ln1169_2_fu_315_p1;

assign grp_fu_1552_p1 = sext_ln1169_2_fu_315_p1;

assign grp_fu_1558_p0 = sext_ln1169_5_fu_319_p1;

assign grp_fu_1558_p1 = sext_ln1169_5_fu_319_p1;

assign grp_fu_1564_p0 = sext_ln1169_3_fu_359_p1;

assign grp_fu_1564_p1 = sext_ln1169_3_fu_359_p1;

assign grp_fu_1572_p0 = sext_ln1169_6_fu_363_p1;

assign grp_fu_1572_p1 = sext_ln1169_6_fu_363_p1;

assign grp_fu_1580_p0 = sext_ln1169_1_fu_370_p1;

assign grp_fu_1580_p1 = sext_ln1169_1_fu_370_p1;

assign grp_fu_1588_p0 = sext_ln1169_4_fu_373_p1;

assign grp_fu_1588_p1 = sext_ln1169_4_fu_373_p1;

assign grp_fu_295_p0 = sext_ln1171_fu_291_p1;

assign grp_fu_305_p0 = sext_ln1171_fu_291_p1;

assign grp_fu_354_p1 = sext_ln1169_reg_1617;

assign grp_fu_726_p1 = grp_fu_726_p10;

assign grp_fu_726_p10 = innerP_V_fu_710_p3;

assign grp_fu_777_p0 = conv7_i205_i_fu_774_p1;

assign grp_fu_777_p1 = sext_ln1171_3_reg_1636;

assign grp_fu_782_p0 = conv7_i205_i_fu_774_p1;

assign grp_fu_782_p1 = sext_ln1169_reg_1617;

assign icmp_ln1551_fu_717_p2 = ((add_ln737_reg_1856 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_1_fu_457_p2 = ((tmp_1_reg_1771 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_2_fu_1386_p2 = ((tmp_2_reg_2103 != 47'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_3_fu_1428_p2 = ((tmp_3_reg_2127 != 47'd0) ? 1'b1 : 1'b0);

assign icmp_ln777_fu_523_p2 = ((tmp_reg_1804 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln795_1_fu_483_p2 = ((tmp_1_reg_1771 != 16'd65535) ? 1'b1 : 1'b0);

assign icmp_ln795_2_fu_1412_p2 = ((tmp_2_reg_2103 != 47'd140737488355327) ? 1'b1 : 1'b0);

assign icmp_ln795_3_fu_1454_p2 = ((tmp_3_reg_2127 != 47'd140737488355327) ? 1'b1 : 1'b0);

assign icmp_ln795_fu_549_p2 = ((tmp_reg_1804 != 17'd131071) ? 1'b1 : 1'b0);

assign innerP_V_fu_710_p3 = {{add_ln737_reg_1856}, {32'd0}};

assign lhs_3_fu_596_p3 = {{tmp_5_fu_587_p4}, {32'd0}};

assign lhs_V_2_fu_1282_p3 = {{lhs_V_1_reg_1625}, {64'd0}};

assign lhs_V_5_fu_1298_p3 = {{lhs_V_4_reg_1660}, {64'd0}};

assign lhs_fu_640_p3 = {{trunc_ln737_fu_637_p1}, {32'd0}};

assign lms_aux_reg_M_imag_V_d0 = {{aux_in_TDATA_int_regslice[31:16]}};

assign main_in_TREADY = regslice_both_main_in_V_data_V_U_ack_in;

assign or_ln340_1_fu_1505_p2 = (underflow_3_reg_2152 | overflow_6_reg_2146);

assign or_ln340_2_fu_1479_p2 = (xor_ln340_2_fu_1474_p2 | overflow_5_reg_2133);

assign or_ln340_3_fu_1520_p2 = (xor_ln340_3_fu_1515_p2 | overflow_6_reg_2146);

assign or_ln340_fu_1470_p2 = (underflow_2_reg_2139 | overflow_5_reg_2133);

assign or_ln384_1_fu_507_p2 = (underflow_1_fu_494_p2 | overflow_1_fu_472_p2);

assign or_ln384_2_fu_1147_p2 = (underflow_4_fu_1134_p2 | overflow_7_fu_1112_p2);

assign or_ln384_3_fu_1187_p2 = (underflow_5_fu_1175_p2 | overflow_8_reg_1972);

assign or_ln384_fu_573_p2 = (underflow_fu_560_p2 | overflow_fu_538_p2);

assign or_ln406_1_fu_900_p2 = (r_1_reg_1907 | p_Result_10_reg_1842);

assign or_ln406_fu_812_p2 = (r_fu_806_p2 | p_Result_8_reg_1874);

assign or_ln794_1_fu_462_p2 = (p_Result_7_reg_1765 | icmp_ln777_1_fu_457_p2);

assign or_ln794_2_fu_1391_p2 = (p_Result_14_reg_2097 | icmp_ln777_2_fu_1386_p2);

assign or_ln794_3_fu_1433_p2 = (p_Result_16_reg_2121 | icmp_ln777_3_fu_1428_p2);

assign or_ln794_4_fu_1107_p2 = (xor_ln794_6_fu_1101_p2 | p_Result_19_reg_1933);

assign or_ln794_5_fu_1017_p2 = (xor_ln794_7_fu_1011_p2 | p_Result_22_fu_920_p3);

assign or_ln794_fu_528_p2 = (p_Result_1_reg_1798 | icmp_ln777_fu_523_p2);

assign or_ln795_1_fu_488_p2 = (xor_ln795_1_fu_478_p2 | icmp_ln795_1_fu_483_p2);

assign or_ln795_2_fu_1417_p2 = (xor_ln795_2_fu_1407_p2 | icmp_ln795_2_fu_1412_p2);

assign or_ln795_3_fu_1459_p2 = (xor_ln795_3_fu_1449_p2 | icmp_ln795_3_fu_1454_p2);

assign or_ln795_4_fu_1122_p2 = (and_ln795_fu_1117_p2 | and_ln790_fu_1096_p2);

assign or_ln795_5_fu_1164_p2 = (and_ln795_2_reg_1978 | and_ln790_1_fu_1160_p2);

assign or_ln795_fu_554_p2 = (xor_ln795_fu_544_p2 | icmp_ln795_fu_549_p2);

assign output_r_TDATA_int_regslice = {{output_tmp_data_M_imag_V_fu_1192_p3}, {output_tmp_data_M_real_V_fu_1153_p3}};

assign output_r_TVALID = regslice_both_output_V_data_V_U_vld_out;

assign output_tmp_data_M_imag_V_fu_1192_p3 = ((or_ln384_3_fu_1187_p2[0:0] == 1'b1) ? select_ln384_8_fu_1180_p3 : p_Val2_16_reg_1957);

assign output_tmp_data_M_real_V_fu_1153_p3 = ((or_ln384_2_fu_1147_p2[0:0] == 1'b1) ? select_ln384_6_fu_1139_p3 : p_Val2_13_reg_1928);

assign overflow_1_fu_472_p2 = (xor_ln794_1_fu_467_p2 & or_ln794_1_fu_462_p2);

assign overflow_2_fu_749_p2 = (xor_ln794_2_fu_744_p2 & p_Result_9_reg_1882);

assign overflow_3_fu_685_p2 = (xor_ln794_3_fu_680_p2 & p_Result_11_reg_1850);

assign overflow_5_fu_1401_p2 = (xor_ln794_4_fu_1396_p2 & or_ln794_2_fu_1391_p2);

assign overflow_6_fu_1443_p2 = (xor_ln794_5_fu_1438_p2 & or_ln794_3_fu_1433_p2);

assign overflow_7_fu_1112_p2 = (xor_ln794_2_reg_1912 & or_ln794_4_fu_1107_p2);

assign overflow_8_fu_1023_p2 = (xor_ln794_3_reg_1888 & or_ln794_5_fu_1017_p2);

assign overflow_fu_538_p2 = (xor_ln794_fu_533_p2 & or_ln794_fu_528_p2);

assign p_Result_12_fu_1232_p3 = ap_phi_mux_p_Val2_6_phi_fu_248_p4[32'd63];

assign p_Result_17_fu_796_p3 = ret_V_10_reg_1862[32'd31];

assign p_Result_18_fu_1047_p3 = ret_V_10_reg_1862[32'd47];

assign p_Result_20_fu_886_p3 = ret_V_11_reg_1830[32'd31];

assign p_Result_21_fu_893_p3 = ret_V_11_reg_1830[32'd47];

assign p_Result_22_fu_920_p3 = p_Val2_16_fu_914_p2[32'd15];

assign p_Result_2_fu_841_p4 = {{ret_V_10_reg_1862[64:49]}};

assign p_Result_3_fu_856_p4 = {{ret_V_10_reg_1862[64:48]}};

assign p_Result_4_fu_940_p4 = {{ret_V_11_reg_1830[64:49]}};

assign p_Result_5_fu_955_p4 = {{ret_V_11_reg_1830[64:48]}};

assign p_Val2_12_fu_787_p4 = {{ret_V_10_reg_1862[47:32]}};

assign p_Val2_13_fu_827_p2 = (p_Val2_12_fu_787_p4 + zext_ln415_fu_823_p1);

assign p_Val2_15_fu_877_p4 = {{ret_V_11_reg_1830[47:32]}};

assign p_Val2_16_fu_914_p2 = (p_Val2_15_fu_877_p4 + zext_ln415_1_fu_910_p1);

assign p_Val2_3_fu_741_p1 = ret_V_10_reg_1862[63:0];

assign p_Val2_5_fu_677_p1 = ret_V_11_reg_1830[63:0];

assign r_1_fu_735_p2 = ((trunc_ln727_1_fu_732_p1 != 31'd0) ? 1'b1 : 1'b0);

assign r_V_10_fu_311_p0 = ap_sig_allocacmp_lhs_V_1;

assign r_V_10_fu_311_p1 = r_V_10_fu_311_p0[15:0];

assign r_V_12_fu_323_p1 = ap_sig_allocacmp_lhs_V_1;

assign r_V_21_fu_380_p2 = (79'd0 - mul_ln1171_reg_1724);

assign r_fu_806_p2 = ((trunc_ln727_fu_803_p1 != 31'd0) ? 1'b1 : 1'b0);

assign ret_V_10_fu_655_p2 = ($signed(sext_ln1246_2_fu_648_p1) - $signed(sext_ln712_fu_652_p1));

assign ret_V_11_fu_611_p2 = ($signed(sext_ln1246_3_fu_604_p1) - $signed(sext_ln712_1_fu_608_p1));

assign ret_V_1_fu_385_p2 = (r_V_3_reg_1702 - mul_ln1171_1_reg_1729);

assign ret_V_4_fu_1214_p2 = ($signed(sext_ln712_2_fu_1208_p1) + $signed(sext_ln712_3_fu_1211_p1));

assign ret_V_6_fu_1220_p2 = (r_V_25_reg_2009 - r_V_26_reg_1999);

assign ret_V_fu_425_p2 = ($signed(sext_ln1246_fu_419_p1) - $signed(sext_ln1246_1_fu_422_p1));

assign select_ln340_3_fu_1484_p3 = ((or_ln340_fu_1470_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : p_Val2_8_reg_2091_pp0_iter0_reg);

assign select_ln340_4_fu_1525_p3 = ((or_ln340_1_fu_1505_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : p_Val2_10_reg_2115_pp0_iter0_reg);

assign select_ln340_5_fu_1497_p3 = ((or_ln340_2_fu_1479_p2[0:0] == 1'b1) ? select_ln340_3_fu_1484_p3 : select_ln388_fu_1491_p3);

assign select_ln340_6_fu_1538_p3 = ((or_ln340_3_fu_1520_p2[0:0] == 1'b1) ? select_ln340_4_fu_1525_p3 : select_ln388_1_fu_1532_p3);

assign select_ln340_fu_1240_p3 = ((p_Result_12_fu_1232_p3[0:0] == 1'b1) ? 63'd9223372036854775807 : trunc_ln755_fu_1228_p1);

assign select_ln384_1_fu_565_p3 = ((overflow_fu_538_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_3_fu_499_p3 = ((overflow_1_fu_472_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_5_fu_694_p3 = ((overflow_3_fu_685_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln384_6_fu_1139_p3 = ((overflow_7_fu_1112_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_8_fu_1180_p3 = ((overflow_8_reg_1972[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_fu_758_p3 = ((overflow_2_fu_749_p2[0:0] == 1'b1) ? 64'd9223372036854775807 : 64'd9223372036854775808);

assign select_ln388_1_fu_1532_p3 = ((underflow_3_reg_2152[0:0] == 1'b1) ? 64'd9223372036854775808 : p_Val2_10_reg_2115_pp0_iter0_reg);

assign select_ln388_fu_1491_p3 = ((underflow_2_reg_2139[0:0] == 1'b1) ? 64'd9223372036854775808 : p_Val2_8_reg_2091_pp0_iter0_reg);

assign sext_ln1169_1_fu_370_p1 = aux_tmp_data_M_real_V_reg_1607;

assign sext_ln1169_2_fu_315_p1 = aux_tmp_data_M_imag_V_fu_272_p4;

assign sext_ln1169_3_fu_359_p1 = $signed(lms_aux_reg_M_real_V_q1);

assign sext_ln1169_4_fu_373_p1 = $signed(r_V_8_reg_1686);

assign sext_ln1169_5_fu_319_p1 = $signed(r_V_10_fu_311_p1);

assign sext_ln1169_6_fu_363_p1 = $signed(r_V_12_reg_1655);

assign sext_ln1169_fu_283_p1 = $signed(aux_tmp_data_M_real_V_fu_267_p1);

assign sext_ln1171_3_fu_301_p1 = aux_tmp_data_M_imag_V_fu_272_p4;

assign sext_ln1171_fu_291_p0 = ap_sig_allocacmp_lhs_V_1;

assign sext_ln1171_fu_291_p1 = sext_ln1171_fu_291_p0;

assign sext_ln1246_1_fu_422_p1 = $signed(r_V_21_reg_1749);

assign sext_ln1246_2_fu_648_p1 = $signed(lhs_fu_640_p3);

assign sext_ln1246_3_fu_604_p1 = $signed(lhs_3_fu_596_p3);

assign sext_ln1246_fu_419_p1 = $signed(r_V_reg_1697);

assign sext_ln712_1_fu_608_p1 = $signed(accum_imag_V_1_reg_1810);

assign sext_ln712_2_fu_1208_p1 = $signed(r_V_22_reg_2004);

assign sext_ln712_3_fu_1211_p1 = $signed(r_V_23_reg_1994);

assign sext_ln712_fu_652_p1 = $signed(accum_real_V_1_reg_1825);

assign tmp_21_fu_1071_p3 = ret_V_10_reg_1862[32'd48];

assign tmp_25_fu_984_p3 = ret_V_11_reg_1830[32'd48];

assign tmp_5_fu_587_p4 = {{p_0_reg_1596[31:16]}};

assign trunc_ln1171_fu_376_p1 = grp_fu_354_p2[63:0];

assign trunc_ln1245_fu_366_p1 = grp_fu_305_p2[63:0];

assign trunc_ln56_fu_1224_p1 = udiv_ln712_reg_2024[63:0];

assign trunc_ln727_1_fu_732_p1 = ret_V_11_reg_1830[30:0];

assign trunc_ln727_fu_803_p1 = ret_V_10_reg_1862[30:0];

assign trunc_ln737_fu_637_p1 = p_0_reg_1596[15:0];

assign trunc_ln755_fu_1228_p1 = ap_phi_mux_p_Val2_6_phi_fu_248_p4[62:0];

assign underflow_1_fu_494_p2 = (p_Result_6_reg_1754 & or_ln795_1_fu_488_p2);

assign underflow_2_fu_1423_p2 = (p_Result_13_reg_2085 & or_ln795_2_fu_1417_p2);

assign underflow_3_fu_1465_p2 = (p_Result_15_reg_2109 & or_ln795_3_fu_1459_p2);

assign underflow_4_fu_1134_p2 = (xor_ln795_4_fu_1128_p2 & p_Result_8_reg_1874);

assign underflow_5_fu_1175_p2 = (xor_ln795_5_fu_1169_p2 & p_Result_10_reg_1842);

assign underflow_fu_560_p2 = (p_Result_s_reg_1792 & or_ln795_fu_554_p2);

assign xor_ln340_1_fu_690_p2 = (p_Result_11_reg_1850 ^ p_Result_10_reg_1842);

assign xor_ln340_2_fu_1474_p2 = (underflow_2_reg_2139 ^ 1'd1);

assign xor_ln340_3_fu_1515_p2 = (underflow_3_reg_2152 ^ 1'd1);

assign xor_ln340_fu_754_p2 = (p_Result_9_reg_1882 ^ p_Result_8_reg_1874);

assign xor_ln416_1_fu_928_p2 = (p_Result_22_fu_920_p3 ^ 1'd1);

assign xor_ln416_fu_1054_p2 = (p_Result_19_reg_1933 ^ 1'd1);

assign xor_ln789_1_fu_991_p2 = (tmp_25_fu_984_p3 ^ 1'd1);

assign xor_ln789_fu_1078_p2 = (tmp_21_fu_1071_p3 ^ 1'd1);

assign xor_ln794_1_fu_467_p2 = (p_Result_6_reg_1754 ^ 1'd1);

assign xor_ln794_2_fu_744_p2 = (p_Result_8_reg_1874 ^ 1'd1);

assign xor_ln794_3_fu_680_p2 = (p_Result_10_reg_1842 ^ 1'd1);

assign xor_ln794_4_fu_1396_p2 = (p_Result_13_reg_2085 ^ 1'd1);

assign xor_ln794_5_fu_1438_p2 = (p_Result_15_reg_2109 ^ 1'd1);

assign xor_ln794_6_fu_1101_p2 = (deleted_zeros_fu_1065_p3 ^ 1'd1);

assign xor_ln794_7_fu_1011_p2 = (deleted_zeros_1_fu_976_p3 ^ 1'd1);

assign xor_ln794_fu_533_p2 = (p_Result_s_reg_1792 ^ 1'd1);

assign xor_ln795_1_fu_478_p2 = (p_Result_7_reg_1765 ^ 1'd1);

assign xor_ln795_2_fu_1407_p2 = (p_Result_14_reg_2097 ^ 1'd1);

assign xor_ln795_3_fu_1449_p2 = (p_Result_16_reg_2121 ^ 1'd1);

assign xor_ln795_4_fu_1128_p2 = (or_ln795_4_fu_1122_p2 ^ 1'd1);

assign xor_ln795_5_fu_1169_p2 = (or_ln795_5_fu_1164_p2 ^ 1'd1);

assign xor_ln795_fu_544_p2 = (p_Result_1_reg_1798 ^ 1'd1);

assign zext_ln1168_fu_1261_p1 = r_V_16_reg_2044;

assign zext_ln415_1_fu_910_p1 = and_ln406_1_fu_904_p2;

assign zext_ln415_fu_823_p1 = and_ln406_fu_817_p2;

endmodule //nlms_module_1tap
