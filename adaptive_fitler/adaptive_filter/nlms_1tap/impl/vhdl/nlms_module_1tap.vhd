-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nlms_module_1tap is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    main_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    main_in_TVALID : IN STD_LOGIC;
    main_in_TREADY : OUT STD_LOGIC;
    main_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    main_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    main_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    aux_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    aux_in_TVALID : IN STD_LOGIC;
    aux_in_TREADY : OUT STD_LOGIC;
    aux_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    aux_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    aux_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    output_r_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_TVALID : OUT STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC;
    output_r_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_r_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    mu : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of nlms_module_1tap is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "nlms_module_1tap_nlms_module_1tap,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-3,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.911000,HLS_SYN_LAT=86,HLS_SYN_TPT=86,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=13499,HLS_SYN_LUT=10057,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_iter0_fsm_state2 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_iter0_fsm_state3 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_iter0_fsm_state4 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_iter0_fsm_state5 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_iter0_fsm_state6 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_iter0_fsm_state7 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_iter0_fsm_state8 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_iter0_fsm_state9 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_iter0_fsm_state10 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_iter0_fsm_state11 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_iter0_fsm_state12 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_iter0_fsm_state13 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_iter0_fsm_state14 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_iter0_fsm_state15 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_iter0_fsm_state16 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_iter0_fsm_state17 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_iter0_fsm_state18 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_iter0_fsm_state19 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_iter0_fsm_state20 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_iter0_fsm_state21 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_iter0_fsm_state22 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_iter0_fsm_state23 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_iter0_fsm_state24 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_iter0_fsm_state25 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_iter0_fsm_state26 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_iter0_fsm_state27 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_iter0_fsm_state28 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_iter0_fsm_state29 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_iter0_fsm_state30 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_iter0_fsm_state31 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state32 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state33 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state34 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state35 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state36 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state37 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state38 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state39 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state40 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state41 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state42 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state43 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state44 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state45 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state46 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state47 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state48 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state49 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state50 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state51 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state52 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state53 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state54 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state55 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state56 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state57 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state58 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state59 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state60 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state61 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state62 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state63 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state64 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state65 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state66 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state67 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state68 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state69 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state70 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state71 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state72 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state73 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state74 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state75 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state76 : STD_LOGIC_VECTOR (85 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state77 : STD_LOGIC_VECTOR (85 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state78 : STD_LOGIC_VECTOR (85 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state79 : STD_LOGIC_VECTOR (85 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state80 : STD_LOGIC_VECTOR (85 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state81 : STD_LOGIC_VECTOR (85 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state82 : STD_LOGIC_VECTOR (85 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state83 : STD_LOGIC_VECTOR (85 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state84 : STD_LOGIC_VECTOR (85 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state85 : STD_LOGIC_VECTOR (85 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter0_fsm_state86 : STD_LOGIC_VECTOR (85 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_iter1_fsm_state87 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv79_0 : STD_LOGIC_VECTOR (78 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv65_10000000000000000 : STD_LOGIC_VECTOR (64 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv63_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (62 downto 0) := "111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv47_0 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000000";
    constant ap_const_lv47_7FFFFFFFFFFF : STD_LOGIC_VECTOR (46 downto 0) := "11111111111111111111111111111111111111111111111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal lms_weights_real : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal lms_weights_imag_V_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal lms_aux_reg_M_real_V_ce0 : STD_LOGIC;
    signal lms_aux_reg_M_real_V_we0 : STD_LOGIC;
    signal lms_aux_reg_M_real_V_ce1 : STD_LOGIC;
    signal lms_aux_reg_M_real_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lms_aux_reg_M_imag_V_ce0 : STD_LOGIC;
    signal lms_aux_reg_M_imag_V_we0 : STD_LOGIC;
    signal lms_aux_reg_M_imag_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lms_aux_reg_M_imag_V_ce1 : STD_LOGIC;
    signal lms_aux_reg_M_imag_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal main_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state87 : STD_LOGIC;
    signal aux_in_TDATA_blk_n : STD_LOGIC;
    signal output_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_iter0_fsm_state10 : STD_LOGIC;
    signal ap_CS_iter0_fsm_state11 : STD_LOGIC;
    signal p_0_reg_1596 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal regslice_both_output_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state87_pp0_stage0_iter1 : BOOLEAN;
    signal p_s_reg_1602 : STD_LOGIC_VECTOR (0 downto 0);
    signal aux_tmp_data_M_real_V_fu_267_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal aux_tmp_data_M_real_V_reg_1607 : STD_LOGIC_VECTOR (15 downto 0);
    signal aux_tmp_data_M_imag_V_fu_272_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal aux_tmp_data_M_imag_V_reg_1612 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1169_fu_283_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal sext_ln1169_reg_1617 : STD_LOGIC_VECTOR (79 downto 0);
    signal lhs_V_1_reg_1625 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1171_fu_291_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal sext_ln1171_3_fu_301_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal sext_ln1171_3_reg_1636 : STD_LOGIC_VECTOR (79 downto 0);
    signal sext_ln1169_2_fu_315_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1169_5_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_12_reg_1655 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_4_reg_1660 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_iter0_fsm_state2 : STD_LOGIC;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal sext_ln1169_3_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_8_reg_1686 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1169_6_fu_363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_reg_1697 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_CS_iter0_fsm_state3 : STD_LOGIC;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal grp_fu_305_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_3_reg_1702 : STD_LOGIC_VECTOR (79 downto 0);
    signal trunc_ln1245_fu_366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1245_reg_1707 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1169_1_fu_370_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1169_4_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal mul_ln1171_reg_1724 : STD_LOGIC_VECTOR (78 downto 0);
    signal ap_CS_iter0_fsm_state4 : STD_LOGIC;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal grp_fu_354_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal mul_ln1171_1_reg_1729 : STD_LOGIC_VECTOR (79 downto 0);
    signal trunc_ln1171_fu_376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1171_reg_1734 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1552_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1558_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_21_fu_380_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_21_reg_1749 : STD_LOGIC_VECTOR (78 downto 0);
    signal ap_CS_iter0_fsm_state5 : STD_LOGIC;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal p_Result_6_reg_1754 : STD_LOGIC_VECTOR (0 downto 0);
    signal accum_imag_V_fu_397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_imag_V_reg_1760 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_7_reg_1765 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1771 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1564_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1572_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_fu_425_p2 : STD_LOGIC_VECTOR (80 downto 0);
    signal ret_V_reg_1787 : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_CS_iter0_fsm_state6 : STD_LOGIC;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal p_Result_s_reg_1792 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_1798 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1804 : STD_LOGIC_VECTOR (16 downto 0);
    signal accum_imag_V_1_fu_513_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_imag_V_1_reg_1810 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1588_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln737_2_reg_1815 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1580_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln737_4_reg_1820 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_real_V_1_fu_579_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_real_V_1_reg_1825 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_iter0_fsm_state7 : STD_LOGIC;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ret_V_11_fu_611_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal ret_V_11_reg_1830 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Result_10_reg_1842 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1850 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln737_fu_633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln737_fu_633_p2 : signal is "no";
    signal add_ln737_reg_1856 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_10_fu_655_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal ret_V_10_reg_1862 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_CS_iter0_fsm_state8 : STD_LOGIC;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal p_Result_8_reg_1874 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_reg_1882 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_3_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_3_reg_1888 : STD_LOGIC_VECTOR (0 downto 0);
    signal error_imag_V_fu_702_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal error_imag_V_reg_1893 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1551_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1551_reg_1898 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_reg_1907 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_2_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_2_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_iter0_fsm_state9 : STD_LOGIC;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal error_real_V_fu_766_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal error_real_V_reg_1917 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv7_i205_i_fu_774_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Val2_13_fu_827_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_13_reg_1928 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_19_reg_1933 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_reg_1940 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_reg_1945 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_reg_1952 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_fu_914_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_16_reg_1957 : STD_LOGIC_VECTOR (15 downto 0);
    signal carry_3_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_3_reg_1962 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_reg_1967 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_8_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_8_reg_1972 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln795_2_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln795_2_reg_1978 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv7_i221_i_fu_1034_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal grp_fu_777_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_23_reg_1994 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal grp_fu_782_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_26_reg_1999 : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_fu_1037_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_22_reg_2004 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_CS_iter0_fsm_state12 : STD_LOGIC;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal grp_fu_1042_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_25_reg_2009 : STD_LOGIC_VECTOR (79 downto 0);
    signal ret_V_4_fu_1214_p2 : STD_LOGIC_VECTOR (80 downto 0);
    signal ret_V_4_reg_2014 : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_CS_iter0_fsm_state13 : STD_LOGIC;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ret_V_6_fu_1220_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal ret_V_6_reg_2019 : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_fu_726_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal udiv_ln712_reg_2024 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_iter0_fsm_state76 : STD_LOGIC;
    signal ap_block_state76_pp0_stage75_iter0 : BOOLEAN;
    signal select_ln340_fu_1240_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal select_ln340_reg_2029 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_CS_iter0_fsm_state77 : STD_LOGIC;
    signal ap_block_state77_pp0_stage76_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state78 : STD_LOGIC;
    signal ap_block_state78_pp0_stage77_iter0 : BOOLEAN;
    signal grp_fu_1255_p2 : STD_LOGIC_VECTOR (94 downto 0);
    signal r_V_16_reg_2044 : STD_LOGIC_VECTOR (94 downto 0);
    signal ap_CS_iter0_fsm_state80 : STD_LOGIC;
    signal ap_block_state80_pp0_stage79_iter0 : BOOLEAN;
    signal zext_ln1168_fu_1261_p1 : STD_LOGIC_VECTOR (174 downto 0);
    signal ap_CS_iter0_fsm_state81 : STD_LOGIC;
    signal ap_block_state81_pp0_stage80_iter0 : BOOLEAN;
    signal grp_fu_1267_p2 : STD_LOGIC_VECTOR (174 downto 0);
    signal r_V_24_reg_2065 : STD_LOGIC_VECTOR (174 downto 0);
    signal ap_CS_iter0_fsm_state83 : STD_LOGIC;
    signal ap_block_state83_pp0_stage82_iter0 : BOOLEAN;
    signal grp_fu_1276_p2 : STD_LOGIC_VECTOR (174 downto 0);
    signal r_V_27_reg_2070 : STD_LOGIC_VECTOR (174 downto 0);
    signal ap_CS_iter0_fsm_state84 : STD_LOGIC;
    signal ap_block_state84_pp0_stage83_iter0 : BOOLEAN;
    signal p_Result_13_reg_2085 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_iter0_fsm_state85 : STD_LOGIC;
    signal ap_block_state85_pp0_stage84_iter0 : BOOLEAN;
    signal p_Val2_8_reg_2091 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_8_reg_2091_pp0_iter0_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_iter0_fsm_state86 : STD_LOGIC;
    signal ap_block_state86_pp0_stage85_iter0 : BOOLEAN;
    signal p_Result_14_reg_2097 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_2103 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Result_15_reg_2109 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_reg_2115 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_10_reg_2115_pp0_iter0_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_16_reg_2121 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_2127 : STD_LOGIC_VECTOR (46 downto 0);
    signal overflow_5_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_5_reg_2133 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_1423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_reg_2139 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_fu_1443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_reg_2146 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_reg_2152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_Val2_6_phi_fu_248_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln56_fu_1224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln340_5_fu_1497_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_lhs_V_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln340_6_fu_1538_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1171_fu_291_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_295_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_305_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_10_fu_311_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_10_fu_311_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_12_fu_323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_354_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_1_fu_385_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal sext_ln1246_fu_419_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal sext_ln1246_1_fu_422_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal icmp_ln777_1_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln794_1_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_1_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln795_1_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln795_1_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln795_1_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_1_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_1_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_3_fu_499_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln777_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln794_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln795_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln795_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln795_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_1_fu_565_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal accum_real_V_fu_520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_587_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_3_fu_596_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1246_3_fu_604_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal sext_ln712_1_fu_608_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal trunc_ln737_fu_637_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_fu_640_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal sext_ln1246_2_fu_648_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal sext_ln712_fu_652_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal overflow_3_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_5_fu_694_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_5_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal innerP_V_fu_710_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_726_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln727_1_fu_732_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal overflow_2_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_fu_758_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_3_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_777_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_777_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_782_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_782_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln727_fu_803_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln406_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_17_fu_796_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_787_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln415_fu_823_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_fu_841_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_fu_856_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal or_ln406_1_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_20_fu_886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_1_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_15_fu_877_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln415_1_fu_910_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_22_fu_920_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_21_fu_893_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_1_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_fu_940_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_fu_955_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal Range1_all_zeros_1_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_984_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln789_1_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln789_1_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_976_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_7_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln794_5_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_1003_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1037_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1037_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1042_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1042_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_18_fu_1047_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1071_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln789_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln789_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1065_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_6_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln794_4_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_1089_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln790_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln795_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln795_4_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln795_4_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_7_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_2_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_6_fu_1139_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln790_1_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln795_5_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln795_5_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln384_3_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_8_fu_1180_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_tmp_data_M_imag_V_fu_1192_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_tmp_data_M_real_V_fu_1153_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln712_2_fu_1208_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal sext_ln712_3_fu_1211_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal p_Result_12_fu_1232_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln755_fu_1228_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_1255_p0 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_1255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1267_p0 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_1276_p0 : STD_LOGIC_VECTOR (94 downto 0);
    signal lhs_V_2_fu_1282_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_1293_p0 : STD_LOGIC_VECTOR (174 downto 0);
    signal lhs_V_5_fu_1298_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_1309_p0 : STD_LOGIC_VECTOR (174 downto 0);
    signal grp_fu_1293_p2 : STD_LOGIC_VECTOR (174 downto 0);
    signal grp_fu_1309_p2 : STD_LOGIC_VECTOR (174 downto 0);
    signal icmp_ln777_2_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln794_2_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_4_fu_1396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln795_2_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln795_2_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln795_2_fu_1417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln777_3_fu_1428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln794_3_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_5_fu_1438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln795_3_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln795_3_fu_1449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln795_3_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_2_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_1479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_3_fu_1484_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln388_fu_1491_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln340_3_fu_1515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_1505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_1520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1525_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln388_1_fu_1532_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1552_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1552_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1558_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1558_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1564_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1564_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1572_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1572_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1580_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1580_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1588_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1588_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_295_ce : STD_LOGIC;
    signal grp_fu_305_ce : STD_LOGIC;
    signal grp_fu_348_ce : STD_LOGIC;
    signal grp_fu_354_ce : STD_LOGIC;
    signal grp_fu_726_ce : STD_LOGIC;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state14 : STD_LOGIC;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state15 : STD_LOGIC;
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state16 : STD_LOGIC;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state17 : STD_LOGIC;
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state18 : STD_LOGIC;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state19 : STD_LOGIC;
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state20 : STD_LOGIC;
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state21 : STD_LOGIC;
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state22 : STD_LOGIC;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state23 : STD_LOGIC;
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state24 : STD_LOGIC;
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state25 : STD_LOGIC;
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state26 : STD_LOGIC;
    signal ap_block_state27_pp0_stage26_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state27 : STD_LOGIC;
    signal ap_block_state28_pp0_stage27_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state28 : STD_LOGIC;
    signal ap_block_state29_pp0_stage28_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state29 : STD_LOGIC;
    signal ap_block_state30_pp0_stage29_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state30 : STD_LOGIC;
    signal ap_block_state31_pp0_stage30_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state31 : STD_LOGIC;
    signal ap_block_state32_pp0_stage31_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state32 : STD_LOGIC;
    signal ap_block_state33_pp0_stage32_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state33 : STD_LOGIC;
    signal ap_block_state34_pp0_stage33_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state34 : STD_LOGIC;
    signal ap_block_state35_pp0_stage34_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state35 : STD_LOGIC;
    signal ap_block_state36_pp0_stage35_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state36 : STD_LOGIC;
    signal ap_block_state37_pp0_stage36_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state37 : STD_LOGIC;
    signal ap_block_state38_pp0_stage37_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state38 : STD_LOGIC;
    signal ap_block_state39_pp0_stage38_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state39 : STD_LOGIC;
    signal ap_block_state40_pp0_stage39_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state40 : STD_LOGIC;
    signal ap_block_state41_pp0_stage40_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state41 : STD_LOGIC;
    signal ap_block_state42_pp0_stage41_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state42 : STD_LOGIC;
    signal ap_block_state43_pp0_stage42_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state43 : STD_LOGIC;
    signal ap_block_state44_pp0_stage43_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state44 : STD_LOGIC;
    signal ap_block_state45_pp0_stage44_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state45 : STD_LOGIC;
    signal ap_block_state46_pp0_stage45_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state46 : STD_LOGIC;
    signal ap_block_state47_pp0_stage46_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state47 : STD_LOGIC;
    signal ap_block_state48_pp0_stage47_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state48 : STD_LOGIC;
    signal ap_block_state49_pp0_stage48_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state49 : STD_LOGIC;
    signal ap_block_state50_pp0_stage49_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state50 : STD_LOGIC;
    signal ap_block_state51_pp0_stage50_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state51 : STD_LOGIC;
    signal ap_block_state52_pp0_stage51_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state52 : STD_LOGIC;
    signal ap_block_state53_pp0_stage52_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state53 : STD_LOGIC;
    signal ap_block_state54_pp0_stage53_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state54 : STD_LOGIC;
    signal ap_block_state55_pp0_stage54_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state55 : STD_LOGIC;
    signal ap_block_state56_pp0_stage55_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state56 : STD_LOGIC;
    signal ap_block_state57_pp0_stage56_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state57 : STD_LOGIC;
    signal ap_block_state58_pp0_stage57_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state58 : STD_LOGIC;
    signal ap_block_state59_pp0_stage58_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state59 : STD_LOGIC;
    signal ap_block_state60_pp0_stage59_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state60 : STD_LOGIC;
    signal ap_block_state61_pp0_stage60_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state61 : STD_LOGIC;
    signal ap_block_state62_pp0_stage61_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state62 : STD_LOGIC;
    signal ap_block_state63_pp0_stage62_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state63 : STD_LOGIC;
    signal ap_block_state64_pp0_stage63_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state64 : STD_LOGIC;
    signal ap_block_state65_pp0_stage64_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state65 : STD_LOGIC;
    signal ap_block_state66_pp0_stage65_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state66 : STD_LOGIC;
    signal ap_block_state67_pp0_stage66_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state67 : STD_LOGIC;
    signal ap_block_state68_pp0_stage67_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state68 : STD_LOGIC;
    signal ap_block_state69_pp0_stage68_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state69 : STD_LOGIC;
    signal ap_block_state70_pp0_stage69_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state70 : STD_LOGIC;
    signal ap_block_state71_pp0_stage70_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state71 : STD_LOGIC;
    signal ap_block_state72_pp0_stage71_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state72 : STD_LOGIC;
    signal ap_block_state73_pp0_stage72_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state73 : STD_LOGIC;
    signal ap_block_state74_pp0_stage73_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state74 : STD_LOGIC;
    signal ap_block_state75_pp0_stage74_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state75 : STD_LOGIC;
    signal grp_fu_777_ce : STD_LOGIC;
    signal grp_fu_782_ce : STD_LOGIC;
    signal grp_fu_1037_ce : STD_LOGIC;
    signal grp_fu_1042_ce : STD_LOGIC;
    signal grp_fu_1255_ce : STD_LOGIC;
    signal ap_block_state79_pp0_stage78_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state79 : STD_LOGIC;
    signal grp_fu_1267_ce : STD_LOGIC;
    signal ap_block_state82_pp0_stage81_iter0 : BOOLEAN;
    signal ap_CS_iter0_fsm_state82 : STD_LOGIC;
    signal grp_fu_1276_ce : STD_LOGIC;
    signal grp_fu_1293_ce : STD_LOGIC;
    signal grp_fu_1309_ce : STD_LOGIC;
    signal grp_fu_1552_ce : STD_LOGIC;
    signal grp_fu_1558_ce : STD_LOGIC;
    signal grp_fu_1564_ce : STD_LOGIC;
    signal grp_fu_1572_ce : STD_LOGIC;
    signal grp_fu_1580_ce : STD_LOGIC;
    signal grp_fu_1588_ce : STD_LOGIC;
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (85 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_iter0_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_iter0_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_iter1_fsm_state87_blk : STD_LOGIC;
    signal regslice_both_main_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal main_in_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal main_in_TVALID_int_regslice : STD_LOGIC;
    signal main_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_main_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_main_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal main_in_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_main_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_main_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_main_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal main_in_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_main_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_main_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_main_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal main_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_main_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_main_in_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_aux_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal aux_in_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal aux_in_TVALID_int_regslice : STD_LOGIC;
    signal aux_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_aux_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_aux_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal aux_in_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_aux_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_aux_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_aux_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal aux_in_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_aux_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_aux_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_aux_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal aux_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_aux_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_aux_in_V_last_V_U_ack_in : STD_LOGIC;
    signal output_r_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal output_r_TVALID_int_regslice : STD_LOGIC;
    signal output_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_output_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_output_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_V_last_V_U_vld_out : STD_LOGIC;
    signal grp_fu_1255_p00 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_1255_p10 : STD_LOGIC_VECTOR (94 downto 0);
    signal grp_fu_726_p10 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component nlms_module_1tap_mul_64s_16s_80_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (79 downto 0) );
    end component;


    component nlms_module_1tap_mul_64s_16s_79_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component nlms_module_1tap_udiv_65s_64ns_64_69_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (64 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component nlms_module_1tap_mul_63ns_32ns_95_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (62 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (94 downto 0) );
    end component;


    component nlms_module_1tap_mul_95ns_81s_175_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (94 downto 0);
        din1 : IN STD_LOGIC_VECTOR (80 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (174 downto 0) );
    end component;


    component nlms_module_1tap_mul_95ns_80s_175_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (94 downto 0);
        din1 : IN STD_LOGIC_VECTOR (79 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (174 downto 0) );
    end component;


    component nlms_module_1tap_add_175s_175ns_175_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (174 downto 0);
        din1 : IN STD_LOGIC_VECTOR (174 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (174 downto 0) );
    end component;


    component nlms_module_1tap_mul_mul_16s_16s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component nlms_module_1tap_mac_muladd_16s_16s_32s_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component nlms_module_1tap_mac_muladd_16s_16s_32ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component nlms_module_1tap_lms_aux_reg_M_real_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component nlms_module_1tap_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    lms_aux_reg_M_real_V_U : component nlms_module_1tap_lms_aux_reg_M_real_V
    generic map (
        DataWidth => 16,
        AddressRange => 1,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv1_0,
        ce0 => lms_aux_reg_M_real_V_ce0,
        we0 => lms_aux_reg_M_real_V_we0,
        d0 => aux_tmp_data_M_real_V_fu_267_p1,
        address1 => ap_const_lv1_0,
        ce1 => lms_aux_reg_M_real_V_ce1,
        q1 => lms_aux_reg_M_real_V_q1);

    lms_aux_reg_M_imag_V_U : component nlms_module_1tap_lms_aux_reg_M_real_V
    generic map (
        DataWidth => 16,
        AddressRange => 1,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ap_const_lv1_0,
        ce0 => lms_aux_reg_M_imag_V_ce0,
        we0 => lms_aux_reg_M_imag_V_we0,
        d0 => lms_aux_reg_M_imag_V_d0,
        address1 => ap_const_lv1_0,
        ce1 => lms_aux_reg_M_imag_V_ce1,
        q1 => lms_aux_reg_M_imag_V_q1);

    mul_64s_16s_80_3_1_U1 : component nlms_module_1tap_mul_64s_16s_80_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 16,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_295_p0,
        din1 => aux_tmp_data_M_real_V_fu_267_p1,
        ce => grp_fu_295_ce,
        dout => grp_fu_295_p2);

    mul_64s_16s_80_3_1_U2 : component nlms_module_1tap_mul_64s_16s_80_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 16,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_305_p0,
        din1 => aux_tmp_data_M_imag_V_fu_272_p4,
        ce => grp_fu_305_ce,
        dout => grp_fu_305_p2);

    mul_64s_16s_79_3_1_U3 : component nlms_module_1tap_mul_64s_16s_79_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 16,
        dout_WIDTH => 79)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => lms_weights_imag_V_0,
        din1 => aux_tmp_data_M_imag_V_reg_1612,
        ce => grp_fu_348_ce,
        dout => grp_fu_348_p2);

    mul_64s_16s_80_3_1_U4 : component nlms_module_1tap_mul_64s_16s_80_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 16,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => lms_weights_imag_V_0,
        din1 => grp_fu_354_p1,
        ce => grp_fu_354_ce,
        dout => grp_fu_354_p2);

    udiv_65s_64ns_64_69_1_U5 : component nlms_module_1tap_udiv_65s_64ns_64_69_1
    generic map (
        ID => 1,
        NUM_STAGE => 69,
        din0_WIDTH => 65,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_const_lv65_10000000000000000,
        din1 => grp_fu_726_p1,
        ce => grp_fu_726_ce,
        dout => grp_fu_726_p2);

    mul_64s_16s_80_3_1_U6 : component nlms_module_1tap_mul_64s_16s_80_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 16,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_777_p0,
        din1 => grp_fu_777_p1,
        ce => grp_fu_777_ce,
        dout => grp_fu_777_p2);

    mul_64s_16s_80_3_1_U7 : component nlms_module_1tap_mul_64s_16s_80_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 16,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_782_p0,
        din1 => grp_fu_782_p1,
        ce => grp_fu_782_ce,
        dout => grp_fu_782_p2);

    mul_64s_16s_80_3_1_U8 : component nlms_module_1tap_mul_64s_16s_80_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 16,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1037_p0,
        din1 => grp_fu_1037_p1,
        ce => grp_fu_1037_ce,
        dout => grp_fu_1037_p2);

    mul_64s_16s_80_3_1_U9 : component nlms_module_1tap_mul_64s_16s_80_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 16,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1042_p0,
        din1 => grp_fu_1042_p1,
        ce => grp_fu_1042_ce,
        dout => grp_fu_1042_p2);

    mul_63ns_32ns_95_3_1_U10 : component nlms_module_1tap_mul_63ns_32ns_95_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 63,
        din1_WIDTH => 32,
        dout_WIDTH => 95)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1255_p0,
        din1 => grp_fu_1255_p1,
        ce => grp_fu_1255_ce,
        dout => grp_fu_1255_p2);

    mul_95ns_81s_175_3_1_U11 : component nlms_module_1tap_mul_95ns_81s_175_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 95,
        din1_WIDTH => 81,
        dout_WIDTH => 175)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1267_p0,
        din1 => ret_V_4_reg_2014,
        ce => grp_fu_1267_ce,
        dout => grp_fu_1267_p2);

    mul_95ns_80s_175_3_1_U12 : component nlms_module_1tap_mul_95ns_80s_175_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 95,
        din1_WIDTH => 80,
        dout_WIDTH => 175)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1276_p0,
        din1 => ret_V_6_reg_2019,
        ce => grp_fu_1276_ce,
        dout => grp_fu_1276_p2);

    add_175s_175ns_175_2_1_U13 : component nlms_module_1tap_add_175s_175ns_175_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 175,
        din1_WIDTH => 175,
        dout_WIDTH => 175)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1293_p0,
        din1 => r_V_24_reg_2065,
        ce => grp_fu_1293_ce,
        dout => grp_fu_1293_p2);

    add_175s_175ns_175_2_1_U14 : component nlms_module_1tap_add_175s_175ns_175_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 175,
        din1_WIDTH => 175,
        dout_WIDTH => 175)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1309_p0,
        din1 => r_V_27_reg_2070,
        ce => grp_fu_1309_ce,
        dout => grp_fu_1309_p2);

    mul_mul_16s_16s_32_4_1_U15 : component nlms_module_1tap_mul_mul_16s_16s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1552_p0,
        din1 => grp_fu_1552_p1,
        ce => grp_fu_1552_ce,
        dout => grp_fu_1552_p2);

    mul_mul_16s_16s_32_4_1_U16 : component nlms_module_1tap_mul_mul_16s_16s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1558_p0,
        din1 => grp_fu_1558_p1,
        ce => grp_fu_1558_ce,
        dout => grp_fu_1558_p2);

    mac_muladd_16s_16s_32s_32_4_1_U17 : component nlms_module_1tap_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1564_p0,
        din1 => grp_fu_1564_p1,
        din2 => grp_fu_1558_p2,
        ce => grp_fu_1564_ce,
        dout => grp_fu_1564_p3);

    mac_muladd_16s_16s_32s_32_4_1_U18 : component nlms_module_1tap_mac_muladd_16s_16s_32s_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1572_p0,
        din1 => grp_fu_1572_p1,
        din2 => grp_fu_1552_p2,
        ce => grp_fu_1572_ce,
        dout => grp_fu_1572_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U19 : component nlms_module_1tap_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1580_p0,
        din1 => grp_fu_1580_p1,
        din2 => grp_fu_1572_p3,
        ce => grp_fu_1580_ce,
        dout => grp_fu_1580_p3);

    mac_muladd_16s_16s_32ns_32_4_1_U20 : component nlms_module_1tap_mac_muladd_16s_16s_32ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1588_p0,
        din1 => grp_fu_1588_p1,
        din2 => grp_fu_1564_p3,
        ce => grp_fu_1588_ce,
        dout => grp_fu_1588_p3);

    regslice_both_main_in_V_data_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => main_in_TDATA,
        vld_in => main_in_TVALID,
        ack_in => regslice_both_main_in_V_data_V_U_ack_in,
        data_out => main_in_TDATA_int_regslice,
        vld_out => main_in_TVALID_int_regslice,
        ack_out => main_in_TREADY_int_regslice,
        apdone_blk => regslice_both_main_in_V_data_V_U_apdone_blk);

    regslice_both_main_in_V_keep_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => main_in_TKEEP,
        vld_in => main_in_TVALID,
        ack_in => regslice_both_main_in_V_keep_V_U_ack_in,
        data_out => main_in_TKEEP_int_regslice,
        vld_out => regslice_both_main_in_V_keep_V_U_vld_out,
        ack_out => main_in_TREADY_int_regslice,
        apdone_blk => regslice_both_main_in_V_keep_V_U_apdone_blk);

    regslice_both_main_in_V_strb_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => main_in_TSTRB,
        vld_in => main_in_TVALID,
        ack_in => regslice_both_main_in_V_strb_V_U_ack_in,
        data_out => main_in_TSTRB_int_regslice,
        vld_out => regslice_both_main_in_V_strb_V_U_vld_out,
        ack_out => main_in_TREADY_int_regslice,
        apdone_blk => regslice_both_main_in_V_strb_V_U_apdone_blk);

    regslice_both_main_in_V_last_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => main_in_TLAST,
        vld_in => main_in_TVALID,
        ack_in => regslice_both_main_in_V_last_V_U_ack_in,
        data_out => main_in_TLAST_int_regslice,
        vld_out => regslice_both_main_in_V_last_V_U_vld_out,
        ack_out => main_in_TREADY_int_regslice,
        apdone_blk => regslice_both_main_in_V_last_V_U_apdone_blk);

    regslice_both_aux_in_V_data_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => aux_in_TDATA,
        vld_in => aux_in_TVALID,
        ack_in => regslice_both_aux_in_V_data_V_U_ack_in,
        data_out => aux_in_TDATA_int_regslice,
        vld_out => aux_in_TVALID_int_regslice,
        ack_out => aux_in_TREADY_int_regslice,
        apdone_blk => regslice_both_aux_in_V_data_V_U_apdone_blk);

    regslice_both_aux_in_V_keep_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => aux_in_TKEEP,
        vld_in => aux_in_TVALID,
        ack_in => regslice_both_aux_in_V_keep_V_U_ack_in,
        data_out => aux_in_TKEEP_int_regslice,
        vld_out => regslice_both_aux_in_V_keep_V_U_vld_out,
        ack_out => aux_in_TREADY_int_regslice,
        apdone_blk => regslice_both_aux_in_V_keep_V_U_apdone_blk);

    regslice_both_aux_in_V_strb_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => aux_in_TSTRB,
        vld_in => aux_in_TVALID,
        ack_in => regslice_both_aux_in_V_strb_V_U_ack_in,
        data_out => aux_in_TSTRB_int_regslice,
        vld_out => regslice_both_aux_in_V_strb_V_U_vld_out,
        ack_out => aux_in_TREADY_int_regslice,
        apdone_blk => regslice_both_aux_in_V_strb_V_U_apdone_blk);

    regslice_both_aux_in_V_last_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => aux_in_TLAST,
        vld_in => aux_in_TVALID,
        ack_in => regslice_both_aux_in_V_last_V_U_ack_in,
        data_out => aux_in_TLAST_int_regslice,
        vld_out => regslice_both_aux_in_V_last_V_U_vld_out,
        ack_out => aux_in_TREADY_int_regslice,
        apdone_blk => regslice_both_aux_in_V_last_V_U_apdone_blk);

    regslice_both_output_V_data_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_r_TDATA_int_regslice,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => output_r_TREADY_int_regslice,
        data_out => output_r_TDATA,
        vld_out => regslice_both_output_V_data_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_V_data_V_U_apdone_blk);

    regslice_both_output_V_keep_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_V_keep_V_U_ack_in_dummy,
        data_out => output_r_TKEEP,
        vld_out => regslice_both_output_V_keep_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_V_keep_V_U_apdone_blk);

    regslice_both_output_V_strb_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_0,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_V_strb_V_U_ack_in_dummy,
        data_out => output_r_TSTRB,
        vld_out => regslice_both_output_V_strb_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_V_strb_V_U_apdone_blk);

    regslice_both_output_V_last_V_U : component nlms_module_1tap_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => p_s_reg_1602,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => regslice_both_output_V_last_V_U_ack_in_dummy,
        data_out => output_r_TLAST,
        vld_out => regslice_both_output_V_last_V_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_V_last_V_U_apdone_blk);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9))) then
                Range1_all_ones_3_reg_1967 <= Range1_all_ones_3_fu_964_p2;
                Range1_all_ones_reg_1945 <= Range1_all_ones_fu_865_p2;
                Range1_all_zeros_reg_1952 <= Range1_all_zeros_fu_871_p2;
                Range2_all_ones_reg_1940 <= Range2_all_ones_fu_850_p2;
                and_ln795_2_reg_1978 <= and_ln795_2_fu_1028_p2;
                carry_3_reg_1962 <= carry_3_fu_934_p2;
                error_real_V_reg_1917 <= error_real_V_fu_766_p3;
                overflow_8_reg_1972 <= overflow_8_fu_1023_p2;
                p_Result_19_reg_1933 <= p_Val2_13_fu_827_p2(15 downto 15);
                p_Val2_13_reg_1928 <= p_Val2_13_fu_827_p2;
                p_Val2_16_reg_1957 <= p_Val2_16_fu_914_p2;
                xor_ln794_2_reg_1912 <= xor_ln794_2_fu_744_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6))) then
                accum_imag_V_1_reg_1810 <= accum_imag_V_1_fu_513_p3;
                add_ln737_2_reg_1815 <= grp_fu_1588_p3;
                add_ln737_4_reg_1820 <= grp_fu_1580_p3;
                p_Result_1_reg_1798 <= ret_V_fu_425_p2(63 downto 63);
                p_Result_s_reg_1792 <= ret_V_fu_425_p2(80 downto 80);
                ret_V_reg_1787 <= ret_V_fu_425_p2;
                tmp_reg_1804 <= ret_V_fu_425_p2(80 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then
                accum_imag_V_reg_1760 <= accum_imag_V_fu_397_p2;
                p_Result_6_reg_1754 <= ret_V_1_fu_385_p2(79 downto 79);
                p_Result_7_reg_1765 <= accum_imag_V_fu_397_p2(63 downto 63);
                r_V_21_reg_1749 <= r_V_21_fu_380_p2;
                tmp_1_reg_1771 <= ret_V_1_fu_385_p2(79 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then
                accum_real_V_1_reg_1825 <= accum_real_V_1_fu_579_p3;
                add_ln737_reg_1856 <= add_ln737_fu_633_p2;
                p_Result_10_reg_1842 <= ret_V_11_fu_611_p2(64 downto 64);
                p_Result_11_reg_1850 <= ret_V_11_fu_611_p2(63 downto 63);
                ret_V_11_reg_1830 <= ret_V_11_fu_611_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                aux_tmp_data_M_imag_V_reg_1612 <= aux_in_TDATA_int_regslice(31 downto 16);
                aux_tmp_data_M_real_V_reg_1607 <= aux_tmp_data_M_real_V_fu_267_p1;
                lhs_V_1_reg_1625 <= ap_sig_allocacmp_lhs_V_1;
                p_0_reg_1596 <= main_in_TDATA_int_regslice;
                p_s_reg_1602 <= main_in_TLAST_int_regslice;
                r_V_12_reg_1655 <= r_V_12_fu_323_p1(31 downto 16);
                sext_ln1169_reg_1617 <= sext_ln1169_fu_283_p1;
                sext_ln1171_3_reg_1636 <= sext_ln1171_3_fu_301_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then
                error_imag_V_reg_1893 <= error_imag_V_fu_702_p3;
                icmp_ln1551_reg_1898 <= icmp_ln1551_fu_717_p2;
                p_Result_8_reg_1874 <= ret_V_10_fu_655_p2(64 downto 64);
                p_Result_9_reg_1882 <= ret_V_10_fu_655_p2(63 downto 63);
                r_1_reg_1907 <= r_1_fu_735_p2;
                ret_V_10_reg_1862 <= ret_V_10_fu_655_p2;
                xor_ln794_3_reg_1888 <= xor_ln794_3_fu_680_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                lhs_V_4_reg_1660 <= lms_weights_imag_V_0;
                r_V_8_reg_1686 <= lms_aux_reg_M_imag_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                lms_weights_imag_V_0 <= select_ln340_6_fu_1538_p3;
                lms_weights_real <= select_ln340_5_fu_1497_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                mul_ln1171_1_reg_1729 <= grp_fu_354_p2;
                mul_ln1171_reg_1724 <= grp_fu_348_p2;
                trunc_ln1171_reg_1734 <= trunc_ln1171_fu_376_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state86))) then
                overflow_5_reg_2133 <= overflow_5_fu_1401_p2;
                overflow_6_reg_2146 <= overflow_6_fu_1443_p2;
                p_Val2_10_reg_2115_pp0_iter0_reg <= p_Val2_10_reg_2115;
                p_Val2_8_reg_2091_pp0_iter0_reg <= p_Val2_8_reg_2091;
                underflow_2_reg_2139 <= underflow_2_fu_1423_p2;
                underflow_3_reg_2152 <= underflow_3_fu_1465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state85))) then
                p_Result_13_reg_2085 <= grp_fu_1293_p2(174 downto 174);
                p_Result_14_reg_2097 <= grp_fu_1293_p2(127 downto 127);
                p_Result_15_reg_2109 <= grp_fu_1309_p2(174 downto 174);
                p_Result_16_reg_2121 <= grp_fu_1309_p2(127 downto 127);
                p_Val2_10_reg_2115 <= grp_fu_1309_p2(127 downto 64);
                p_Val2_8_reg_2091 <= grp_fu_1293_p2(127 downto 64);
                tmp_2_reg_2103 <= grp_fu_1293_p2(174 downto 128);
                tmp_3_reg_2127 <= grp_fu_1309_p2(174 downto 128);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state80))) then
                r_V_16_reg_2044 <= grp_fu_1255_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12))) then
                r_V_22_reg_2004 <= grp_fu_1037_p2;
                r_V_25_reg_2009 <= grp_fu_1042_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11))) then
                r_V_23_reg_1994 <= grp_fu_777_p2;
                r_V_26_reg_1999 <= grp_fu_782_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state83))) then
                r_V_24_reg_2065 <= grp_fu_1267_p2;
                r_V_27_reg_2070 <= grp_fu_1276_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                r_V_3_reg_1702 <= grp_fu_305_p2;
                r_V_reg_1697 <= grp_fu_295_p2;
                trunc_ln1245_reg_1707 <= trunc_ln1245_fu_366_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13))) then
                ret_V_4_reg_2014 <= ret_V_4_fu_1214_p2;
                ret_V_6_reg_2019 <= ret_V_6_fu_1220_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state77))) then
                select_ln340_reg_2029 <= select_ln340_fu_1240_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (icmp_ln1551_reg_1898 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_iter0_fsm_state76))) then
                udiv_ln712_reg_2024 <= grp_fu_726_p2;
            end if;
        end if;
    end process;

    ap_NS_iter0_fsm_assign_proc : process (ap_CS_iter0_fsm, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6, ap_CS_iter0_fsm_state7, ap_CS_iter0_fsm_state8, ap_CS_iter0_fsm_state9, ap_CS_iter0_fsm_state12, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state76, ap_CS_iter0_fsm_state77, ap_CS_iter0_fsm_state78, ap_CS_iter0_fsm_state80, ap_CS_iter0_fsm_state81, ap_CS_iter0_fsm_state83, ap_CS_iter0_fsm_state84, ap_CS_iter0_fsm_state85, ap_CS_iter0_fsm_state14, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state22, ap_CS_iter0_fsm_state23, ap_CS_iter0_fsm_state24, ap_CS_iter0_fsm_state25, ap_CS_iter0_fsm_state26, ap_CS_iter0_fsm_state27, ap_CS_iter0_fsm_state28, ap_CS_iter0_fsm_state29, ap_CS_iter0_fsm_state30, ap_CS_iter0_fsm_state31, ap_CS_iter0_fsm_state32, ap_CS_iter0_fsm_state33, ap_CS_iter0_fsm_state34, ap_CS_iter0_fsm_state35, ap_CS_iter0_fsm_state36, ap_CS_iter0_fsm_state37, ap_CS_iter0_fsm_state38, ap_CS_iter0_fsm_state39, ap_CS_iter0_fsm_state40, ap_CS_iter0_fsm_state41, ap_CS_iter0_fsm_state42, ap_CS_iter0_fsm_state43, ap_CS_iter0_fsm_state44, ap_CS_iter0_fsm_state45, ap_CS_iter0_fsm_state46, ap_CS_iter0_fsm_state47, ap_CS_iter0_fsm_state48, ap_CS_iter0_fsm_state49, ap_CS_iter0_fsm_state50, ap_CS_iter0_fsm_state51, ap_CS_iter0_fsm_state52, ap_CS_iter0_fsm_state53, ap_CS_iter0_fsm_state54, ap_CS_iter0_fsm_state55, ap_CS_iter0_fsm_state56, ap_CS_iter0_fsm_state57, ap_CS_iter0_fsm_state58, ap_CS_iter0_fsm_state59, ap_CS_iter0_fsm_state60, ap_CS_iter0_fsm_state61, ap_CS_iter0_fsm_state62, ap_CS_iter0_fsm_state63, ap_CS_iter0_fsm_state64, ap_CS_iter0_fsm_state65, ap_CS_iter0_fsm_state66, ap_CS_iter0_fsm_state67, ap_CS_iter0_fsm_state68, ap_CS_iter0_fsm_state69, ap_CS_iter0_fsm_state70, ap_CS_iter0_fsm_state71, ap_CS_iter0_fsm_state72, ap_CS_iter0_fsm_state73, ap_CS_iter0_fsm_state74, ap_CS_iter0_fsm_state75, ap_CS_iter0_fsm_state79, ap_CS_iter0_fsm_state82, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice, output_r_TREADY_int_regslice)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                end if;
            when ap_ST_iter0_fsm_state2 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state3;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state2;
                end if;
            when ap_ST_iter0_fsm_state3 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state4;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state3;
                end if;
            when ap_ST_iter0_fsm_state4 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state5;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state4;
                end if;
            when ap_ST_iter0_fsm_state5 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state6;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state5;
                end if;
            when ap_ST_iter0_fsm_state6 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state7;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state6;
                end if;
            when ap_ST_iter0_fsm_state7 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state7))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state8;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state7;
                end if;
            when ap_ST_iter0_fsm_state8 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state9;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state8;
                end if;
            when ap_ST_iter0_fsm_state9 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state10;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state9;
                end if;
            when ap_ST_iter0_fsm_state10 => 
                if ((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state11;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state10;
                end if;
            when ap_ST_iter0_fsm_state11 => 
                if ((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state12;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state11;
                end if;
            when ap_ST_iter0_fsm_state12 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state13;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state12;
                end if;
            when ap_ST_iter0_fsm_state13 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state14;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state13;
                end if;
            when ap_ST_iter0_fsm_state14 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state15;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state14;
                end if;
            when ap_ST_iter0_fsm_state15 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state16;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state15;
                end if;
            when ap_ST_iter0_fsm_state16 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state17;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state16;
                end if;
            when ap_ST_iter0_fsm_state17 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state18;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state17;
                end if;
            when ap_ST_iter0_fsm_state18 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state19;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state18;
                end if;
            when ap_ST_iter0_fsm_state19 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state20;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state19;
                end if;
            when ap_ST_iter0_fsm_state20 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state21;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state20;
                end if;
            when ap_ST_iter0_fsm_state21 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state22;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state21;
                end if;
            when ap_ST_iter0_fsm_state22 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state23;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state22;
                end if;
            when ap_ST_iter0_fsm_state23 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state23))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state24;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state23;
                end if;
            when ap_ST_iter0_fsm_state24 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state24))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state25;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state24;
                end if;
            when ap_ST_iter0_fsm_state25 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state25))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state26;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state25;
                end if;
            when ap_ST_iter0_fsm_state26 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state26))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state27;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state26;
                end if;
            when ap_ST_iter0_fsm_state27 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state27))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state28;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state27;
                end if;
            when ap_ST_iter0_fsm_state28 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state28))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state29;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state28;
                end if;
            when ap_ST_iter0_fsm_state29 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state29))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state30;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state29;
                end if;
            when ap_ST_iter0_fsm_state30 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state30))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state31;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state30;
                end if;
            when ap_ST_iter0_fsm_state31 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state31))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state32;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state31;
                end if;
            when ap_ST_iter0_fsm_state32 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state32))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state33;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state32;
                end if;
            when ap_ST_iter0_fsm_state33 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state33))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state34;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state33;
                end if;
            when ap_ST_iter0_fsm_state34 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state34))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state35;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state34;
                end if;
            when ap_ST_iter0_fsm_state35 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state35))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state36;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state35;
                end if;
            when ap_ST_iter0_fsm_state36 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state36))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state37;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state36;
                end if;
            when ap_ST_iter0_fsm_state37 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state37))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state38;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state37;
                end if;
            when ap_ST_iter0_fsm_state38 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state38))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state39;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state38;
                end if;
            when ap_ST_iter0_fsm_state39 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state39))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state40;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state39;
                end if;
            when ap_ST_iter0_fsm_state40 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state40))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state41;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state40;
                end if;
            when ap_ST_iter0_fsm_state41 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state41))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state42;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state41;
                end if;
            when ap_ST_iter0_fsm_state42 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state42))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state43;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state42;
                end if;
            when ap_ST_iter0_fsm_state43 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state43))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state44;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state43;
                end if;
            when ap_ST_iter0_fsm_state44 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state44))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state45;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state44;
                end if;
            when ap_ST_iter0_fsm_state45 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state45))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state46;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state45;
                end if;
            when ap_ST_iter0_fsm_state46 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state46))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state47;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state46;
                end if;
            when ap_ST_iter0_fsm_state47 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state47))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state48;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state47;
                end if;
            when ap_ST_iter0_fsm_state48 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state48))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state49;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state48;
                end if;
            when ap_ST_iter0_fsm_state49 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state49))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state50;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state49;
                end if;
            when ap_ST_iter0_fsm_state50 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state50))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state51;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state50;
                end if;
            when ap_ST_iter0_fsm_state51 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state51))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state52;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state51;
                end if;
            when ap_ST_iter0_fsm_state52 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state52))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state53;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state52;
                end if;
            when ap_ST_iter0_fsm_state53 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state53))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state54;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state53;
                end if;
            when ap_ST_iter0_fsm_state54 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state54))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state55;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state54;
                end if;
            when ap_ST_iter0_fsm_state55 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state55))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state56;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state55;
                end if;
            when ap_ST_iter0_fsm_state56 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state56))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state57;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state56;
                end if;
            when ap_ST_iter0_fsm_state57 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state57))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state58;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state57;
                end if;
            when ap_ST_iter0_fsm_state58 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state58))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state59;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state58;
                end if;
            when ap_ST_iter0_fsm_state59 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state59))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state60;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state59;
                end if;
            when ap_ST_iter0_fsm_state60 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state60))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state61;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state60;
                end if;
            when ap_ST_iter0_fsm_state61 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state61))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state62;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state61;
                end if;
            when ap_ST_iter0_fsm_state62 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state62))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state63;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state62;
                end if;
            when ap_ST_iter0_fsm_state63 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state63))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state64;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state63;
                end if;
            when ap_ST_iter0_fsm_state64 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state64))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state65;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state64;
                end if;
            when ap_ST_iter0_fsm_state65 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state65))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state66;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state65;
                end if;
            when ap_ST_iter0_fsm_state66 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state66))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state67;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state66;
                end if;
            when ap_ST_iter0_fsm_state67 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state67))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state68;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state67;
                end if;
            when ap_ST_iter0_fsm_state68 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state68))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state69;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state68;
                end if;
            when ap_ST_iter0_fsm_state69 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state69))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state70;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state69;
                end if;
            when ap_ST_iter0_fsm_state70 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state70))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state71;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state70;
                end if;
            when ap_ST_iter0_fsm_state71 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state71))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state72;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state71;
                end if;
            when ap_ST_iter0_fsm_state72 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state72))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state73;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state72;
                end if;
            when ap_ST_iter0_fsm_state73 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state73))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state74;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state73;
                end if;
            when ap_ST_iter0_fsm_state74 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state74))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state75;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state74;
                end if;
            when ap_ST_iter0_fsm_state75 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state75))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state76;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state75;
                end if;
            when ap_ST_iter0_fsm_state76 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state76))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state77;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state76;
                end if;
            when ap_ST_iter0_fsm_state77 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state77))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state78;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state77;
                end if;
            when ap_ST_iter0_fsm_state78 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state78))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state79;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state78;
                end if;
            when ap_ST_iter0_fsm_state79 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state79))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state80;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state79;
                end if;
            when ap_ST_iter0_fsm_state80 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state80))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state81;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state80;
                end if;
            when ap_ST_iter0_fsm_state81 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state81))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state82;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state81;
                end if;
            when ap_ST_iter0_fsm_state82 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state82))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state83;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state82;
                end if;
            when ap_ST_iter0_fsm_state83 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state83))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state84;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state83;
                end if;
            when ap_ST_iter0_fsm_state84 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state84))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state85;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state84;
                end if;
            when ap_ST_iter0_fsm_state85 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state85))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state86;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state85;
                end if;
            when ap_ST_iter0_fsm_state86 => 
                if (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) then
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
                else
                    ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state86;
                end if;
            when others =>  
                ap_NS_iter0_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_CS_iter1_fsm, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state86)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state87 => 
                if (((ap_const_logic_1 = ap_CS_iter0_fsm_state86) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state87;
                elsif (((ap_const_logic_0 = ap_CS_iter0_fsm_state86) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state87;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state86))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state87;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;
    Range1_all_ones_3_fu_964_p2 <= "1" when (p_Result_5_fu_955_p4 = ap_const_lv17_1FFFF) else "0";
    Range1_all_ones_fu_865_p2 <= "1" when (p_Result_3_fu_856_p4 = ap_const_lv17_1FFFF) else "0";
    Range1_all_zeros_1_fu_970_p2 <= "1" when (p_Result_5_fu_955_p4 = ap_const_lv17_0) else "0";
    Range1_all_zeros_fu_871_p2 <= "1" when (p_Result_3_fu_856_p4 = ap_const_lv17_0) else "0";
    Range2_all_ones_1_fu_949_p2 <= "1" when (p_Result_4_fu_940_p4 = ap_const_lv16_FFFF) else "0";
    Range2_all_ones_fu_850_p2 <= "1" when (p_Result_2_fu_841_p4 = ap_const_lv16_FFFF) else "0";
    accum_imag_V_1_fu_513_p3 <= 
        select_ln384_3_fu_499_p3 when (or_ln384_1_fu_507_p2(0) = '1') else 
        accum_imag_V_reg_1760;
    accum_imag_V_fu_397_p2 <= std_logic_vector(unsigned(trunc_ln1245_reg_1707) - unsigned(trunc_ln1171_reg_1734));
    accum_real_V_1_fu_579_p3 <= 
        select_ln384_1_fu_565_p3 when (or_ln384_fu_573_p2(0) = '1') else 
        accum_real_V_fu_520_p1;
    accum_real_V_fu_520_p1 <= ret_V_reg_1787(64 - 1 downto 0);
    add_ln737_fu_633_p2 <= std_logic_vector(signed(add_ln737_4_reg_1820) + signed(add_ln737_2_reg_1815));
    and_ln406_1_fu_904_p2 <= (p_Result_20_fu_886_p3 and or_ln406_1_fu_900_p2);
    and_ln406_fu_817_p2 <= (p_Result_17_fu_796_p3 and or_ln406_fu_812_p2);
    and_ln789_1_fu_997_p2 <= (xor_ln789_1_fu_991_p2 and Range2_all_ones_1_fu_949_p2);
    and_ln789_fu_1084_p2 <= (xor_ln789_fu_1078_p2 and Range2_all_ones_reg_1940);
    and_ln790_1_fu_1160_p2 <= (carry_3_reg_1962 and Range1_all_ones_3_reg_1967);
    and_ln790_fu_1096_p2 <= (carry_1_fu_1059_p2 and Range1_all_ones_reg_1945);
    and_ln795_2_fu_1028_p2 <= (p_Result_22_fu_920_p3 and deleted_ones_3_fu_1003_p3);
    and_ln795_fu_1117_p2 <= (p_Result_19_reg_1933 and deleted_ones_fu_1089_p3);
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter0_fsm_state10 <= ap_CS_iter0_fsm(9);
    ap_CS_iter0_fsm_state11 <= ap_CS_iter0_fsm(10);
    ap_CS_iter0_fsm_state12 <= ap_CS_iter0_fsm(11);
    ap_CS_iter0_fsm_state13 <= ap_CS_iter0_fsm(12);
    ap_CS_iter0_fsm_state14 <= ap_CS_iter0_fsm(13);
    ap_CS_iter0_fsm_state15 <= ap_CS_iter0_fsm(14);
    ap_CS_iter0_fsm_state16 <= ap_CS_iter0_fsm(15);
    ap_CS_iter0_fsm_state17 <= ap_CS_iter0_fsm(16);
    ap_CS_iter0_fsm_state18 <= ap_CS_iter0_fsm(17);
    ap_CS_iter0_fsm_state19 <= ap_CS_iter0_fsm(18);
    ap_CS_iter0_fsm_state2 <= ap_CS_iter0_fsm(1);
    ap_CS_iter0_fsm_state20 <= ap_CS_iter0_fsm(19);
    ap_CS_iter0_fsm_state21 <= ap_CS_iter0_fsm(20);
    ap_CS_iter0_fsm_state22 <= ap_CS_iter0_fsm(21);
    ap_CS_iter0_fsm_state23 <= ap_CS_iter0_fsm(22);
    ap_CS_iter0_fsm_state24 <= ap_CS_iter0_fsm(23);
    ap_CS_iter0_fsm_state25 <= ap_CS_iter0_fsm(24);
    ap_CS_iter0_fsm_state26 <= ap_CS_iter0_fsm(25);
    ap_CS_iter0_fsm_state27 <= ap_CS_iter0_fsm(26);
    ap_CS_iter0_fsm_state28 <= ap_CS_iter0_fsm(27);
    ap_CS_iter0_fsm_state29 <= ap_CS_iter0_fsm(28);
    ap_CS_iter0_fsm_state3 <= ap_CS_iter0_fsm(2);
    ap_CS_iter0_fsm_state30 <= ap_CS_iter0_fsm(29);
    ap_CS_iter0_fsm_state31 <= ap_CS_iter0_fsm(30);
    ap_CS_iter0_fsm_state32 <= ap_CS_iter0_fsm(31);
    ap_CS_iter0_fsm_state33 <= ap_CS_iter0_fsm(32);
    ap_CS_iter0_fsm_state34 <= ap_CS_iter0_fsm(33);
    ap_CS_iter0_fsm_state35 <= ap_CS_iter0_fsm(34);
    ap_CS_iter0_fsm_state36 <= ap_CS_iter0_fsm(35);
    ap_CS_iter0_fsm_state37 <= ap_CS_iter0_fsm(36);
    ap_CS_iter0_fsm_state38 <= ap_CS_iter0_fsm(37);
    ap_CS_iter0_fsm_state39 <= ap_CS_iter0_fsm(38);
    ap_CS_iter0_fsm_state4 <= ap_CS_iter0_fsm(3);
    ap_CS_iter0_fsm_state40 <= ap_CS_iter0_fsm(39);
    ap_CS_iter0_fsm_state41 <= ap_CS_iter0_fsm(40);
    ap_CS_iter0_fsm_state42 <= ap_CS_iter0_fsm(41);
    ap_CS_iter0_fsm_state43 <= ap_CS_iter0_fsm(42);
    ap_CS_iter0_fsm_state44 <= ap_CS_iter0_fsm(43);
    ap_CS_iter0_fsm_state45 <= ap_CS_iter0_fsm(44);
    ap_CS_iter0_fsm_state46 <= ap_CS_iter0_fsm(45);
    ap_CS_iter0_fsm_state47 <= ap_CS_iter0_fsm(46);
    ap_CS_iter0_fsm_state48 <= ap_CS_iter0_fsm(47);
    ap_CS_iter0_fsm_state49 <= ap_CS_iter0_fsm(48);
    ap_CS_iter0_fsm_state5 <= ap_CS_iter0_fsm(4);
    ap_CS_iter0_fsm_state50 <= ap_CS_iter0_fsm(49);
    ap_CS_iter0_fsm_state51 <= ap_CS_iter0_fsm(50);
    ap_CS_iter0_fsm_state52 <= ap_CS_iter0_fsm(51);
    ap_CS_iter0_fsm_state53 <= ap_CS_iter0_fsm(52);
    ap_CS_iter0_fsm_state54 <= ap_CS_iter0_fsm(53);
    ap_CS_iter0_fsm_state55 <= ap_CS_iter0_fsm(54);
    ap_CS_iter0_fsm_state56 <= ap_CS_iter0_fsm(55);
    ap_CS_iter0_fsm_state57 <= ap_CS_iter0_fsm(56);
    ap_CS_iter0_fsm_state58 <= ap_CS_iter0_fsm(57);
    ap_CS_iter0_fsm_state59 <= ap_CS_iter0_fsm(58);
    ap_CS_iter0_fsm_state6 <= ap_CS_iter0_fsm(5);
    ap_CS_iter0_fsm_state60 <= ap_CS_iter0_fsm(59);
    ap_CS_iter0_fsm_state61 <= ap_CS_iter0_fsm(60);
    ap_CS_iter0_fsm_state62 <= ap_CS_iter0_fsm(61);
    ap_CS_iter0_fsm_state63 <= ap_CS_iter0_fsm(62);
    ap_CS_iter0_fsm_state64 <= ap_CS_iter0_fsm(63);
    ap_CS_iter0_fsm_state65 <= ap_CS_iter0_fsm(64);
    ap_CS_iter0_fsm_state66 <= ap_CS_iter0_fsm(65);
    ap_CS_iter0_fsm_state67 <= ap_CS_iter0_fsm(66);
    ap_CS_iter0_fsm_state68 <= ap_CS_iter0_fsm(67);
    ap_CS_iter0_fsm_state69 <= ap_CS_iter0_fsm(68);
    ap_CS_iter0_fsm_state7 <= ap_CS_iter0_fsm(6);
    ap_CS_iter0_fsm_state70 <= ap_CS_iter0_fsm(69);
    ap_CS_iter0_fsm_state71 <= ap_CS_iter0_fsm(70);
    ap_CS_iter0_fsm_state72 <= ap_CS_iter0_fsm(71);
    ap_CS_iter0_fsm_state73 <= ap_CS_iter0_fsm(72);
    ap_CS_iter0_fsm_state74 <= ap_CS_iter0_fsm(73);
    ap_CS_iter0_fsm_state75 <= ap_CS_iter0_fsm(74);
    ap_CS_iter0_fsm_state76 <= ap_CS_iter0_fsm(75);
    ap_CS_iter0_fsm_state77 <= ap_CS_iter0_fsm(76);
    ap_CS_iter0_fsm_state78 <= ap_CS_iter0_fsm(77);
    ap_CS_iter0_fsm_state79 <= ap_CS_iter0_fsm(78);
    ap_CS_iter0_fsm_state8 <= ap_CS_iter0_fsm(7);
    ap_CS_iter0_fsm_state80 <= ap_CS_iter0_fsm(79);
    ap_CS_iter0_fsm_state81 <= ap_CS_iter0_fsm(80);
    ap_CS_iter0_fsm_state82 <= ap_CS_iter0_fsm(81);
    ap_CS_iter0_fsm_state83 <= ap_CS_iter0_fsm(82);
    ap_CS_iter0_fsm_state84 <= ap_CS_iter0_fsm(83);
    ap_CS_iter0_fsm_state85 <= ap_CS_iter0_fsm(84);
    ap_CS_iter0_fsm_state86 <= ap_CS_iter0_fsm(85);
    ap_CS_iter0_fsm_state9 <= ap_CS_iter0_fsm(8);
    ap_CS_iter1_fsm_state87 <= ap_CS_iter1_fsm(1);

    ap_ST_iter0_fsm_state10_blk_assign_proc : process(output_r_TREADY_int_regslice)
    begin
        if ((output_r_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_iter0_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter0_fsm_state11_blk_assign_proc : process(output_r_TREADY_int_regslice)
    begin
        if ((output_r_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_iter0_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_iter0_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_iter0_fsm_state1_blk_assign_proc : process(main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if (((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0))) then 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_iter0_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_iter0_fsm_state9_blk <= ap_const_logic_0;

    ap_ST_iter1_fsm_state87_blk_assign_proc : process(regslice_both_output_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_iter1_fsm_state87_blk <= ap_const_logic_1;
        else 
            ap_ST_iter1_fsm_state87_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(output_r_TREADY_int_regslice)
    begin
                ap_block_state10_pp0_stage9_iter0 <= (output_r_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(output_r_TREADY_int_regslice)
    begin
                ap_block_state11_pp0_stage10_iter0 <= (output_r_TREADY_int_regslice = ap_const_logic_0);
    end process;

        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage22_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage23_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage24_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage25_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage26_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage27_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage28_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage29_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage30_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage31_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage32_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage33_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage34_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage35_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage36_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage37_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage38_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage39_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage40_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage41_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage42_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage43_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage44_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage45_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage46_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage47_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage48_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage49_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage50_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage51_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage52_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage53_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage54_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage55_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage56_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage57_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage58_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage59_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage60_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage61_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage62_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage63_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage64_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage65_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage66_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage67_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage68_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage69_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage70_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage71_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage72_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage73_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage74_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage75_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage76_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage77_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage78_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage79_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage80_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage81_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage82_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage83_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage84_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage85_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state87_pp0_stage0_iter1_assign_proc : process(regslice_both_output_V_data_V_U_apdone_blk)
    begin
                ap_block_state87_pp0_stage0_iter1 <= (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1);
    end process;

        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_phi_mux_p_Val2_6_phi_fu_248_p4_assign_proc : process(icmp_ln1551_reg_1898, trunc_ln56_fu_1224_p1)
    begin
        if ((icmp_ln1551_reg_1898 = ap_const_lv1_0)) then 
            ap_phi_mux_p_Val2_6_phi_fu_248_p4 <= trunc_ln56_fu_1224_p1;
        else 
            ap_phi_mux_p_Val2_6_phi_fu_248_p4 <= ap_const_lv64_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_lhs_V_1_assign_proc : process(lms_weights_real, ap_CS_iter1_fsm_state87, select_ln340_5_fu_1497_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_iter1_fsm_state87)) then 
            ap_sig_allocacmp_lhs_V_1 <= select_ln340_5_fu_1497_p3;
        else 
            ap_sig_allocacmp_lhs_V_1 <= lms_weights_real;
        end if; 
    end process;


    aux_in_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state1, aux_in_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state1)) then 
            aux_in_TDATA_blk_n <= aux_in_TVALID_int_regslice;
        else 
            aux_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aux_in_TREADY <= regslice_both_aux_in_V_data_V_U_ack_in;

    aux_in_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            aux_in_TREADY_int_regslice <= ap_const_logic_1;
        else 
            aux_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    aux_tmp_data_M_imag_V_fu_272_p4 <= aux_in_TDATA_int_regslice(31 downto 16);
    aux_tmp_data_M_real_V_fu_267_p1 <= aux_in_TDATA_int_regslice(16 - 1 downto 0);
    carry_1_fu_1059_p2 <= (xor_ln416_fu_1054_p2 and p_Result_18_fu_1047_p3);
    carry_3_fu_934_p2 <= (xor_ln416_1_fu_928_p2 and p_Result_21_fu_893_p3);
        conv7_i205_i_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(error_imag_V_reg_1893),80));

        conv7_i221_i_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(error_real_V_reg_1917),80));

    deleted_ones_3_fu_1003_p3 <= 
        and_ln789_1_fu_997_p2 when (carry_3_fu_934_p2(0) = '1') else 
        Range1_all_ones_3_fu_964_p2;
    deleted_ones_fu_1089_p3 <= 
        and_ln789_fu_1084_p2 when (carry_1_fu_1059_p2(0) = '1') else 
        Range1_all_ones_reg_1945;
    deleted_zeros_1_fu_976_p3 <= 
        Range1_all_ones_3_fu_964_p2 when (carry_3_fu_934_p2(0) = '1') else 
        Range1_all_zeros_1_fu_970_p2;
    deleted_zeros_fu_1065_p3 <= 
        Range1_all_ones_reg_1945 when (carry_1_fu_1059_p2(0) = '1') else 
        Range1_all_zeros_reg_1952;
    error_imag_V_fu_702_p3 <= 
        select_ln384_5_fu_694_p3 when (xor_ln340_1_fu_690_p2(0) = '1') else 
        p_Val2_5_fu_677_p1;
    error_real_V_fu_766_p3 <= 
        select_ln384_fu_758_p3 when (xor_ln340_fu_754_p2(0) = '1') else 
        p_Val2_3_fu_741_p1;

    grp_fu_1037_ce_assign_proc : process(ap_CS_iter1_fsm_state87, ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state12, output_r_TREADY_int_regslice)
    begin
        if (((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11)) or (not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12)))) then 
            grp_fu_1037_ce <= ap_const_logic_1;
        else 
            grp_fu_1037_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1037_p0 <= conv7_i221_i_fu_1034_p1(64 - 1 downto 0);
    grp_fu_1037_p1 <= sext_ln1169_reg_1617(16 - 1 downto 0);

    grp_fu_1042_ce_assign_proc : process(ap_CS_iter1_fsm_state87, ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state12, output_r_TREADY_int_regslice)
    begin
        if (((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11)) or (not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12)))) then 
            grp_fu_1042_ce <= ap_const_logic_1;
        else 
            grp_fu_1042_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1042_p0 <= conv7_i221_i_fu_1034_p1(64 - 1 downto 0);
    grp_fu_1042_p1 <= sext_ln1171_3_reg_1636(16 - 1 downto 0);

    grp_fu_1255_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state78, ap_CS_iter0_fsm_state80, ap_CS_iter0_fsm_state79)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state80)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state78)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state79)))) then 
            grp_fu_1255_ce <= ap_const_logic_1;
        else 
            grp_fu_1255_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1255_p0 <= grp_fu_1255_p00(63 - 1 downto 0);
    grp_fu_1255_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln340_reg_2029),95));
    grp_fu_1255_p1 <= grp_fu_1255_p10(32 - 1 downto 0);
    grp_fu_1255_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mu),95));

    grp_fu_1267_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state81, ap_CS_iter0_fsm_state83, ap_CS_iter0_fsm_state82)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state83)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state81)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state82)))) then 
            grp_fu_1267_ce <= ap_const_logic_1;
        else 
            grp_fu_1267_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1267_p0 <= zext_ln1168_fu_1261_p1(95 - 1 downto 0);

    grp_fu_1276_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state81, ap_CS_iter0_fsm_state83, ap_CS_iter0_fsm_state82)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state83)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state81)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state82)))) then 
            grp_fu_1276_ce <= ap_const_logic_1;
        else 
            grp_fu_1276_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1276_p0 <= zext_ln1168_fu_1261_p1(95 - 1 downto 0);

    grp_fu_1293_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state84, ap_CS_iter0_fsm_state85)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state85)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state84)))) then 
            grp_fu_1293_ce <= ap_const_logic_1;
        else 
            grp_fu_1293_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_1293_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_2_fu_1282_p3),175));


    grp_fu_1309_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state84, ap_CS_iter0_fsm_state85)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state85)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state84)))) then 
            grp_fu_1309_ce <= ap_const_logic_1;
        else 
            grp_fu_1309_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_1309_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_5_fu_1298_p3),175));


    grp_fu_1552_ce_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if (((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            grp_fu_1552_ce <= ap_const_logic_1;
        else 
            grp_fu_1552_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1552_p0 <= sext_ln1169_2_fu_315_p1(16 - 1 downto 0);
    grp_fu_1552_p1 <= sext_ln1169_2_fu_315_p1(16 - 1 downto 0);

    grp_fu_1558_ce_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if (((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            grp_fu_1558_ce <= ap_const_logic_1;
        else 
            grp_fu_1558_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1558_p0 <= sext_ln1169_5_fu_319_p1(16 - 1 downto 0);
    grp_fu_1558_p1 <= sext_ln1169_5_fu_319_p1(16 - 1 downto 0);

    grp_fu_1564_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            grp_fu_1564_ce <= ap_const_logic_1;
        else 
            grp_fu_1564_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1564_p0 <= sext_ln1169_3_fu_359_p1(16 - 1 downto 0);
    grp_fu_1564_p1 <= sext_ln1169_3_fu_359_p1(16 - 1 downto 0);

    grp_fu_1572_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            grp_fu_1572_ce <= ap_const_logic_1;
        else 
            grp_fu_1572_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1572_p0 <= sext_ln1169_6_fu_363_p1(16 - 1 downto 0);
    grp_fu_1572_p1 <= sext_ln1169_6_fu_363_p1(16 - 1 downto 0);

    grp_fu_1580_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            grp_fu_1580_ce <= ap_const_logic_1;
        else 
            grp_fu_1580_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1580_p0 <= sext_ln1169_1_fu_370_p1(16 - 1 downto 0);
    grp_fu_1580_p1 <= sext_ln1169_1_fu_370_p1(16 - 1 downto 0);

    grp_fu_1588_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4, ap_CS_iter0_fsm_state5, ap_CS_iter0_fsm_state6)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state6)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state5)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)))) then 
            grp_fu_1588_ce <= ap_const_logic_1;
        else 
            grp_fu_1588_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1588_p0 <= sext_ln1169_4_fu_373_p1(16 - 1 downto 0);
    grp_fu_1588_p1 <= sext_ln1169_4_fu_373_p1(16 - 1 downto 0);

    grp_fu_295_ce_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if (((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            grp_fu_295_ce <= ap_const_logic_1;
        else 
            grp_fu_295_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_295_p0 <= sext_ln1171_fu_291_p1(64 - 1 downto 0);

    grp_fu_305_ce_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if (((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            grp_fu_305_ce <= ap_const_logic_1;
        else 
            grp_fu_305_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_305_p0 <= sext_ln1171_fu_291_p1(64 - 1 downto 0);

    grp_fu_348_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            grp_fu_348_ce <= ap_const_logic_1;
        else 
            grp_fu_348_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_354_ce_assign_proc : process(ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state2, ap_CS_iter0_fsm_state3, ap_CS_iter0_fsm_state4)
    begin
        if (((not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state4)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state3)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state2)))) then 
            grp_fu_354_ce <= ap_const_logic_1;
        else 
            grp_fu_354_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_354_p1 <= sext_ln1169_reg_1617(16 - 1 downto 0);

    grp_fu_726_ce_assign_proc : process(ap_CS_iter1_fsm_state87, ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state8, ap_CS_iter0_fsm_state9, ap_CS_iter0_fsm_state12, ap_CS_iter0_fsm_state13, ap_CS_iter0_fsm_state76, ap_CS_iter0_fsm_state14, ap_CS_iter0_fsm_state15, ap_CS_iter0_fsm_state16, ap_CS_iter0_fsm_state17, ap_CS_iter0_fsm_state18, ap_CS_iter0_fsm_state19, ap_CS_iter0_fsm_state20, ap_CS_iter0_fsm_state21, ap_CS_iter0_fsm_state22, ap_CS_iter0_fsm_state23, ap_CS_iter0_fsm_state24, ap_CS_iter0_fsm_state25, ap_CS_iter0_fsm_state26, ap_CS_iter0_fsm_state27, ap_CS_iter0_fsm_state28, ap_CS_iter0_fsm_state29, ap_CS_iter0_fsm_state30, ap_CS_iter0_fsm_state31, ap_CS_iter0_fsm_state32, ap_CS_iter0_fsm_state33, ap_CS_iter0_fsm_state34, ap_CS_iter0_fsm_state35, ap_CS_iter0_fsm_state36, ap_CS_iter0_fsm_state37, ap_CS_iter0_fsm_state38, ap_CS_iter0_fsm_state39, ap_CS_iter0_fsm_state40, ap_CS_iter0_fsm_state41, ap_CS_iter0_fsm_state42, ap_CS_iter0_fsm_state43, ap_CS_iter0_fsm_state44, ap_CS_iter0_fsm_state45, ap_CS_iter0_fsm_state46, ap_CS_iter0_fsm_state47, ap_CS_iter0_fsm_state48, ap_CS_iter0_fsm_state49, ap_CS_iter0_fsm_state50, ap_CS_iter0_fsm_state51, ap_CS_iter0_fsm_state52, ap_CS_iter0_fsm_state53, ap_CS_iter0_fsm_state54, ap_CS_iter0_fsm_state55, ap_CS_iter0_fsm_state56, ap_CS_iter0_fsm_state57, ap_CS_iter0_fsm_state58, ap_CS_iter0_fsm_state59, ap_CS_iter0_fsm_state60, ap_CS_iter0_fsm_state61, ap_CS_iter0_fsm_state62, ap_CS_iter0_fsm_state63, ap_CS_iter0_fsm_state64, ap_CS_iter0_fsm_state65, ap_CS_iter0_fsm_state66, ap_CS_iter0_fsm_state67, ap_CS_iter0_fsm_state68, ap_CS_iter0_fsm_state69, ap_CS_iter0_fsm_state70, ap_CS_iter0_fsm_state71, ap_CS_iter0_fsm_state72, ap_CS_iter0_fsm_state73, ap_CS_iter0_fsm_state74, ap_CS_iter0_fsm_state75, output_r_TREADY_int_regslice)
    begin
        if (((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11)) or (not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state76)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state13)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state12)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state8)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state75)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state74)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state73)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state72)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state71)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state70)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state69)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state68)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state67)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state66)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state65)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state64)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state63)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state62)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state61)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state60)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state59)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state58)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state57)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state56)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state55)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state54)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state53)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state52)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state51)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state50)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state49)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state48)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state47)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state46)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state45)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state44)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state43)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state42)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state41)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state40)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state39)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state38)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state37)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state36)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state35)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state34)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state33)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state32)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state31)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state30)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state29)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state28)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state27)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state26)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state25)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state24)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state23)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state22)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state21)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state20)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state19)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state18)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state17)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state16)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state15)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state14)))) then 
            grp_fu_726_ce <= ap_const_logic_1;
        else 
            grp_fu_726_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_726_p1 <= grp_fu_726_p10(64 - 1 downto 0);
    grp_fu_726_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(innerP_V_fu_710_p3),65));

    grp_fu_777_ce_assign_proc : process(ap_CS_iter1_fsm_state87, ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state9, output_r_TREADY_int_regslice)
    begin
        if (((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11)) or (not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9)))) then 
            grp_fu_777_ce <= ap_const_logic_1;
        else 
            grp_fu_777_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_777_p0 <= conv7_i205_i_fu_774_p1(64 - 1 downto 0);
    grp_fu_777_p1 <= sext_ln1171_3_reg_1636(16 - 1 downto 0);

    grp_fu_782_ce_assign_proc : process(ap_CS_iter1_fsm_state87, ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11, regslice_both_output_V_data_V_U_apdone_blk, ap_CS_iter0_fsm_state9, output_r_TREADY_int_regslice)
    begin
        if (((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state11)) or (not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10)) or (not(((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state9)))) then 
            grp_fu_782_ce <= ap_const_logic_1;
        else 
            grp_fu_782_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_782_p0 <= conv7_i205_i_fu_774_p1(64 - 1 downto 0);
    grp_fu_782_p1 <= sext_ln1169_reg_1617(16 - 1 downto 0);
    icmp_ln1551_fu_717_p2 <= "1" when (add_ln737_reg_1856 = ap_const_lv32_0) else "0";
    icmp_ln777_1_fu_457_p2 <= "0" when (tmp_1_reg_1771 = ap_const_lv16_0) else "1";
    icmp_ln777_2_fu_1386_p2 <= "0" when (tmp_2_reg_2103 = ap_const_lv47_0) else "1";
    icmp_ln777_3_fu_1428_p2 <= "0" when (tmp_3_reg_2127 = ap_const_lv47_0) else "1";
    icmp_ln777_fu_523_p2 <= "0" when (tmp_reg_1804 = ap_const_lv17_0) else "1";
    icmp_ln795_1_fu_483_p2 <= "0" when (tmp_1_reg_1771 = ap_const_lv16_FFFF) else "1";
    icmp_ln795_2_fu_1412_p2 <= "0" when (tmp_2_reg_2103 = ap_const_lv47_7FFFFFFFFFFF) else "1";
    icmp_ln795_3_fu_1454_p2 <= "0" when (tmp_3_reg_2127 = ap_const_lv47_7FFFFFFFFFFF) else "1";
    icmp_ln795_fu_549_p2 <= "0" when (tmp_reg_1804 = ap_const_lv17_1FFFF) else "1";
    innerP_V_fu_710_p3 <= (add_ln737_reg_1856 & ap_const_lv32_0);
    lhs_3_fu_596_p3 <= (tmp_5_fu_587_p4 & ap_const_lv32_0);
    lhs_V_2_fu_1282_p3 <= (lhs_V_1_reg_1625 & ap_const_lv64_0);
    lhs_V_5_fu_1298_p3 <= (lhs_V_4_reg_1660 & ap_const_lv64_0);
    lhs_fu_640_p3 <= (trunc_ln737_fu_637_p1 & ap_const_lv32_0);

    lms_aux_reg_M_imag_V_ce0_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            lms_aux_reg_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            lms_aux_reg_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lms_aux_reg_M_imag_V_ce1_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            lms_aux_reg_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            lms_aux_reg_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lms_aux_reg_M_imag_V_d0 <= aux_in_TDATA_int_regslice(31 downto 16);

    lms_aux_reg_M_imag_V_we0_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            lms_aux_reg_M_imag_V_we0 <= ap_const_logic_1;
        else 
            lms_aux_reg_M_imag_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lms_aux_reg_M_real_V_ce0_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            lms_aux_reg_M_real_V_ce0 <= ap_const_logic_1;
        else 
            lms_aux_reg_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lms_aux_reg_M_real_V_ce1_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            lms_aux_reg_M_real_V_ce1 <= ap_const_logic_1;
        else 
            lms_aux_reg_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lms_aux_reg_M_real_V_we0_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            lms_aux_reg_M_real_V_we0 <= ap_const_logic_1;
        else 
            lms_aux_reg_M_real_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    main_in_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state1, main_in_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_iter0_fsm_state1)) then 
            main_in_TDATA_blk_n <= main_in_TVALID_int_regslice;
        else 
            main_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    main_in_TREADY <= regslice_both_main_in_V_data_V_U_ack_in;

    main_in_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state87, regslice_both_output_V_data_V_U_apdone_blk, main_in_TVALID_int_regslice, aux_in_TVALID_int_regslice)
    begin
        if ((not(((aux_in_TVALID_int_regslice = ap_const_logic_0) or (main_in_TVALID_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            main_in_TREADY_int_regslice <= ap_const_logic_1;
        else 
            main_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    or_ln340_1_fu_1505_p2 <= (underflow_3_reg_2152 or overflow_6_reg_2146);
    or_ln340_2_fu_1479_p2 <= (xor_ln340_2_fu_1474_p2 or overflow_5_reg_2133);
    or_ln340_3_fu_1520_p2 <= (xor_ln340_3_fu_1515_p2 or overflow_6_reg_2146);
    or_ln340_fu_1470_p2 <= (underflow_2_reg_2139 or overflow_5_reg_2133);
    or_ln384_1_fu_507_p2 <= (underflow_1_fu_494_p2 or overflow_1_fu_472_p2);
    or_ln384_2_fu_1147_p2 <= (underflow_4_fu_1134_p2 or overflow_7_fu_1112_p2);
    or_ln384_3_fu_1187_p2 <= (underflow_5_fu_1175_p2 or overflow_8_reg_1972);
    or_ln384_fu_573_p2 <= (underflow_fu_560_p2 or overflow_fu_538_p2);
    or_ln406_1_fu_900_p2 <= (r_1_reg_1907 or p_Result_10_reg_1842);
    or_ln406_fu_812_p2 <= (r_fu_806_p2 or p_Result_8_reg_1874);
    or_ln794_1_fu_462_p2 <= (p_Result_7_reg_1765 or icmp_ln777_1_fu_457_p2);
    or_ln794_2_fu_1391_p2 <= (p_Result_14_reg_2097 or icmp_ln777_2_fu_1386_p2);
    or_ln794_3_fu_1433_p2 <= (p_Result_16_reg_2121 or icmp_ln777_3_fu_1428_p2);
    or_ln794_4_fu_1107_p2 <= (xor_ln794_6_fu_1101_p2 or p_Result_19_reg_1933);
    or_ln794_5_fu_1017_p2 <= (xor_ln794_7_fu_1011_p2 or p_Result_22_fu_920_p3);
    or_ln794_fu_528_p2 <= (p_Result_1_reg_1798 or icmp_ln777_fu_523_p2);
    or_ln795_1_fu_488_p2 <= (xor_ln795_1_fu_478_p2 or icmp_ln795_1_fu_483_p2);
    or_ln795_2_fu_1417_p2 <= (xor_ln795_2_fu_1407_p2 or icmp_ln795_2_fu_1412_p2);
    or_ln795_3_fu_1459_p2 <= (xor_ln795_3_fu_1449_p2 or icmp_ln795_3_fu_1454_p2);
    or_ln795_4_fu_1122_p2 <= (and_ln795_fu_1117_p2 or and_ln790_fu_1096_p2);
    or_ln795_5_fu_1164_p2 <= (and_ln795_2_reg_1978 or and_ln790_1_fu_1160_p2);
    or_ln795_fu_554_p2 <= (xor_ln795_fu_544_p2 or icmp_ln795_fu_549_p2);

    output_r_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state10, ap_CS_iter0_fsm_state11, output_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_iter0_fsm_state11) or (ap_const_logic_1 = ap_CS_iter0_fsm_state10))) then 
            output_r_TDATA_blk_n <= output_r_TREADY_int_regslice;
        else 
            output_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_r_TDATA_int_regslice <= (output_tmp_data_M_imag_V_fu_1192_p3 & output_tmp_data_M_real_V_fu_1153_p3);
    output_r_TVALID <= regslice_both_output_V_data_V_U_vld_out;

    output_r_TVALID_int_regslice_assign_proc : process(ap_CS_iter1_fsm_state87, ap_CS_iter0_fsm_state10, regslice_both_output_V_data_V_U_apdone_blk, output_r_TREADY_int_regslice)
    begin
        if ((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state87) and (regslice_both_output_V_data_V_U_apdone_blk = ap_const_logic_1)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state10))) then 
            output_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            output_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    output_tmp_data_M_imag_V_fu_1192_p3 <= 
        select_ln384_8_fu_1180_p3 when (or_ln384_3_fu_1187_p2(0) = '1') else 
        p_Val2_16_reg_1957;
    output_tmp_data_M_real_V_fu_1153_p3 <= 
        select_ln384_6_fu_1139_p3 when (or_ln384_2_fu_1147_p2(0) = '1') else 
        p_Val2_13_reg_1928;
    overflow_1_fu_472_p2 <= (xor_ln794_1_fu_467_p2 and or_ln794_1_fu_462_p2);
    overflow_2_fu_749_p2 <= (xor_ln794_2_fu_744_p2 and p_Result_9_reg_1882);
    overflow_3_fu_685_p2 <= (xor_ln794_3_fu_680_p2 and p_Result_11_reg_1850);
    overflow_5_fu_1401_p2 <= (xor_ln794_4_fu_1396_p2 and or_ln794_2_fu_1391_p2);
    overflow_6_fu_1443_p2 <= (xor_ln794_5_fu_1438_p2 and or_ln794_3_fu_1433_p2);
    overflow_7_fu_1112_p2 <= (xor_ln794_2_reg_1912 and or_ln794_4_fu_1107_p2);
    overflow_8_fu_1023_p2 <= (xor_ln794_3_reg_1888 and or_ln794_5_fu_1017_p2);
    overflow_fu_538_p2 <= (xor_ln794_fu_533_p2 and or_ln794_fu_528_p2);
    p_Result_12_fu_1232_p3 <= ap_phi_mux_p_Val2_6_phi_fu_248_p4(63 downto 63);
    p_Result_17_fu_796_p3 <= ret_V_10_reg_1862(31 downto 31);
    p_Result_18_fu_1047_p3 <= ret_V_10_reg_1862(47 downto 47);
    p_Result_20_fu_886_p3 <= ret_V_11_reg_1830(31 downto 31);
    p_Result_21_fu_893_p3 <= ret_V_11_reg_1830(47 downto 47);
    p_Result_22_fu_920_p3 <= p_Val2_16_fu_914_p2(15 downto 15);
    p_Result_2_fu_841_p4 <= ret_V_10_reg_1862(64 downto 49);
    p_Result_3_fu_856_p4 <= ret_V_10_reg_1862(64 downto 48);
    p_Result_4_fu_940_p4 <= ret_V_11_reg_1830(64 downto 49);
    p_Result_5_fu_955_p4 <= ret_V_11_reg_1830(64 downto 48);
    p_Val2_12_fu_787_p4 <= ret_V_10_reg_1862(47 downto 32);
    p_Val2_13_fu_827_p2 <= std_logic_vector(unsigned(p_Val2_12_fu_787_p4) + unsigned(zext_ln415_fu_823_p1));
    p_Val2_15_fu_877_p4 <= ret_V_11_reg_1830(47 downto 32);
    p_Val2_16_fu_914_p2 <= std_logic_vector(unsigned(p_Val2_15_fu_877_p4) + unsigned(zext_ln415_1_fu_910_p1));
    p_Val2_3_fu_741_p1 <= ret_V_10_reg_1862(64 - 1 downto 0);
    p_Val2_5_fu_677_p1 <= ret_V_11_reg_1830(64 - 1 downto 0);
    r_1_fu_735_p2 <= "0" when (trunc_ln727_1_fu_732_p1 = ap_const_lv31_0) else "1";
    r_V_10_fu_311_p0 <= ap_sig_allocacmp_lhs_V_1;
    r_V_10_fu_311_p1 <= r_V_10_fu_311_p0(16 - 1 downto 0);
    r_V_12_fu_323_p1 <= ap_sig_allocacmp_lhs_V_1;
    r_V_21_fu_380_p2 <= std_logic_vector(unsigned(ap_const_lv79_0) - unsigned(mul_ln1171_reg_1724));
    r_fu_806_p2 <= "0" when (trunc_ln727_fu_803_p1 = ap_const_lv31_0) else "1";
    ret_V_10_fu_655_p2 <= std_logic_vector(signed(sext_ln1246_2_fu_648_p1) - signed(sext_ln712_fu_652_p1));
    ret_V_11_fu_611_p2 <= std_logic_vector(signed(sext_ln1246_3_fu_604_p1) - signed(sext_ln712_1_fu_608_p1));
    ret_V_1_fu_385_p2 <= std_logic_vector(unsigned(r_V_3_reg_1702) - unsigned(mul_ln1171_1_reg_1729));
    ret_V_4_fu_1214_p2 <= std_logic_vector(signed(sext_ln712_2_fu_1208_p1) + signed(sext_ln712_3_fu_1211_p1));
    ret_V_6_fu_1220_p2 <= std_logic_vector(unsigned(r_V_25_reg_2009) - unsigned(r_V_26_reg_1999));
    ret_V_fu_425_p2 <= std_logic_vector(signed(sext_ln1246_fu_419_p1) - signed(sext_ln1246_1_fu_422_p1));
    select_ln340_3_fu_1484_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (or_ln340_fu_1470_p2(0) = '1') else 
        p_Val2_8_reg_2091_pp0_iter0_reg;
    select_ln340_4_fu_1525_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (or_ln340_1_fu_1505_p2(0) = '1') else 
        p_Val2_10_reg_2115_pp0_iter0_reg;
    select_ln340_5_fu_1497_p3 <= 
        select_ln340_3_fu_1484_p3 when (or_ln340_2_fu_1479_p2(0) = '1') else 
        select_ln388_fu_1491_p3;
    select_ln340_6_fu_1538_p3 <= 
        select_ln340_4_fu_1525_p3 when (or_ln340_3_fu_1520_p2(0) = '1') else 
        select_ln388_1_fu_1532_p3;
    select_ln340_fu_1240_p3 <= 
        ap_const_lv63_7FFFFFFFFFFFFFFF when (p_Result_12_fu_1232_p3(0) = '1') else 
        trunc_ln755_fu_1228_p1;
    select_ln384_1_fu_565_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (overflow_fu_538_p2(0) = '1') else 
        ap_const_lv64_8000000000000000;
    select_ln384_3_fu_499_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (overflow_1_fu_472_p2(0) = '1') else 
        ap_const_lv64_8000000000000000;
    select_ln384_5_fu_694_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (overflow_3_fu_685_p2(0) = '1') else 
        ap_const_lv64_8000000000000000;
    select_ln384_6_fu_1139_p3 <= 
        ap_const_lv16_7FFF when (overflow_7_fu_1112_p2(0) = '1') else 
        ap_const_lv16_8000;
    select_ln384_8_fu_1180_p3 <= 
        ap_const_lv16_7FFF when (overflow_8_reg_1972(0) = '1') else 
        ap_const_lv16_8000;
    select_ln384_fu_758_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (overflow_2_fu_749_p2(0) = '1') else 
        ap_const_lv64_8000000000000000;
    select_ln388_1_fu_1532_p3 <= 
        ap_const_lv64_8000000000000000 when (underflow_3_reg_2152(0) = '1') else 
        p_Val2_10_reg_2115_pp0_iter0_reg;
    select_ln388_fu_1491_p3 <= 
        ap_const_lv64_8000000000000000 when (underflow_2_reg_2139(0) = '1') else 
        p_Val2_8_reg_2091_pp0_iter0_reg;
        sext_ln1169_1_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(aux_tmp_data_M_real_V_reg_1607),32));

        sext_ln1169_2_fu_315_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(aux_tmp_data_M_imag_V_fu_272_p4),32));

        sext_ln1169_3_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lms_aux_reg_M_real_V_q1),32));

        sext_ln1169_4_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_reg_1686),32));

        sext_ln1169_5_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_fu_311_p1),32));

        sext_ln1169_6_fu_363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_12_reg_1655),32));

        sext_ln1169_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(aux_tmp_data_M_real_V_fu_267_p1),80));

        sext_ln1171_3_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(aux_tmp_data_M_imag_V_fu_272_p4),80));

    sext_ln1171_fu_291_p0 <= ap_sig_allocacmp_lhs_V_1;
        sext_ln1171_fu_291_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1171_fu_291_p0),80));

        sext_ln1246_1_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_21_reg_1749),81));

        sext_ln1246_2_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_fu_640_p3),65));

        sext_ln1246_3_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_3_fu_596_p3),65));

        sext_ln1246_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_reg_1697),81));

        sext_ln712_1_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accum_imag_V_1_reg_1810),65));

        sext_ln712_2_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_22_reg_2004),81));

        sext_ln712_3_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_23_reg_1994),81));

        sext_ln712_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(accum_real_V_1_reg_1825),65));

    tmp_21_fu_1071_p3 <= ret_V_10_reg_1862(48 downto 48);
    tmp_25_fu_984_p3 <= ret_V_11_reg_1830(48 downto 48);
    tmp_5_fu_587_p4 <= p_0_reg_1596(31 downto 16);
    trunc_ln1171_fu_376_p1 <= grp_fu_354_p2(64 - 1 downto 0);
    trunc_ln1245_fu_366_p1 <= grp_fu_305_p2(64 - 1 downto 0);
    trunc_ln56_fu_1224_p1 <= udiv_ln712_reg_2024(64 - 1 downto 0);
    trunc_ln727_1_fu_732_p1 <= ret_V_11_reg_1830(31 - 1 downto 0);
    trunc_ln727_fu_803_p1 <= ret_V_10_reg_1862(31 - 1 downto 0);
    trunc_ln737_fu_637_p1 <= p_0_reg_1596(16 - 1 downto 0);
    trunc_ln755_fu_1228_p1 <= ap_phi_mux_p_Val2_6_phi_fu_248_p4(63 - 1 downto 0);
    underflow_1_fu_494_p2 <= (p_Result_6_reg_1754 and or_ln795_1_fu_488_p2);
    underflow_2_fu_1423_p2 <= (p_Result_13_reg_2085 and or_ln795_2_fu_1417_p2);
    underflow_3_fu_1465_p2 <= (p_Result_15_reg_2109 and or_ln795_3_fu_1459_p2);
    underflow_4_fu_1134_p2 <= (xor_ln795_4_fu_1128_p2 and p_Result_8_reg_1874);
    underflow_5_fu_1175_p2 <= (xor_ln795_5_fu_1169_p2 and p_Result_10_reg_1842);
    underflow_fu_560_p2 <= (p_Result_s_reg_1792 and or_ln795_fu_554_p2);
    xor_ln340_1_fu_690_p2 <= (p_Result_11_reg_1850 xor p_Result_10_reg_1842);
    xor_ln340_2_fu_1474_p2 <= (underflow_2_reg_2139 xor ap_const_lv1_1);
    xor_ln340_3_fu_1515_p2 <= (underflow_3_reg_2152 xor ap_const_lv1_1);
    xor_ln340_fu_754_p2 <= (p_Result_9_reg_1882 xor p_Result_8_reg_1874);
    xor_ln416_1_fu_928_p2 <= (p_Result_22_fu_920_p3 xor ap_const_lv1_1);
    xor_ln416_fu_1054_p2 <= (p_Result_19_reg_1933 xor ap_const_lv1_1);
    xor_ln789_1_fu_991_p2 <= (tmp_25_fu_984_p3 xor ap_const_lv1_1);
    xor_ln789_fu_1078_p2 <= (tmp_21_fu_1071_p3 xor ap_const_lv1_1);
    xor_ln794_1_fu_467_p2 <= (p_Result_6_reg_1754 xor ap_const_lv1_1);
    xor_ln794_2_fu_744_p2 <= (p_Result_8_reg_1874 xor ap_const_lv1_1);
    xor_ln794_3_fu_680_p2 <= (p_Result_10_reg_1842 xor ap_const_lv1_1);
    xor_ln794_4_fu_1396_p2 <= (p_Result_13_reg_2085 xor ap_const_lv1_1);
    xor_ln794_5_fu_1438_p2 <= (p_Result_15_reg_2109 xor ap_const_lv1_1);
    xor_ln794_6_fu_1101_p2 <= (deleted_zeros_fu_1065_p3 xor ap_const_lv1_1);
    xor_ln794_7_fu_1011_p2 <= (deleted_zeros_1_fu_976_p3 xor ap_const_lv1_1);
    xor_ln794_fu_533_p2 <= (p_Result_s_reg_1792 xor ap_const_lv1_1);
    xor_ln795_1_fu_478_p2 <= (p_Result_7_reg_1765 xor ap_const_lv1_1);
    xor_ln795_2_fu_1407_p2 <= (p_Result_14_reg_2097 xor ap_const_lv1_1);
    xor_ln795_3_fu_1449_p2 <= (p_Result_16_reg_2121 xor ap_const_lv1_1);
    xor_ln795_4_fu_1128_p2 <= (or_ln795_4_fu_1122_p2 xor ap_const_lv1_1);
    xor_ln795_5_fu_1169_p2 <= (or_ln795_5_fu_1164_p2 xor ap_const_lv1_1);
    xor_ln795_fu_544_p2 <= (p_Result_1_reg_1798 xor ap_const_lv1_1);
    zext_ln1168_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_16_reg_2044),175));
    zext_ln415_1_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln406_1_fu_904_p2),16));
    zext_ln415_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln406_fu_817_p2),16));
end behav;
